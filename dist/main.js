/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ethersproject/abi/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"abi/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/abi-coder.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/abi-coder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbiCoder\": () => (/* binding */ AbiCoder),\n/* harmony export */   \"defaultAbiCoder\": () => (/* binding */ defaultAbiCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./coders/abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _coders_address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./coders/address */ \"./node_modules/@ethersproject/abi/lib.esm/coders/address.js\");\n/* harmony import */ var _coders_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coders/array */ \"./node_modules/@ethersproject/abi/lib.esm/coders/array.js\");\n/* harmony import */ var _coders_boolean__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./coders/boolean */ \"./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js\");\n/* harmony import */ var _coders_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coders/bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js\");\n/* harmony import */ var _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./coders/fixed-bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js\");\n/* harmony import */ var _coders_null__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./coders/null */ \"./node_modules/@ethersproject/abi/lib.esm/coders/null.js\");\n/* harmony import */ var _coders_number__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./coders/number */ \"./node_modules/@ethersproject/abi/lib.esm/coders/number.js\");\n/* harmony import */ var _coders_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coders/string */ \"./node_modules/@ethersproject/abi/lib.esm/coders/string.js\");\n/* harmony import */ var _coders_tuple__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./coders/tuple */ \"./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js\");\n/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fragments */ \"./node_modules/@ethersproject/abi/lib.esm/fragments.js\");\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n\n\n\n\n\n\n\n\n\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nclass AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new _coders_address__WEBPACK_IMPORTED_MODULE_3__.AddressCoder(param.name);\n            case \"bool\":\n                return new _coders_boolean__WEBPACK_IMPORTED_MODULE_4__.BooleanCoder(param.name);\n            case \"string\":\n                return new _coders_string__WEBPACK_IMPORTED_MODULE_5__.StringCoder(param.name);\n            case \"bytes\":\n                return new _coders_bytes__WEBPACK_IMPORTED_MODULE_6__.BytesCoder(param.name);\n            case \"array\":\n                return new _coders_array__WEBPACK_IMPORTED_MODULE_7__.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new _coders_null__WEBPACK_IMPORTED_MODULE_9__.NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new _coders_number__WEBPACK_IMPORTED_MODULE_10__.NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_11__.FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_12__.Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));\n        const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));\n        const coder = (new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_13__.ParamType.from(type)));\n        const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_8__.TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__.arrayify)(data), loose));\n    }\n}\nconst defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkResultErrors\": () => (/* binding */ checkResultErrors),\n/* harmony export */   \"Coder\": () => (/* binding */ Coder),\n/* harmony export */   \"Writer\": () => (/* binding */ Writer),\n/* harmony export */   \"Reader\": () => (/* binding */ Reader)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nclass Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nclass Writer {\n    constructor(wordSize) {\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nclass Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"_data\", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data));\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"_coerceFunc\", coerceFunc);\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/address.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/address.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddressCoder\": () => (/* binding */ AddressCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n\nclass AddressCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexZeroPad)(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/address.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AnonymousCoder\": () => (/* binding */ AnonymousCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n// Clones the functionality of an existing Coder, but without a localName\nclass AnonymousCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pack\": () => (/* binding */ pack),\n/* harmony export */   \"unpack\": () => (/* binding */ unpack),\n/* harmony export */   \"ArrayCoder\": () => (/* binding */ ArrayCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _anonymous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./anonymous */ \"./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js\");\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n\n\nfunction pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);\n    let dynamicWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nfunction unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nclass ArrayCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new _anonymous__WEBPACK_IMPORTED_MODULE_3__.AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/array.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BooleanCoder\": () => (/* binding */ BooleanCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\nclass BooleanCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DynamicBytesCoder\": () => (/* binding */ DynamicBytesCoder),\n/* harmony export */   \"BytesCoder\": () => (/* binding */ BytesCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\nclass DynamicBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nclass BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FixedBytesCoder\": () => (/* binding */ FixedBytesCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n// @TODO: Merge this with bytes\nclass FixedBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/null.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/null.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NullCoder\": () => (/* binding */ NullCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\nclass NullCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/null.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/number.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/number.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NumberCoder\": () => (/* binding */ NumberCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/constants */ \"./node_modules/@ethersproject/constants/lib.esm/bignumbers.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n\nclass NumberCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__.BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.One).mul(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/number.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/string.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StringCoder\": () => (/* binding */ StringCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js\");\n\n\n\nclass StringCoder extends _bytes__WEBPACK_IMPORTED_MODULE_0__.DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(value));\n    }\n    decode(reader) {\n        return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8String)(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/string.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TupleCoder\": () => (/* binding */ TupleCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ \"./node_modules/@ethersproject/abi/lib.esm/coders/array.js\");\n\n\n\nclass TupleCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return (0,_array__WEBPACK_IMPORTED_MODULE_1__.pack)(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, (0,_array__WEBPACK_IMPORTED_MODULE_1__.unpack)(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/fragments.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/fragments.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormatTypes\": () => (/* binding */ FormatTypes),\n/* harmony export */   \"ParamType\": () => (/* binding */ ParamType),\n/* harmony export */   \"Fragment\": () => (/* binding */ Fragment),\n/* harmony export */   \"EventFragment\": () => (/* binding */ EventFragment),\n/* harmony export */   \"ConstructorFragment\": () => (/* binding */ ConstructorFragment),\n/* harmony export */   \"FunctionFragment\": () => (/* binding */ FunctionFragment),\n/* harmony export */   \"ErrorFragment\": () => (/* binding */ ErrorFragment)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(object, key, params[key]);\n    }\n}\nconst FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nclass ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nclass Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nclass EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nclass ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nclass FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nclass ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/fragments.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/interface.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/interface.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkResultErrors\": () => (/* reexport safe */ _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__.checkResultErrors),\n/* harmony export */   \"LogDescription\": () => (/* binding */ LogDescription),\n/* harmony export */   \"TransactionDescription\": () => (/* binding */ TransactionDescription),\n/* harmony export */   \"ErrorDescription\": () => (/* binding */ ErrorDescription),\n/* harmony export */   \"Indexed\": () => (/* binding */ Indexed),\n/* harmony export */   \"Interface\": () => (/* binding */ Interface)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/hash */ \"./node_modules/@ethersproject/hash/lib.esm/id.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _abi_coder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./abi-coder */ \"./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coders/abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fragments */ \"./node_modules/@ethersproject/abi/lib.esm/fragments.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n\nclass LogDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {\n}\nclass TransactionDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {\n}\nclass ErrorDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {\n}\nclass Indexed extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nclass Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"fragments\", abi.map((fragment) => {\n            return _fragments__WEBPACK_IMPORTED_MODULE_4__.Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"_abiCoder\", (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(new.target, \"getAbiCoder\")());\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"functions\", {});\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"errors\", {});\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"events\", {});\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"deploy\", _fragments__WEBPACK_IMPORTED_MODULE_4__.ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.defineReadOnly)(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.full;\n        }\n        if (format === _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === _fragments__WEBPACK_IMPORTED_MODULE_4__.FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return _abi_coder__WEBPACK_IMPORTED_MODULE_5__.defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getAddress)(address);\n    }\n    static getSighash(fragment) {\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexDataSlice)((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[_fragments__WEBPACK_IMPORTED_MODULE_4__.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[_fragments__WEBPACK_IMPORTED_MODULE_4__.EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrSighash)) {\n            const getSighash = (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[_fragments__WEBPACK_IMPORTED_MODULE_4__.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_3__.getStatic)(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);\n        let reason = null;\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value);\n            }\n            else if (param.type === \"bytes\") {\n                return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexZeroPad)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(_fragments__WEBPACK_IMPORTED_MODULE_4__.ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__.BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/abi/lib.esm/interface.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"address/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/address/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAddress\": () => (/* binding */ getAddress),\n/* harmony export */   \"isAddress\": () => (/* binding */ isAddress),\n/* harmony export */   \"getIcapAddress\": () => (/* binding */ getIcapAddress),\n/* harmony export */   \"getContractAddress\": () => (/* binding */ getContractAddress),\n/* harmony export */   \"getCreate2Address\": () => (/* binding */ getCreate2Address)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/rlp */ \"./node_modules/@ethersproject/rlp/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/address/lib.esm/_version.js\");\n\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction getChecksumAddress(address) {\n    if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base36To16)(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nfunction isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nfunction getIcapAddress(address) {\n    let base36 = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base16To36)(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.stripZeros)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__.encode)([from, nonce])), 12));\n}\nfunction getCreate2Address(from, salt, initCodeHash) {\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/address/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"bignumber/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/bignumber/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBigNumberish\": () => (/* binding */ isBigNumberish),\n/* harmony export */   \"BigNumber\": () => (/* binding */ BigNumber),\n/* harmony export */   \"_base36To16\": () => (/* binding */ _base36To16),\n/* harmony export */   \"_base16To36\": () => (/* binding */ _base16To36)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/bignumber/lib.esm/_version.js\");\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nvar BN = (bn_js__WEBPACK_IMPORTED_MODULE_0___default().BN);\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nfunction isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(value) ||\n        (typeof (value) === \"bigint\") ||\n        (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nclass BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(anyValue)) {\n            return BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex) || (hex[0] === \"-\" && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nfunction _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nfunction _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/_version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/_version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/bytes/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBytesLike\": () => (/* binding */ isBytesLike),\n/* harmony export */   \"isBytes\": () => (/* binding */ isBytes),\n/* harmony export */   \"arrayify\": () => (/* binding */ arrayify),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"stripZeros\": () => (/* binding */ stripZeros),\n/* harmony export */   \"zeroPad\": () => (/* binding */ zeroPad),\n/* harmony export */   \"isHexString\": () => (/* binding */ isHexString),\n/* harmony export */   \"hexlify\": () => (/* binding */ hexlify),\n/* harmony export */   \"hexDataLength\": () => (/* binding */ hexDataLength),\n/* harmony export */   \"hexDataSlice\": () => (/* binding */ hexDataSlice),\n/* harmony export */   \"hexConcat\": () => (/* binding */ hexConcat),\n/* harmony export */   \"hexValue\": () => (/* binding */ hexValue),\n/* harmony export */   \"hexStripZeros\": () => (/* binding */ hexStripZeros),\n/* harmony export */   \"hexZeroPad\": () => (/* binding */ hexZeroPad),\n/* harmony export */   \"splitSignature\": () => (/* binding */ splitSignature),\n/* harmony export */   \"joinSignature\": () => (/* binding */ joinSignature)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/bytes/lib.esm/_version.js\");\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nfunction stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nfunction zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nfunction hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nfunction hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nfunction hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nfunction hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nfunction hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nfunction hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nfunction hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nfunction splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nfunction joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/bytes/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NegativeOne\": () => (/* binding */ NegativeOne),\n/* harmony export */   \"Zero\": () => (/* binding */ Zero),\n/* harmony export */   \"One\": () => (/* binding */ One),\n/* harmony export */   \"Two\": () => (/* binding */ Two),\n/* harmony export */   \"WeiPerEther\": () => (/* binding */ WeiPerEther),\n/* harmony export */   \"MaxUint256\": () => (/* binding */ MaxUint256),\n/* harmony export */   \"MinInt256\": () => (/* binding */ MinInt256),\n/* harmony export */   \"MaxInt256\": () => (/* binding */ MaxInt256)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n\nconst NegativeOne = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(0));\nconst One = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(1));\nconst Two = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\n//# sourceMappingURL=bignumbers.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/constants/lib.esm/bignumbers.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/id.js":
/*!********************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/id.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"id\": () => (/* binding */ id)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n\n\nfunction id(text) {\n    return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(text));\n}\n//# sourceMappingURL=id.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/hash/lib.esm/id.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/keccak256/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/keccak256/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keccak256\": () => (/* binding */ keccak256)\n/* harmony export */ });\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n\n\n\nfunction keccak256(data) {\n    return '0x' + js_sha3__WEBPACK_IMPORTED_MODULE_0___default().keccak_256((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(data));\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/keccak256/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/logger/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LogLevel\": () => (/* binding */ LogLevel),\n/* harmony export */   \"ErrorCode\": () => (/* binding */ ErrorCode),\n/* harmony export */   \"Logger\": () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/logger/lib.esm/_version.js\");\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/logger/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/_version.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/_version.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"properties/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/properties/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defineReadOnly\": () => (/* binding */ defineReadOnly),\n/* harmony export */   \"getStatic\": () => (/* binding */ getStatic),\n/* harmony export */   \"resolveProperties\": () => (/* binding */ resolveProperties),\n/* harmony export */   \"checkProperties\": () => (/* binding */ checkProperties),\n/* harmony export */   \"shallowCopy\": () => (/* binding */ shallowCopy),\n/* harmony export */   \"deepCopy\": () => (/* binding */ deepCopy),\n/* harmony export */   \"Description\": () => (/* binding */ Description)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/properties/lib.esm/_version.js\");\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nfunction getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nfunction resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nfunction checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nfunction shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nfunction deepCopy(object) {\n    return _deepCopy(object);\n}\nclass Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/properties/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"rlp/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/rlp/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/rlp/lib.esm/_version.js\");\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isBytesLike)(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data[offset]) };\n}\nfunction decode(data) {\n    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/rlp/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/_version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/_version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/sha2/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/sha2.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/sha2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ripemd160\": () => (/* binding */ ripemd160),\n/* harmony export */   \"sha256\": () => (/* binding */ sha256),\n/* harmony export */   \"sha512\": () => (/* binding */ sha512),\n/* harmony export */   \"computeHmac\": () => (/* binding */ computeHmac)\n/* harmony export */ });\n/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hash_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ \"./node_modules/@ethersproject/sha2/lib.esm/types.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/sha2/lib.esm/_version.js\");\n\n\n//const _ripemd160 = _hash.ripemd160;\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);\nfunction ripemd160(data) {\n    return \"0x\" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().ripemd160().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest(\"hex\"));\n}\nfunction sha256(data) {\n    return \"0x\" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().sha256().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest(\"hex\"));\n}\nfunction sha512(data) {\n    return \"0x\" + (hash_js__WEBPACK_IMPORTED_MODULE_0___default().sha512().update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest(\"hex\"));\n}\nfunction computeHmac(algorithm, key, data) {\n    if (!_types__WEBPACK_IMPORTED_MODULE_4__.SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash_js__WEBPACK_IMPORTED_MODULE_0___default().hmac((hash_js__WEBPACK_IMPORTED_MODULE_0___default())[algorithm], (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(key)).update((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/sha2/lib.esm/sha2.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/sha2/lib.esm/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/@ethersproject/sha2/lib.esm/types.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SupportedAlgorithm\": () => (/* binding */ SupportedAlgorithm)\n/* harmony export */ });\nvar SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/sha2/lib.esm/types.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/solidity/lib.esm/_version.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/solidity/lib.esm/_version.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"solidity/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/solidity/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/solidity/lib.esm/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/solidity/lib.esm/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pack\": () => (/* binding */ pack),\n/* harmony export */   \"keccak256\": () => (/* binding */ keccak256),\n/* harmony export */   \"sha256\": () => (/* binding */ sha256)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/sha2 */ \"./node_modules/@ethersproject/sha2/lib.esm/sha2.js\");\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/solidity/lib.esm/_version.js\");\n\n\n\n\n\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, 32);\n            }\n            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);\n        case \"string\":\n            return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_3__.toUtf8Bytes)(value);\n        case \"bytes\":\n            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, 32);\n            }\n            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value).toTwos(size);\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.zeroPad)(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nfunction pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)(tight));\n}\nfunction keccak256(types, values) {\n    return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_5__.keccak256)(pack(types, values));\n}\nfunction sha256(types, values) {\n    return (0,_ethersproject_sha2__WEBPACK_IMPORTED_MODULE_6__.sha256)(pack(types, values));\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/solidity/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"strings/5.5.0\";\n//# sourceMappingURL=_version.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/strings/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/utf8.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/utf8.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UnicodeNormalizationForm\": () => (/* binding */ UnicodeNormalizationForm),\n/* harmony export */   \"Utf8ErrorReason\": () => (/* binding */ Utf8ErrorReason),\n/* harmony export */   \"Utf8ErrorFuncs\": () => (/* binding */ Utf8ErrorFuncs),\n/* harmony export */   \"toUtf8Bytes\": () => (/* binding */ toUtf8Bytes),\n/* harmony export */   \"_toEscapedUtf8String\": () => (/* binding */ _toEscapedUtf8String),\n/* harmony export */   \"_toUtf8String\": () => (/* binding */ _toUtf8String),\n/* harmony export */   \"toUtf8String\": () => (/* binding */ toUtf8String),\n/* harmony export */   \"toUtf8CodePoints\": () => (/* binding */ toUtf8CodePoints)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/strings/lib.esm/_version.js\");\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nvar Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nconst Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nfunction _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nfunction toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map\n\n//# sourceURL=webpack://bitmix/./node_modules/@ethersproject/strings/lib.esm/utf8.js?");

/***/ }),

/***/ "./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CurrencyAmount\": () => (/* binding */ CurrencyAmount),\n/* harmony export */   \"Ether\": () => (/* binding */ Ether),\n/* harmony export */   \"Fraction\": () => (/* binding */ Fraction),\n/* harmony export */   \"MaxUint256\": () => (/* binding */ MaxUint256),\n/* harmony export */   \"NativeCurrency\": () => (/* binding */ NativeCurrency),\n/* harmony export */   \"Percent\": () => (/* binding */ Percent),\n/* harmony export */   \"Price\": () => (/* binding */ Price),\n/* harmony export */   \"Rounding\": () => (/* binding */ Rounding),\n/* harmony export */   \"Token\": () => (/* binding */ Token),\n/* harmony export */   \"TradeType\": () => (/* binding */ TradeType),\n/* harmony export */   \"WETH9\": () => (/* binding */ WETH9),\n/* harmony export */   \"computePriceImpact\": () => (/* binding */ computePriceImpact),\n/* harmony export */   \"sortedInsert\": () => (/* binding */ sortedInsert),\n/* harmony export */   \"sqrt\": () => (/* binding */ sqrt),\n/* harmony export */   \"validateAndParseAddress\": () => (/* binding */ validateAndParseAddress)\n/* harmony export */ });\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsbi */ \"./node_modules/jsbi/dist/jsbi-umd.js\");\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsbi__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! decimal.js-light */ \"./node_modules/decimal.js-light/decimal.js\");\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(decimal_js_light__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! big.js */ \"./node_modules/big.js/big.js\");\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var toformat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! toformat */ \"./node_modules/toformat/toFormat.js\");\n/* harmony import */ var toformat__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(toformat__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n\n\n\n\n\n\n\nvar TradeType;\n\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\n\nvar Rounding;\n\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\n\nvar MaxUint256 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar _toSignificantRoundin, _toFixedRounding;\nvar Decimal = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_3___default()((decimal_js_light__WEBPACK_IMPORTED_MODULE_1___default()));\nvar Big = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_3___default()((big_js__WEBPACK_IMPORTED_MODULE_2___default()));\nvar toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\nvar toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[Rounding.ROUND_DOWN] = 0, _toFixedRounding[Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[Rounding.ROUND_UP] = 3, _toFixedRounding);\nvar Fraction = /*#__PURE__*/function () {\n  function Fraction(numerator, denominator) {\n    if (denominator === void 0) {\n      denominator = jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(1);\n    }\n\n    this.numerator = jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(numerator);\n    this.denominator = jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(denominator);\n  }\n\n  Fraction.tryParseFraction = function tryParseFraction(fractionish) {\n    if (fractionish instanceof (jsbi__WEBPACK_IMPORTED_MODULE_0___default()) || typeof fractionish === 'number' || typeof fractionish === 'string') return new Fraction(fractionish);\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish;\n    throw new Error('Could not parse fraction');\n  } // performs floor division\n  ;\n\n  var _proto = Fraction.prototype;\n\n  _proto.invert = function invert() {\n    return new Fraction(this.denominator, this.numerator);\n  };\n\n  _proto.add = function add(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_0___default().equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().add(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(otherParsed.numerator, this.denominator)), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.subtract = function subtract(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_0___default().equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().subtract(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(otherParsed.numerator, this.denominator)), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.lessThan = function lessThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0___default().lessThan(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.equalTo = function equalTo(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0___default().equal(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.greaterThan = function greaterThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0___default().greaterThan(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(otherParsed.numerator, this.denominator));\n  };\n\n  _proto.multiply = function multiply(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.numerator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.denominator, otherParsed.denominator));\n  };\n\n  _proto.divide = function divide(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0___default().multiply(this.denominator, otherParsed.numerator));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(significantDigits) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, significantDigits + \" is not an integer.\") : 0 : void 0;\n    !(significantDigits > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, significantDigits + \" is not positive.\") : 0 : void 0;\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n\n    !Number.isInteger(decimalPlaces) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, decimalPlaces + \" is not an integer.\") : 0 : void 0;\n    !(decimalPlaces >= 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, decimalPlaces + \" is negative.\") : 0 : void 0;\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n  /**\r\n   * Helper method for converting any super class back to a fraction\r\n   */\n  ;\n\n  _createClass(Fraction, [{\n    key: \"quotient\",\n    get: function get() {\n      return jsbi__WEBPACK_IMPORTED_MODULE_0___default().divide(this.numerator, this.denominator);\n    } // remainder after floor division\n\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }, {\n    key: \"asFraction\",\n    get: function get() {\n      return new Fraction(this.numerator, this.denominator);\n    }\n  }]);\n\n  return Fraction;\n}();\n\nvar Big$1 = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_3___default()((big_js__WEBPACK_IMPORTED_MODULE_2___default()));\nvar CurrencyAmount = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(CurrencyAmount, _Fraction);\n\n  function CurrencyAmount(currency, numerator, denominator) {\n    var _this;\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    !jsbi__WEBPACK_IMPORTED_MODULE_0___default().lessThanOrEqual(_this.quotient, MaxUint256) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'AMOUNT') : 0 : void 0;\n    _this.currency = currency;\n    _this.decimalScale = jsbi__WEBPACK_IMPORTED_MODULE_0___default().exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(currency.decimals));\n    return _this;\n  }\n  /**\r\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n   * @param currency the currency in the amount\r\n   * @param rawAmount the raw token or ether amount\r\n   */\n\n\n  CurrencyAmount.fromRawAmount = function fromRawAmount(currency, rawAmount) {\n    return new CurrencyAmount(currency, rawAmount);\n  }\n  /**\r\n   * Construct a currency amount with a denominator that is not equal to 1\r\n   * @param currency the currency\r\n   * @param numerator the numerator of the fractional token amount\r\n   * @param denominator the denominator of the fractional token amount\r\n   */\n  ;\n\n  CurrencyAmount.fromFractionalAmount = function fromFractionalAmount(currency, numerator, denominator) {\n    return new CurrencyAmount(currency, numerator, denominator);\n  };\n\n  var _proto = CurrencyAmount.prototype;\n\n  _proto.add = function add(other) {\n    !this.currency.equals(other.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n\n    var added = _Fraction.prototype.add.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator);\n  };\n\n  _proto.subtract = function subtract(other) {\n    !this.currency.equals(other.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n\n    var subtracted = _Fraction.prototype.subtract.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);\n  };\n\n  _proto.multiply = function multiply(other) {\n    var multiplied = _Fraction.prototype.multiply.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);\n  };\n\n  _proto.divide = function divide(other) {\n    var divided = _Fraction.prototype.divide.call(this, other);\n\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = this.currency.decimals;\n    }\n\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n\n    !(decimalPlaces <= this.currency.decimals) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'DECIMALS') : 0 : void 0;\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toFixed(decimalPlaces, format, rounding);\n  };\n\n  _proto.toExact = function toExact(format) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n\n    Big$1.DP = this.currency.decimals;\n    return new Big$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);\n  };\n\n  _createClass(CurrencyAmount, [{\n    key: \"wrapped\",\n    get: function get() {\n      if (this.currency.isToken) return this;\n      return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);\n    }\n  }]);\n\n  return CurrencyAmount;\n}(Fraction);\n\nvar ONE_HUNDRED = /*#__PURE__*/new Fraction( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(100));\n/**\r\n * Converts a fraction to a percent\r\n * @param fraction the fraction to convert\r\n */\n\nfunction toPercent(fraction) {\n  return new Percent(fraction.numerator, fraction.denominator);\n}\n\nvar Percent = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Percent, _Fraction);\n\n  function Percent() {\n    var _this;\n\n    _this = _Fraction.apply(this, arguments) || this;\n    /**\r\n     * This boolean prevents a fraction from being interpreted as a Percent\r\n     */\n\n    _this.isPercent = true;\n    return _this;\n  }\n\n  var _proto = Percent.prototype;\n\n  _proto.add = function add(other) {\n    return toPercent(_Fraction.prototype.add.call(this, other));\n  };\n\n  _proto.subtract = function subtract(other) {\n    return toPercent(_Fraction.prototype.subtract.call(this, other));\n  };\n\n  _proto.multiply = function multiply(other) {\n    return toPercent(_Fraction.prototype.multiply.call(this, other));\n  };\n\n  _proto.divide = function divide(other) {\n    return toPercent(_Fraction.prototype.divide.call(this, other));\n  };\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 5;\n    }\n\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 2;\n    }\n\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n  };\n\n  return Percent;\n}(Fraction);\n\nvar Price = /*#__PURE__*/function (_Fraction) {\n  _inheritsLoose(Price, _Fraction);\n\n  /**\r\n   * Construct a price, either with the base and quote currency amount, or the\r\n   * @param args\r\n   */\n  function Price() {\n    var _this;\n\n    var baseCurrency, quoteCurrency, denominator, numerator;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 4) {\n      baseCurrency = args[0];\n      quoteCurrency = args[1];\n      denominator = args[2];\n      numerator = args[3];\n    } else {\n      var result = args[0].quoteAmount.divide(args[0].baseAmount);\n      var _ref = [args[0].baseAmount.currency, args[0].quoteAmount.currency, result.denominator, result.numerator];\n      baseCurrency = _ref[0];\n      quoteCurrency = _ref[1];\n      denominator = _ref[2];\n      numerator = _ref[3];\n    }\n\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    _this.baseCurrency = baseCurrency;\n    _this.quoteCurrency = quoteCurrency;\n    _this.scalar = new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0___default().exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(baseCurrency.decimals)), jsbi__WEBPACK_IMPORTED_MODULE_0___default().exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(quoteCurrency.decimals)));\n    return _this;\n  }\n  /**\r\n   * Flip the price, switching the base and quote currency\r\n   */\n\n\n  var _proto = Price.prototype;\n\n  _proto.invert = function invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  }\n  /**\r\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\r\n   * @param other the other price\r\n   */\n  ;\n\n  _proto.multiply = function multiply(other) {\n    !this.quoteCurrency.equals(other.baseCurrency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n\n    var fraction = _Fraction.prototype.multiply.call(this, other);\n\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  }\n  /**\r\n   * Return the amount of quote currency corresponding to a given amount of the base currency\r\n   * @param currencyAmount the amount of base currency to quote against the price\r\n   */\n  ;\n\n  _proto.quote = function quote(currencyAmount) {\n    !currencyAmount.currency.equals(this.baseCurrency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n\n    var result = _Fraction.prototype.multiply.call(this, currencyAmount);\n\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);\n  }\n  /**\r\n   * Get the value scaled by decimals for formatting\r\n   * @private\r\n   */\n  ;\n\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);\n  };\n\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 4;\n    }\n\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n  };\n\n  _createClass(Price, [{\n    key: \"adjustedForDecimals\",\n    get: function get() {\n      return _Fraction.prototype.multiply.call(this, this.scalar);\n    }\n  }]);\n\n  return Price;\n}(Fraction);\n\n/**\r\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\r\n */\n\nvar BaseCurrency =\n/**\r\n * Constructs an instance of the base class `BaseCurrency`.\r\n * @param chainId the chain ID on which this currency resides\r\n * @param decimals decimals of the currency\r\n * @param symbol symbol of the currency\r\n * @param name of the currency\r\n */\nfunction BaseCurrency(chainId, decimals, symbol, name) {\n  !Number.isSafeInteger(chainId) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'CHAIN_ID') : 0 : void 0;\n  !(decimals >= 0 && decimals < 255 && Number.isInteger(decimals)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'DECIMALS') : 0 : void 0;\n  this.chainId = chainId;\n  this.decimals = decimals;\n  this.symbol = symbol;\n  this.name = name;\n};\n\n/**\r\n * Represents the native currency of the chain on which it resides, e.g.\r\n */\n\nvar NativeCurrency = /*#__PURE__*/function (_BaseCurrency) {\n  _inheritsLoose(NativeCurrency, _BaseCurrency);\n\n  function NativeCurrency() {\n    var _this;\n\n    _this = _BaseCurrency.apply(this, arguments) || this;\n    _this.isNative = true;\n    _this.isToken = false;\n    return _this;\n  }\n\n  return NativeCurrency;\n}(BaseCurrency);\n\n/**\r\n * Validates an address and returns the parsed (checksummed) version of that address\r\n * @param address the unchecksummed hex address\r\n */\n\nfunction validateAndParseAddress(address) {\n  try {\n    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_5__.getAddress)(address);\n  } catch (error) {\n    throw new Error(address + \" is not a valid address.\");\n  }\n}\n\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\n\nvar Token = /*#__PURE__*/function (_BaseCurrency) {\n  _inheritsLoose(Token, _BaseCurrency);\n\n  function Token(chainId, address, decimals, symbol, name) {\n    var _this;\n\n    _this = _BaseCurrency.call(this, chainId, decimals, symbol, name) || this;\n    _this.isNative = false;\n    _this.isToken = true;\n    _this.address = validateAndParseAddress(address);\n    return _this;\n  }\n  /**\r\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n   * @param other other token to compare\r\n   */\n\n\n  var _proto = Token.prototype;\n\n  _proto.equals = function equals(other) {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address;\n  }\n  /**\r\n   * Returns true if the address of this token sorts before the address of the other token\r\n   * @param other other token to compare\r\n   * @throws if the tokens have the same address\r\n   * @throws if the tokens are on different chains\r\n   */\n  ;\n\n  _proto.sortsBefore = function sortsBefore(other) {\n    !(this.chainId === other.chainId) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'CHAIN_IDS') : 0 : void 0;\n    !(this.address !== other.address) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'ADDRESSES') : 0 : void 0;\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  }\n  /**\r\n   * Return this token, which does not need to be wrapped\r\n   */\n  ;\n\n  _createClass(Token, [{\n    key: \"wrapped\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return Token;\n}(BaseCurrency);\n\nvar _WETH;\n/**\r\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\r\n */\n\nvar WETH9 = (_WETH = {}, _WETH[1] = /*#__PURE__*/new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'), _WETH[3] = /*#__PURE__*/new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'), _WETH[4] = /*#__PURE__*/new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'), _WETH[5] = /*#__PURE__*/new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'), _WETH[42] = /*#__PURE__*/new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'), _WETH[10] = /*#__PURE__*/new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'), _WETH[69] = /*#__PURE__*/new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'), _WETH[42161] = /*#__PURE__*/new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'), _WETH[421611] = /*#__PURE__*/new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'), _WETH);\n\n/**\r\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\r\n */\n\nvar Ether = /*#__PURE__*/function (_NativeCurrency) {\n  _inheritsLoose(Ether, _NativeCurrency);\n\n  function Ether(chainId) {\n    return _NativeCurrency.call(this, chainId, 18, 'ETH', 'Ether') || this;\n  }\n\n  Ether.onChain = function onChain(chainId) {\n    var _this$_etherCache$cha;\n\n    return (_this$_etherCache$cha = this._etherCache[chainId]) != null ? _this$_etherCache$cha : this._etherCache[chainId] = new Ether(chainId);\n  };\n\n  var _proto = Ether.prototype;\n\n  _proto.equals = function equals(other) {\n    return other.isNative && other.chainId === this.chainId;\n  };\n\n  _createClass(Ether, [{\n    key: \"wrapped\",\n    get: function get() {\n      var weth9 = WETH9[this.chainId];\n      !!!weth9 ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'WRAPPED') : 0 : void 0;\n      return weth9;\n    }\n  }]);\n\n  return Ether;\n}(NativeCurrency);\nEther._etherCache = {};\n\n/**\r\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\r\n * @param midPrice mid price before the trade\r\n * @param inputAmount the input amount of the trade\r\n * @param outputAmount the output amount of the trade\r\n */\n\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  var quotedOutputAmount = midPrice.quote(inputAmount); // calculate price impact := (exactQuote - outputAmount) / exactQuote\n\n  var priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n  return new Percent(priceImpact.numerator, priceImpact.denominator);\n}\n\n// `maxSize` by removing the last item\n\nfunction sortedInsert(items, add, maxSize, comparator) {\n  !(maxSize > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'MAX_SIZE_ZERO') : 0 : void 0; // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n\n  !(items.length <= maxSize) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'ITEMS_SIZE') : 0 : void 0; // short circuit first item add\n\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    var isFull = items.length === maxSize; // short circuit if full and the additional item does not come before the last item\n\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n\n    var lo = 0,\n        hi = items.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\n\nvar MAX_SAFE_INTEGER = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(Number.MAX_SAFE_INTEGER);\nvar ZERO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(0);\nvar ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(1);\nvar TWO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(2);\n/**\r\n * Computes floor(sqrt(value))\r\n * @param value the value for which to compute the square root, rounded down\r\n */\n\nfunction sqrt(value) {\n  !jsbi__WEBPACK_IMPORTED_MODULE_0___default().greaterThanOrEqual(value, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'NEGATIVE') : 0 : void 0; // rely on built in sqrt if possible\n\n  if (jsbi__WEBPACK_IMPORTED_MODULE_0___default().lessThan(value, MAX_SAFE_INTEGER)) {\n    return jsbi__WEBPACK_IMPORTED_MODULE_0___default().BigInt(Math.floor(Math.sqrt(jsbi__WEBPACK_IMPORTED_MODULE_0___default().toNumber(value))));\n  }\n\n  var z;\n  var x;\n  z = value;\n  x = jsbi__WEBPACK_IMPORTED_MODULE_0___default().add(jsbi__WEBPACK_IMPORTED_MODULE_0___default().divide(value, TWO), ONE);\n\n  while (jsbi__WEBPACK_IMPORTED_MODULE_0___default().lessThan(x, z)) {\n    z = x;\n    x = jsbi__WEBPACK_IMPORTED_MODULE_0___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_0___default().add(jsbi__WEBPACK_IMPORTED_MODULE_0___default().divide(value, x), x), TWO);\n  }\n\n  return z;\n}\n\n\n//# sourceMappingURL=sdk-core.esm.js.map\n\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ADDRESS_ZERO\": () => (/* binding */ ADDRESS_ZERO),\n/* harmony export */   \"FACTORY_ADDRESS\": () => (/* binding */ FACTORY_ADDRESS),\n/* harmony export */   \"FeeAmount\": () => (/* binding */ FeeAmount),\n/* harmony export */   \"FullMath\": () => (/* binding */ FullMath),\n/* harmony export */   \"LiquidityMath\": () => (/* binding */ LiquidityMath),\n/* harmony export */   \"NoTickDataProvider\": () => (/* binding */ NoTickDataProvider),\n/* harmony export */   \"NonfungiblePositionManager\": () => (/* binding */ NonfungiblePositionManager),\n/* harmony export */   \"POOL_INIT_CODE_HASH\": () => (/* binding */ POOL_INIT_CODE_HASH),\n/* harmony export */   \"Pool\": () => (/* binding */ Pool),\n/* harmony export */   \"Position\": () => (/* binding */ Position),\n/* harmony export */   \"Route\": () => (/* binding */ Route),\n/* harmony export */   \"SqrtPriceMath\": () => (/* binding */ SqrtPriceMath),\n/* harmony export */   \"Staker\": () => (/* binding */ Staker),\n/* harmony export */   \"SwapQuoter\": () => (/* binding */ SwapQuoter),\n/* harmony export */   \"SwapRouter\": () => (/* binding */ SwapRouter),\n/* harmony export */   \"TICK_SPACINGS\": () => (/* binding */ TICK_SPACINGS),\n/* harmony export */   \"Tick\": () => (/* binding */ Tick),\n/* harmony export */   \"TickList\": () => (/* binding */ TickList),\n/* harmony export */   \"TickListDataProvider\": () => (/* binding */ TickListDataProvider),\n/* harmony export */   \"TickMath\": () => (/* binding */ TickMath),\n/* harmony export */   \"Trade\": () => (/* binding */ Trade),\n/* harmony export */   \"computePoolAddress\": () => (/* binding */ computePoolAddress),\n/* harmony export */   \"encodeRouteToPath\": () => (/* binding */ encodeRouteToPath),\n/* harmony export */   \"encodeSqrtRatioX96\": () => (/* binding */ encodeSqrtRatioX96),\n/* harmony export */   \"isSorted\": () => (/* binding */ isSorted),\n/* harmony export */   \"maxLiquidityForAmounts\": () => (/* binding */ maxLiquidityForAmounts),\n/* harmony export */   \"mostSignificantBit\": () => (/* binding */ mostSignificantBit),\n/* harmony export */   \"nearestUsableTick\": () => (/* binding */ nearestUsableTick),\n/* harmony export */   \"priceToClosestTick\": () => (/* binding */ priceToClosestTick),\n/* harmony export */   \"tickToPrice\": () => (/* binding */ tickToPrice),\n/* harmony export */   \"toHex\": () => (/* binding */ toHex),\n/* harmony export */   \"tradeComparator\": () => (/* binding */ tradeComparator)\n/* harmony export */ });\n/* harmony import */ var _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/sdk-core */ \"./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\");\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsbi */ \"./node_modules/jsbi/dist/jsbi-umd.js\");\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsbi__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/abi */ \"./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/abi */ \"./node_modules/@ethersproject/abi/lib.esm/interface.js\");\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/solidity */ \"./node_modules/@ethersproject/solidity/lib.esm/index.js\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_NonfungiblePositionManager_sol_NonfungiblePositionManager_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json */ \"./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_interfaces_ISelfPermit_sol_ISelfPermit_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json */ \"./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_SwapRouter_sol_SwapRouter_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json */ \"./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_lens_Quoter_sol_Quoter_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json */ \"./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json\");\n/* harmony import */ var _uniswap_v3_staker_artifacts_contracts_UniswapV3Staker_sol_UniswapV3Staker_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json */ \"./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json\");\n\n\n\n\n\n\n\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined$1; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined$1) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined$1;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined$1;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined$1;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined$1, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined$1;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined$1;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined$1;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined$1;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   module.exports \n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n});\n\nvar _TICK_SPACINGS;\n\nvar FACTORY_ADDRESS = '0x1F98431c8aD98523631AE4a59f267346ea31F984';\nvar ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\nvar POOL_INIT_CODE_HASH = '0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54';\n/**\r\n * The default factory enabled fee amounts, denominated in hundredths of bips.\r\n */\n\nvar FeeAmount;\n\n(function (FeeAmount) {\n  FeeAmount[FeeAmount[\"LOW\"] = 500] = \"LOW\";\n  FeeAmount[FeeAmount[\"MEDIUM\"] = 3000] = \"MEDIUM\";\n  FeeAmount[FeeAmount[\"HIGH\"] = 10000] = \"HIGH\";\n})(FeeAmount || (FeeAmount = {}));\n/**\r\n * The default factory tick spacings by fee amount.\r\n */\n\n\nvar TICK_SPACINGS = (_TICK_SPACINGS = {}, _TICK_SPACINGS[FeeAmount.LOW] = 10, _TICK_SPACINGS[FeeAmount.MEDIUM] = 60, _TICK_SPACINGS[FeeAmount.HIGH] = 200, _TICK_SPACINGS);\n\nvar NEGATIVE_ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(-1);\nvar ZERO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(0);\nvar ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(1); // used in liquidity amount math\n\nvar Q96 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(96));\nvar Q192 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate(Q96, /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2));\n\n/**\r\n * Computes a pool address\r\n * @param factoryAddress The Uniswap V3 factory address\r\n * @param tokenA The first token of the pair, irrespective of sort order\r\n * @param tokenB The second token of the pair, irrespective of sort order\r\n * @param fee The fee tier of the pool\r\n * @param initCodeHashManualOverride Override the init code hash used to compute the pool address if necessary\r\n * @returns The pool address\r\n */\n\nfunction computePoolAddress(_ref) {\n  var factoryAddress = _ref.factoryAddress,\n      tokenA = _ref.tokenA,\n      tokenB = _ref.tokenB,\n      fee = _ref.fee,\n      initCodeHashManualOverride = _ref.initCodeHashManualOverride;\n\n  var _ref2 = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA],\n      token0 = _ref2[0],\n      token1 = _ref2[1]; // does safety checks\n\n\n  return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_7__.getCreate2Address)(factoryAddress, (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__.keccak256)(['bytes'], [_ethersproject_abi__WEBPACK_IMPORTED_MODULE_9__.defaultAbiCoder.encode(['address', 'address', 'uint24'], [token0.address, token1.address, fee])]), initCodeHashManualOverride != null ? initCodeHashManualOverride : POOL_INIT_CODE_HASH);\n}\n\nvar LiquidityMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function LiquidityMath() {}\n\n  LiquidityMath.addDelta = function addDelta(x, y) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(y, ZERO)) {\n      return jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(x, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(y, NEGATIVE_ONE));\n    } else {\n      return jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(x, y);\n    }\n  };\n\n  return LiquidityMath;\n}();\n\nvar FullMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function FullMath() {}\n\n  FullMath.mulDivRoundingUp = function mulDivRoundingUp(a, b, denominator) {\n    var product = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(a, b);\n    var result = jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(product, denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().notEqual(jsbi__WEBPACK_IMPORTED_MODULE_1___default().remainder(product, denominator), ZERO)) result = jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(result, ONE);\n    return result;\n  };\n\n  return FullMath;\n}();\n\nvar MaxUint160 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(160)), ONE);\n\nfunction multiplyIn256(x, y) {\n  var product = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(x, y);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().bitwiseAnd(product, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256);\n}\n\nfunction addIn256(x, y) {\n  var sum = jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(x, y);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().bitwiseAnd(sum, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256);\n}\n\nvar SqrtPriceMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SqrtPriceMath() {}\n\n  SqrtPriceMath.getAmount0Delta = function getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n      var _ref = [sqrtRatioBX96, sqrtRatioAX96];\n      sqrtRatioAX96 = _ref[0];\n      sqrtRatioBX96 = _ref[1];\n    }\n\n    var numerator1 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(96));\n    var numerator2 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96);\n    return roundUp ? FullMath.mulDivRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), ONE, sqrtRatioAX96) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(numerator1, numerator2), sqrtRatioBX96), sqrtRatioAX96);\n  };\n\n  SqrtPriceMath.getAmount1Delta = function getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n      var _ref2 = [sqrtRatioBX96, sqrtRatioAX96];\n      sqrtRatioAX96 = _ref2[0];\n      sqrtRatioBX96 = _ref2[1];\n    }\n\n    return roundUp ? FullMath.mulDivRoundingUp(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96), Q96) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96)), Q96);\n  };\n\n  SqrtPriceMath.getNextSqrtPriceFromInput = function getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtPX96, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n    return zeroForOne ? this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true) : this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\n  };\n\n  SqrtPriceMath.getNextSqrtPriceFromOutput = function getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtPX96, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n    return zeroForOne ? this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false) : this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\n  };\n\n  SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp = function getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(amount, ZERO)) return sqrtPX96;\n    var numerator1 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(96));\n\n    if (add) {\n      var product = multiplyIn256(amount, sqrtPX96);\n\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(product, amount), sqrtPX96)) {\n        var denominator = addIn256(numerator1, product);\n\n        if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(denominator, numerator1)) {\n          return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator);\n        }\n      }\n\n      return FullMath.mulDivRoundingUp(numerator1, ONE, jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(numerator1, sqrtPX96), amount));\n    } else {\n      var _product = multiplyIn256(amount, sqrtPX96);\n\n      !jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(_product, amount), sqrtPX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n      !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(numerator1, _product) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n\n      var _denominator = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(numerator1, _product);\n\n      return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, _denominator);\n    }\n  };\n\n  SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown = function getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add) {\n    if (add) {\n      var quotient = jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(amount, MaxUint160) ? jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(amount, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(96)), liquidity) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amount, Q96), liquidity);\n      return jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(sqrtPX96, quotient);\n    } else {\n      var _quotient = FullMath.mulDivRoundingUp(amount, Q96, liquidity);\n\n      !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtPX96, _quotient) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false) : 0 : void 0;\n      return jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtPX96, _quotient);\n    }\n  };\n\n  return SqrtPriceMath;\n}();\n\nvar MAX_FEE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(10), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(6));\nvar SwapMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SwapMath() {}\n\n  SwapMath.computeSwapStep = function computeSwapStep(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, amountRemaining, feePips) {\n    var returnValues = {};\n    var zeroForOne = jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(sqrtRatioCurrentX96, sqrtRatioTargetX96);\n    var exactIn = jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(amountRemaining, ZERO);\n\n    if (exactIn) {\n      var amountRemainingLessFee = jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amountRemaining, jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(MAX_FEE, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(feePips))), MAX_FEE);\n      returnValues.amountIn = zeroForOne ? SqrtPriceMath.getAmount0Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, true) : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, true);\n\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(amountRemainingLessFee, returnValues.amountIn)) {\n        returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96;\n      } else {\n        returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromInput(sqrtRatioCurrentX96, liquidity, amountRemainingLessFee, zeroForOne);\n      }\n    } else {\n      returnValues.amountOut = zeroForOne ? SqrtPriceMath.getAmount1Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, false) : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, false);\n\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amountRemaining, NEGATIVE_ONE), returnValues.amountOut)) {\n        returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96;\n      } else {\n        returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromOutput(sqrtRatioCurrentX96, liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amountRemaining, NEGATIVE_ONE), zeroForOne);\n      }\n    }\n\n    var max = jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(sqrtRatioTargetX96, returnValues.sqrtRatioNextX96);\n\n    if (zeroForOne) {\n      returnValues.amountIn = max && exactIn ? returnValues.amountIn : SqrtPriceMath.getAmount0Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, true);\n      returnValues.amountOut = max && !exactIn ? returnValues.amountOut : SqrtPriceMath.getAmount1Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, false);\n    } else {\n      returnValues.amountIn = max && exactIn ? returnValues.amountIn : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, true);\n      returnValues.amountOut = max && !exactIn ? returnValues.amountOut : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, false);\n    }\n\n    if (!exactIn && jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(returnValues.amountOut, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amountRemaining, NEGATIVE_ONE))) {\n      returnValues.amountOut = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(amountRemaining, NEGATIVE_ONE);\n    }\n\n    if (exactIn && jsbi__WEBPACK_IMPORTED_MODULE_1___default().notEqual(returnValues.sqrtRatioNextX96, sqrtRatioTargetX96)) {\n      // we didn't reach the target, so take the remainder of the maximum input as fee\n      returnValues.feeAmount = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(amountRemaining, returnValues.amountIn);\n    } else {\n      returnValues.feeAmount = FullMath.mulDivRoundingUp(returnValues.amountIn, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(feePips), jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(MAX_FEE, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(feePips)));\n    }\n\n    return [returnValues.sqrtRatioNextX96, returnValues.amountIn, returnValues.amountOut, returnValues.feeAmount];\n  };\n\n  return SwapMath;\n}();\n\nvar TWO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2);\nvar POWERS_OF_2 = /*#__PURE__*/[128, 64, 32, 16, 8, 4, 2, 1].map(function (pow) {\n  return [pow, jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate(TWO, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(pow))];\n});\nfunction mostSignificantBit(x) {\n  !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(x, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'ZERO') : 0 : void 0;\n  !jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(x, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MAX') : 0 : void 0;\n  var msb = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(POWERS_OF_2), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        power = _step$value[0],\n        min = _step$value[1];\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(x, min)) {\n      x = jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(x, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(power));\n      msb += power;\n    }\n  }\n\n  return msb;\n}\n\nfunction mulShift(val, mulBy) {\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(val, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(mulBy)), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128));\n}\n\nvar Q32 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(32));\nvar TickMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function TickMath() {}\n  /**\r\n   * Returns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick\r\n   * @param tick the tick for which to compute the sqrt ratio\r\n   */\n\n\n  TickMath.getSqrtRatioAtTick = function getSqrtRatioAtTick(tick) {\n    !(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK && Number.isInteger(tick)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK') : 0 : void 0;\n    var absTick = tick < 0 ? tick * -1 : tick;\n    var ratio = (absTick & 0x1) != 0 ? jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('0xfffcb933bd6fad37aa2d162d1a594001') : jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('0x100000000000000000000000000000000');\n    if ((absTick & 0x2) != 0) ratio = mulShift(ratio, '0xfff97272373d413259a46990580e213a');\n    if ((absTick & 0x4) != 0) ratio = mulShift(ratio, '0xfff2e50f5f656932ef12357cf3c7fdcc');\n    if ((absTick & 0x8) != 0) ratio = mulShift(ratio, '0xffe5caca7e10e4e61c3624eaa0941cd0');\n    if ((absTick & 0x10) != 0) ratio = mulShift(ratio, '0xffcb9843d60f6159c9db58835c926644');\n    if ((absTick & 0x20) != 0) ratio = mulShift(ratio, '0xff973b41fa98c081472e6896dfb254c0');\n    if ((absTick & 0x40) != 0) ratio = mulShift(ratio, '0xff2ea16466c96a3843ec78b326b52861');\n    if ((absTick & 0x80) != 0) ratio = mulShift(ratio, '0xfe5dee046a99a2a811c461f1969c3053');\n    if ((absTick & 0x100) != 0) ratio = mulShift(ratio, '0xfcbe86c7900a88aedcffc83b479aa3a4');\n    if ((absTick & 0x200) != 0) ratio = mulShift(ratio, '0xf987a7253ac413176f2b074cf7815e54');\n    if ((absTick & 0x400) != 0) ratio = mulShift(ratio, '0xf3392b0822b70005940c7a398e4b70f3');\n    if ((absTick & 0x800) != 0) ratio = mulShift(ratio, '0xe7159475a2c29b7443b29c7fa6e889d9');\n    if ((absTick & 0x1000) != 0) ratio = mulShift(ratio, '0xd097f3bdfd2022b8845ad8f792aa5825');\n    if ((absTick & 0x2000) != 0) ratio = mulShift(ratio, '0xa9f746462d870fdf8a65dc1f90e061e5');\n    if ((absTick & 0x4000) != 0) ratio = mulShift(ratio, '0x70d869a156d2a1b890bb3df62baf32f7');\n    if ((absTick & 0x8000) != 0) ratio = mulShift(ratio, '0x31be135f97d08fd981231505542fcfa6');\n    if ((absTick & 0x10000) != 0) ratio = mulShift(ratio, '0x9aa508b5b7a84e1c677de54f3e99bc9');\n    if ((absTick & 0x20000) != 0) ratio = mulShift(ratio, '0x5d6af8dedb81196699c329225ee604');\n    if ((absTick & 0x40000) != 0) ratio = mulShift(ratio, '0x2216e584f5fa1ea926041bedfe98');\n    if ((absTick & 0x80000) != 0) ratio = mulShift(ratio, '0x48a170391f7dc42444e8fa2');\n    if (tick > 0) ratio = jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256, ratio); // back to Q96\n\n    return jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(jsbi__WEBPACK_IMPORTED_MODULE_1___default().remainder(ratio, Q32), ZERO) ? jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(ratio, Q32), ONE) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(ratio, Q32);\n  }\n  /**\r\n   * Returns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96\r\n   * and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96\r\n   * @param sqrtRatioX96 the sqrt ratio as a Q64.96 for which to compute the tick\r\n   */\n  ;\n\n  TickMath.getTickAtSqrtRatio = function getTickAtSqrtRatio(sqrtRatioX96) {\n    !(jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) && jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'SQRT_RATIO') : 0 : void 0;\n    var sqrtRatioX128 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(sqrtRatioX96, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(32));\n    var msb = mostSignificantBit(sqrtRatioX128);\n    var r;\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(msb), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128))) {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(sqrtRatioX128, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(msb - 127));\n    } else {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(sqrtRatioX128, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(127 - msb));\n    }\n\n    var log_2 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(msb), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128)), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(64));\n\n    for (var i = 0; i < 14; i++) {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(r, r), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(127));\n      var f = jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(r, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128));\n      log_2 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().bitwiseOr(log_2, jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(f, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(63 - i)));\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(r, f);\n    }\n\n    var log_sqrt10001 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(log_2, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('255738958999603826347141'));\n    var tickLow = jsbi__WEBPACK_IMPORTED_MODULE_1___default().toNumber(jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(log_sqrt10001, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('3402992956809132418596140100660247210')), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128)));\n    var tickHigh = jsbi__WEBPACK_IMPORTED_MODULE_1___default().toNumber(jsbi__WEBPACK_IMPORTED_MODULE_1___default().signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(log_sqrt10001, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('291339464771989622907027621153398088495')), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128)));\n    return tickLow === tickHigh ? tickLow : jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(TickMath.getSqrtRatioAtTick(tickHigh), sqrtRatioX96) ? tickHigh : tickLow;\n  };\n\n  return TickMath;\n}();\n/**\r\n * The minimum tick that can be used on any pool.\r\n */\n\nTickMath.MIN_TICK = -887272;\n/**\r\n * The maximum tick that can be used on any pool.\r\n */\n\nTickMath.MAX_TICK = -TickMath.MIN_TICK;\n/**\r\n * The sqrt ratio corresponding to the minimum tick that could be used on any pool.\r\n */\n\nTickMath.MIN_SQRT_RATIO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('4295128739');\n/**\r\n * The sqrt ratio corresponding to the maximum tick that could be used on any pool.\r\n */\n\nTickMath.MAX_SQRT_RATIO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt('1461446703485210103287273052203988822378723970342');\n\n/**\r\n * This tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you\r\n * do not need to load tick data for your use case.\r\n */\nvar NoTickDataProvider = /*#__PURE__*/function () {\n  function NoTickDataProvider() {}\n\n  var _proto = NoTickDataProvider.prototype;\n\n  _proto.getTick = /*#__PURE__*/function () {\n    var _getTick = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(_tick) {\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              throw new Error(NoTickDataProvider.ERROR_MESSAGE);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getTick(_x) {\n      return _getTick.apply(this, arguments);\n    }\n\n    return getTick;\n  }();\n\n  _proto.nextInitializedTickWithinOneWord = /*#__PURE__*/function () {\n    var _nextInitializedTickWithinOneWord = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(_tick, _lte, _tickSpacing) {\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              throw new Error(NoTickDataProvider.ERROR_MESSAGE);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function nextInitializedTickWithinOneWord(_x2, _x3, _x4) {\n      return _nextInitializedTickWithinOneWord.apply(this, arguments);\n    }\n\n    return nextInitializedTickWithinOneWord;\n  }();\n\n  return NoTickDataProvider;\n}();\nNoTickDataProvider.ERROR_MESSAGE = 'No tick data provider was given';\n\n/**\r\n * Determines if a tick list is sorted\r\n * @param list The tick list\r\n * @param comparator The comparator\r\n * @returns true if sorted\r\n */\nfunction isSorted(list, comparator) {\n  for (var i = 0; i < list.length - 1; i++) {\n    if (comparator(list[i], list[i + 1]) > 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction tickComparator(a, b) {\n  return a.index - b.index;\n}\n/**\r\n * Utility methods for interacting with sorted lists of ticks\r\n */\n\n\nvar TickList = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed\r\n   */\n  function TickList() {}\n\n  TickList.validateList = function validateList(ticks, tickSpacing) {\n    !(tickSpacing > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_SPACING_NONZERO') : 0 : void 0; // ensure ticks are spaced appropriately\n\n    !ticks.every(function (_ref) {\n      var index = _ref.index;\n      return index % tickSpacing === 0;\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_SPACING') : 0 : void 0; // ensure tick liquidity deltas sum to 0\n\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(ticks.reduce(function (accumulator, _ref2) {\n      var liquidityNet = _ref2.liquidityNet;\n      return jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(accumulator, liquidityNet);\n    }, ZERO), ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'ZERO_NET') : 0 : void 0;\n    !isSorted(ticks, tickComparator) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'SORTED') : 0 : void 0;\n  };\n\n  TickList.isBelowSmallest = function isBelowSmallest(ticks, tick) {\n    !(ticks.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'LENGTH') : 0 : void 0;\n    return tick < ticks[0].index;\n  };\n\n  TickList.isAtOrAboveLargest = function isAtOrAboveLargest(ticks, tick) {\n    !(ticks.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'LENGTH') : 0 : void 0;\n    return tick >= ticks[ticks.length - 1].index;\n  };\n\n  TickList.getTick = function getTick(ticks, index) {\n    var tick = ticks[this.binarySearch(ticks, index)];\n    !(tick.index === index) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'NOT_CONTAINED') : 0 : void 0;\n    return tick;\n  }\n  /**\r\n   * Finds the largest tick in the list of ticks that is less than or equal to tick\r\n   * @param ticks list of ticks\r\n   * @param tick tick to find the largest tick that is less than or equal to tick\r\n   * @private\r\n   */\n  ;\n\n  TickList.binarySearch = function binarySearch(ticks, tick) {\n    !!this.isBelowSmallest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'BELOW_SMALLEST') : 0 : void 0;\n    var l = 0;\n    var r = ticks.length - 1;\n    var i;\n\n    while (true) {\n      i = Math.floor((l + r) / 2);\n\n      if (ticks[i].index <= tick && (i === ticks.length - 1 || ticks[i + 1].index > tick)) {\n        return i;\n      }\n\n      if (ticks[i].index < tick) {\n        l = i + 1;\n      } else {\n        r = i - 1;\n      }\n    }\n  };\n\n  TickList.nextInitializedTick = function nextInitializedTick(ticks, tick, lte) {\n    if (lte) {\n      !!TickList.isBelowSmallest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'BELOW_SMALLEST') : 0 : void 0;\n\n      if (TickList.isAtOrAboveLargest(ticks, tick)) {\n        return ticks[ticks.length - 1];\n      }\n\n      var index = this.binarySearch(ticks, tick);\n      return ticks[index];\n    } else {\n      !!this.isAtOrAboveLargest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'AT_OR_ABOVE_LARGEST') : 0 : void 0;\n\n      if (this.isBelowSmallest(ticks, tick)) {\n        return ticks[0];\n      }\n\n      var _index = this.binarySearch(ticks, tick);\n\n      return ticks[_index + 1];\n    }\n  };\n\n  TickList.nextInitializedTickWithinOneWord = function nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing) {\n    var compressed = Math.floor(tick / tickSpacing); // matches rounding in the code\n\n    if (lte) {\n      var wordPos = compressed >> 8;\n      var minimum = (wordPos << 8) * tickSpacing;\n\n      if (TickList.isBelowSmallest(ticks, tick)) {\n        return [minimum, false];\n      }\n\n      var index = TickList.nextInitializedTick(ticks, tick, lte).index;\n      var nextInitializedTick = Math.max(minimum, index);\n      return [nextInitializedTick, nextInitializedTick === index];\n    } else {\n      var _wordPos = compressed + 1 >> 8;\n\n      var maximum = (_wordPos + 1 << 8) * tickSpacing - 1;\n\n      if (this.isAtOrAboveLargest(ticks, tick)) {\n        return [maximum, false];\n      }\n\n      var _index2 = this.nextInitializedTick(ticks, tick, lte).index;\n\n      var _nextInitializedTick = Math.min(maximum, _index2);\n\n      return [_nextInitializedTick, _nextInitializedTick === _index2];\n    }\n  };\n\n  return TickList;\n}();\n\n/**\r\n * Converts a big int to a hex string\r\n * @param bigintIsh\r\n * @returns The hex encoded calldata\r\n */\n\nfunction toHex(bigintIsh) {\n  var bigInt = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(bigintIsh);\n  var hex = bigInt.toString(16);\n\n  if (hex.length % 2 !== 0) {\n    hex = \"0\" + hex;\n  }\n\n  return \"0x\" + hex;\n}\n\n/**\r\n * Converts a route to a hex encoded path\r\n * @param route the v3 path to convert to an encoded path\r\n * @param exactOutput whether the route should be encoded in reverse, for making exact output swaps\r\n */\n\nfunction encodeRouteToPath(route, exactOutput) {\n  var firstInputToken = route.input.wrapped;\n\n  var _route$pools$reduce = route.pools.reduce(function (_ref, pool, index) {\n    var inputToken = _ref.inputToken,\n        path = _ref.path,\n        types = _ref.types;\n    var outputToken = pool.token0.equals(inputToken) ? pool.token1 : pool.token0;\n\n    if (index === 0) {\n      return {\n        inputToken: outputToken,\n        types: ['address', 'uint24', 'address'],\n        path: [inputToken.address, pool.fee, outputToken.address]\n      };\n    } else {\n      return {\n        inputToken: outputToken,\n        types: [].concat(types, ['uint24', 'address']),\n        path: [].concat(path, [pool.fee, outputToken.address])\n      };\n    }\n  }, {\n    inputToken: firstInputToken,\n    path: [],\n    types: []\n  }),\n      path = _route$pools$reduce.path,\n      types = _route$pools$reduce.types;\n\n  return exactOutput ? (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__.pack)(types.reverse(), path.reverse()) : (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__.pack)(types, path);\n}\n\n/**\r\n * Returns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0\r\n * @param amount1 The numerator amount i.e., the amount of token1\r\n * @param amount0 The denominator amount i.e., the amount of token0\r\n * @returns The sqrt ratio\r\n */\n\nfunction encodeSqrtRatioX96(amount1, amount0) {\n  var numerator = jsbi__WEBPACK_IMPORTED_MODULE_1___default().leftShift(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(amount1), jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(192));\n  var denominator = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(amount0);\n  var ratioX192 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(numerator, denominator);\n  return (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sqrt)(ratioX192);\n}\n\n/**\r\n * Returns an imprecise maximum amount of liquidity received for a given amount of token 0.\r\n * This function is available to accommodate LiquidityAmounts#getLiquidityForAmount0 in the v3 periphery,\r\n * which could be more precise by at least 32 bits by dividing by Q64 instead of Q96 in the intermediate step,\r\n * and shifting the subtracted ratio left by 32 bits. This imprecise calculation will likely be replaced in a future\r\n * v3 router contract.\r\n * @param sqrtRatioAX96 The price at the lower boundary\r\n * @param sqrtRatioBX96 The price at the upper boundary\r\n * @param amount0 The token0 amount\r\n * @returns liquidity for amount0, imprecise\r\n */\n\nfunction maxLiquidityForAmount0Imprecise(sqrtRatioAX96, sqrtRatioBX96, amount0) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref[0];\n    sqrtRatioBX96 = _ref[1];\n  }\n\n  var intermediate = jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(sqrtRatioAX96, sqrtRatioBX96), Q96);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(amount0), intermediate), jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96));\n}\n/**\r\n * Returns a precise maximum amount of liquidity received for a given amount of token 0 by dividing by Q64 instead of Q96 in the intermediate step,\r\n * and shifting the subtracted ratio left by 32 bits.\r\n * @param sqrtRatioAX96 The price at the lower boundary\r\n * @param sqrtRatioBX96 The price at the upper boundary\r\n * @param amount0 The token0 amount\r\n * @returns liquidity for amount0, precise\r\n */\n\n\nfunction maxLiquidityForAmount0Precise(sqrtRatioAX96, sqrtRatioBX96, amount0) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref2 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref2[0];\n    sqrtRatioBX96 = _ref2[1];\n  }\n\n  var numerator = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(amount0), sqrtRatioAX96), sqrtRatioBX96);\n  var denominator = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(Q96, jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96));\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(numerator, denominator);\n}\n/**\r\n * Computes the maximum amount of liquidity received for a given amount of token1\r\n * @param sqrtRatioAX96 The price at the lower tick boundary\r\n * @param sqrtRatioBX96 The price at the upper tick boundary\r\n * @param amount1 The token1 amount\r\n * @returns liquidity for amount1\r\n */\n\n\nfunction maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref3 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref3[0];\n    sqrtRatioBX96 = _ref3[1];\n  }\n\n  return jsbi__WEBPACK_IMPORTED_MODULE_1___default().divide(jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(amount1), Q96), jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(sqrtRatioBX96, sqrtRatioAX96));\n}\n/**\r\n * Computes the maximum amount of liquidity received for a given amount of token0, token1,\r\n * and the prices at the tick boundaries.\r\n * @param sqrtRatioCurrentX96 the current price\r\n * @param sqrtRatioAX96 price at lower boundary\r\n * @param sqrtRatioBX96 price at upper boundary\r\n * @param amount0 token0 amount\r\n * @param amount1 token1 amount\r\n * @param useFullPrecision if false, liquidity will be maximized according to what the router can calculate,\r\n * not what core can theoretically support\r\n */\n\n\nfunction maxLiquidityForAmounts(sqrtRatioCurrentX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref4 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref4[0];\n    sqrtRatioBX96 = _ref4[1];\n  }\n\n  var maxLiquidityForAmount0 = useFullPrecision ? maxLiquidityForAmount0Precise : maxLiquidityForAmount0Imprecise;\n\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(sqrtRatioCurrentX96, sqrtRatioAX96)) {\n    return maxLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\n  } else if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(sqrtRatioCurrentX96, sqrtRatioBX96)) {\n    var liquidity0 = maxLiquidityForAmount0(sqrtRatioCurrentX96, sqrtRatioBX96, amount0);\n    var liquidity1 = maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioCurrentX96, amount1);\n    return jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(liquidity0, liquidity1) ? liquidity0 : liquidity1;\n  } else {\n    return maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\n  }\n}\n\n/**\r\n * Returns the closest tick that is nearest a given tick and usable for the given tick spacing\r\n * @param tick the target tick\r\n * @param tickSpacing the spacing of the pool\r\n */\n\nfunction nearestUsableTick(tick, tickSpacing) {\n  !(Number.isInteger(tick) && Number.isInteger(tickSpacing)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INTEGERS') : 0 : void 0;\n  !(tickSpacing > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_SPACING') : 0 : void 0;\n  !(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_BOUND') : 0 : void 0;\n  var rounded = Math.round(tick / tickSpacing) * tickSpacing;\n  if (rounded < TickMath.MIN_TICK) return rounded + tickSpacing;else if (rounded > TickMath.MAX_TICK) return rounded - tickSpacing;else return rounded;\n}\n\n/**\r\n * Returns a price object corresponding to the input tick and the base/quote token\r\n * Inputs must be tokens because the address order is used to interpret the price represented by the tick\r\n * @param baseToken the base token of the price\r\n * @param quoteToken the quote token of the price\r\n * @param tick the tick for which to return the price\r\n */\n\nfunction tickToPrice(baseToken, quoteToken, tick) {\n  var sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n  var ratioX192 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(sqrtRatioX96, sqrtRatioX96);\n  return baseToken.sortsBefore(quoteToken) ? new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(baseToken, quoteToken, Q192, ratioX192) : new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(baseToken, quoteToken, ratioX192, Q192);\n}\n/**\r\n * Returns the first tick for which the given price is greater than or equal to the tick price\r\n * @param price for which to return the closest tick that represents a price less than or equal to the input price,\r\n * i.e. the price of the returned tick is less than or equal to the input price\r\n */\n\nfunction priceToClosestTick(price) {\n  var sorted = price.baseCurrency.sortsBefore(price.quoteCurrency);\n  var sqrtRatioX96 = sorted ? encodeSqrtRatioX96(price.numerator, price.denominator) : encodeSqrtRatioX96(price.denominator, price.numerator);\n  var tick = TickMath.getTickAtSqrtRatio(sqrtRatioX96);\n  var nextTickPrice = tickToPrice(price.baseCurrency, price.quoteCurrency, tick + 1);\n\n  if (sorted) {\n    if (!price.lessThan(nextTickPrice)) {\n      tick++;\n    }\n  } else {\n    if (!price.greaterThan(nextTickPrice)) {\n      tick++;\n    }\n  }\n\n  return tick;\n}\n\nvar Tick = function Tick(_ref) {\n  var index = _ref.index,\n      liquidityGross = _ref.liquidityGross,\n      liquidityNet = _ref.liquidityNet;\n  !(index >= TickMath.MIN_TICK && index <= TickMath.MAX_TICK) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK') : 0 : void 0;\n  this.index = index;\n  this.liquidityGross = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(liquidityGross);\n  this.liquidityNet = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(liquidityNet);\n};\n\n/**\r\n * A data provider for ticks that is backed by an in-memory array of ticks.\r\n */\n\nvar TickListDataProvider = /*#__PURE__*/function () {\n  function TickListDataProvider(ticks, tickSpacing) {\n    var ticksMapped = ticks.map(function (t) {\n      return t instanceof Tick ? t : new Tick(t);\n    });\n    TickList.validateList(ticksMapped, tickSpacing);\n    this.ticks = ticksMapped;\n  }\n\n  var _proto = TickListDataProvider.prototype;\n\n  _proto.getTick = /*#__PURE__*/function () {\n    var _getTick = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(tick) {\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", TickList.getTick(this.ticks, tick));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getTick(_x) {\n      return _getTick.apply(this, arguments);\n    }\n\n    return getTick;\n  }();\n\n  _proto.nextInitializedTickWithinOneWord = /*#__PURE__*/function () {\n    var _nextInitializedTickWithinOneWord = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(tick, lte, tickSpacing) {\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", TickList.nextInitializedTickWithinOneWord(this.ticks, tick, lte, tickSpacing));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function nextInitializedTickWithinOneWord(_x2, _x3, _x4) {\n      return _nextInitializedTickWithinOneWord.apply(this, arguments);\n    }\n\n    return nextInitializedTickWithinOneWord;\n  }();\n\n  return TickListDataProvider;\n}();\n\n/**\r\n * By default, pools will not allow operations that require ticks.\r\n */\n\nvar NO_TICK_DATA_PROVIDER_DEFAULT = /*#__PURE__*/new NoTickDataProvider();\n/**\r\n * Represents a V3 pool\r\n */\n\nvar Pool = /*#__PURE__*/function () {\n  /**\r\n   * Construct a pool\r\n   * @param tokenA One of the tokens in the pool\r\n   * @param tokenB The other token in the pool\r\n   * @param fee The fee in hundredths of a bips of the input amount of every swap that is collected by the pool\r\n   * @param sqrtRatioX96 The sqrt of the current ratio of amounts of token1 to token0\r\n   * @param liquidity The current value of in range liquidity\r\n   * @param tickCurrent The current tick of the pool\r\n   * @param ticks The current state of the pool ticks or a data provider that can return tick data\r\n   */\n  function Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks) {\n    if (ticks === void 0) {\n      ticks = NO_TICK_DATA_PROVIDER_DEFAULT;\n    }\n\n    !(Number.isInteger(fee) && fee < 1000000) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'FEE') : 0 : void 0;\n    var tickCurrentSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent);\n    var nextTickSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent + 1);\n    !(jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(sqrtRatioX96), tickCurrentSqrtRatioX96) && jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(sqrtRatioX96), nextTickSqrtRatioX96)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'PRICE_BOUNDS') : 0 : void 0;\n\n    var _ref = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n\n    this.token0 = _ref[0];\n    this.token1 = _ref[1];\n    this.fee = fee;\n    this.sqrtRatioX96 = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(sqrtRatioX96);\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(liquidity);\n    this.tickCurrent = tickCurrent;\n    this.tickDataProvider = Array.isArray(ticks) ? new TickListDataProvider(ticks, TICK_SPACINGS[fee]) : ticks;\n  }\n\n  Pool.getAddress = function getAddress(tokenA, tokenB, fee, initCodeHashManualOverride) {\n    return computePoolAddress({\n      factoryAddress: FACTORY_ADDRESS,\n      fee: fee,\n      tokenA: tokenA,\n      tokenB: tokenB,\n      initCodeHashManualOverride: initCodeHashManualOverride\n    });\n  }\n  /**\r\n   * Returns true if the token is either token0 or token1\r\n   * @param token The token to check\r\n   * @returns True if token is either token0 or token\r\n   */\n  ;\n\n  var _proto = Pool.prototype;\n\n  _proto.involvesToken = function involvesToken(token) {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n  /**\r\n   * Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0\r\n   */\n  ;\n\n  /**\r\n   * Return the price of the given token in terms of the other token in the pool.\r\n   * @param token The token to return price of\r\n   * @returns The price of the given token, in terms of the other.\r\n   */\n  _proto.priceOf = function priceOf(token) {\n    !this.involvesToken(token) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n  /**\r\n   * Returns the chain ID of the tokens in the pool.\r\n   */\n  ;\n\n  /**\r\n   * Given an input amount of a token, return the computed output amount, and a pool with state updated after the trade\r\n   * @param inputAmount The input amount for which to quote the output amount\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit\r\n   * @returns The output amount and the pool with updated state\r\n   */\n  _proto.getOutputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getOutputAmount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(inputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap, outputAmount, sqrtRatioX96, liquidity, tickCurrent, outputToken;\n\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              !this.involvesToken(inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n              zeroForOne = inputAmount.currency.equals(this.token0);\n              _context.next = 4;\n              return this.swap(zeroForOne, inputAmount.quotient, sqrtPriceLimitX96);\n\n            case 4:\n              _yield$this$swap = _context.sent;\n              outputAmount = _yield$this$swap.amountCalculated;\n              sqrtRatioX96 = _yield$this$swap.sqrtRatioX96;\n              liquidity = _yield$this$swap.liquidity;\n              tickCurrent = _yield$this$swap.tickCurrent;\n              outputToken = zeroForOne ? this.token1 : this.token0;\n              return _context.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(outputToken, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(outputAmount, NEGATIVE_ONE)), new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getOutputAmount(_x, _x2) {\n      return _getOutputAmount.apply(this, arguments);\n    }\n\n    return getOutputAmount;\n  }()\n  /**\r\n   * Given a desired output amount of a token, return the computed input amount and a pool with state updated after the trade\r\n   * @param outputAmount the output amount for which to quote the input amount\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns The input amount and the pool with updated state\r\n   */\n  ;\n\n  _proto.getInputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getInputAmount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(outputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap2, inputAmount, sqrtRatioX96, liquidity, tickCurrent, inputToken;\n\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              !(outputAmount.currency.isToken && this.involvesToken(outputAmount.currency)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n              zeroForOne = outputAmount.currency.equals(this.token1);\n              _context2.next = 4;\n              return this.swap(zeroForOne, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(outputAmount.quotient, NEGATIVE_ONE), sqrtPriceLimitX96);\n\n            case 4:\n              _yield$this$swap2 = _context2.sent;\n              inputAmount = _yield$this$swap2.amountCalculated;\n              sqrtRatioX96 = _yield$this$swap2.sqrtRatioX96;\n              liquidity = _yield$this$swap2.liquidity;\n              tickCurrent = _yield$this$swap2.tickCurrent;\n              inputToken = zeroForOne ? this.token0 : this.token1;\n              return _context2.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(inputToken, inputAmount), new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function getInputAmount(_x3, _x4) {\n      return _getInputAmount.apply(this, arguments);\n    }\n\n    return getInputAmount;\n  }()\n  /**\r\n   * Executes a swap\r\n   * @param zeroForOne Whether the amount in is token0 or token1\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns amountCalculated\r\n   * @returns sqrtRatioX96\r\n   * @returns liquidity\r\n   * @returns tickCurrent\r\n   */\n  ;\n\n  _proto.swap =\n  /*#__PURE__*/\n  function () {\n    var _swap = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(zeroForOne, amountSpecified, sqrtPriceLimitX96) {\n      var exactInput, state, step, _yield$this$tickDataP, _SwapMath$computeSwap, liquidityNet;\n\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!sqrtPriceLimitX96) sqrtPriceLimitX96 = zeroForOne ? jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(TickMath.MIN_SQRT_RATIO, ONE) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(TickMath.MAX_SQRT_RATIO, ONE);\n\n              if (zeroForOne) {\n                !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtPriceLimitX96, TickMath.MIN_SQRT_RATIO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'RATIO_MIN') : 0 : void 0;\n                !jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(sqrtPriceLimitX96, this.sqrtRatioX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'RATIO_CURRENT') : 0 : void 0;\n              } else {\n                !jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(sqrtPriceLimitX96, TickMath.MAX_SQRT_RATIO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'RATIO_MAX') : 0 : void 0;\n                !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(sqrtPriceLimitX96, this.sqrtRatioX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'RATIO_CURRENT') : 0 : void 0;\n              }\n\n              exactInput = jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(amountSpecified, ZERO); // keep track of swap state\n\n              state = {\n                amountSpecifiedRemaining: amountSpecified,\n                amountCalculated: ZERO,\n                sqrtPriceX96: this.sqrtRatioX96,\n                tick: this.tickCurrent,\n                liquidity: this.liquidity\n              }; // start swap while loop\n\n            case 4:\n              if (!(jsbi__WEBPACK_IMPORTED_MODULE_1___default().notEqual(state.amountSpecifiedRemaining, ZERO) && state.sqrtPriceX96 != sqrtPriceLimitX96)) {\n                _context3.next = 35;\n                break;\n              }\n\n              step = {};\n              step.sqrtPriceStartX96 = state.sqrtPriceX96;\n              _context3.next = 9;\n              return this.tickDataProvider.nextInitializedTickWithinOneWord(state.tick, zeroForOne, this.tickSpacing);\n\n            case 9:\n              _yield$this$tickDataP = _context3.sent;\n              step.tickNext = _yield$this$tickDataP[0];\n              step.initialized = _yield$this$tickDataP[1];\n\n              if (step.tickNext < TickMath.MIN_TICK) {\n                step.tickNext = TickMath.MIN_TICK;\n              } else if (step.tickNext > TickMath.MAX_TICK) {\n                step.tickNext = TickMath.MAX_TICK;\n              }\n\n              step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.tickNext);\n              _SwapMath$computeSwap = SwapMath.computeSwapStep(state.sqrtPriceX96, (zeroForOne ? jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThan(step.sqrtPriceNextX96, sqrtPriceLimitX96) : jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(step.sqrtPriceNextX96, sqrtPriceLimitX96)) ? sqrtPriceLimitX96 : step.sqrtPriceNextX96, state.liquidity, state.amountSpecifiedRemaining, this.fee);\n              state.sqrtPriceX96 = _SwapMath$computeSwap[0];\n              step.amountIn = _SwapMath$computeSwap[1];\n              step.amountOut = _SwapMath$computeSwap[2];\n              step.feeAmount = _SwapMath$computeSwap[3];\n\n              if (exactInput) {\n                state.amountSpecifiedRemaining = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(state.amountSpecifiedRemaining, jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(step.amountIn, step.feeAmount));\n                state.amountCalculated = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(state.amountCalculated, step.amountOut);\n              } else {\n                state.amountSpecifiedRemaining = jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(state.amountSpecifiedRemaining, step.amountOut);\n                state.amountCalculated = jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(state.amountCalculated, jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(step.amountIn, step.feeAmount));\n              } // TODO\n\n\n              if (!jsbi__WEBPACK_IMPORTED_MODULE_1___default().equal(state.sqrtPriceX96, step.sqrtPriceNextX96)) {\n                _context3.next = 32;\n                break;\n              }\n\n              if (!step.initialized) {\n                _context3.next = 29;\n                break;\n              }\n\n              _context3.t0 = (jsbi__WEBPACK_IMPORTED_MODULE_1___default());\n              _context3.next = 25;\n              return this.tickDataProvider.getTick(step.tickNext);\n\n            case 25:\n              _context3.t1 = _context3.sent.liquidityNet;\n              liquidityNet = _context3.t0.BigInt.call(_context3.t0, _context3.t1);\n              // if we're moving leftward, we interpret liquidityNet as the opposite sign\n              // safe because liquidityNet cannot be type(int128).min\n              if (zeroForOne) liquidityNet = jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(liquidityNet, NEGATIVE_ONE);\n              state.liquidity = LiquidityMath.addDelta(state.liquidity, liquidityNet);\n\n            case 29:\n              state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;\n              _context3.next = 33;\n              break;\n\n            case 32:\n              if (state.sqrtPriceX96 != step.sqrtPriceStartX96) {\n                // recompute unless we're on a lower tick boundary (i.e. already transitioned ticks), and haven't moved\n                state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96);\n              }\n\n            case 33:\n              _context3.next = 4;\n              break;\n\n            case 35:\n              return _context3.abrupt(\"return\", {\n                amountCalculated: state.amountCalculated,\n                sqrtRatioX96: state.sqrtPriceX96,\n                liquidity: state.liquidity,\n                tickCurrent: state.tick\n              });\n\n            case 36:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function swap(_x5, _x6, _x7) {\n      return _swap.apply(this, arguments);\n    }\n\n    return swap;\n  }();\n\n  _createClass(Pool, [{\n    key: \"token0Price\",\n    get: function get() {\n      var _this$_token0Price;\n\n      return (_this$_token0Price = this._token0Price) != null ? _this$_token0Price : this._token0Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.token0, this.token1, Q192, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(this.sqrtRatioX96, this.sqrtRatioX96));\n    }\n    /**\r\n     * Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1\r\n     */\n\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      var _this$_token1Price;\n\n      return (_this$_token1Price = this._token1Price) != null ? _this$_token1Price : this._token1Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.token1, this.token0, jsbi__WEBPACK_IMPORTED_MODULE_1___default().multiply(this.sqrtRatioX96, this.sqrtRatioX96), Q192);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.token0.chainId;\n    }\n  }, {\n    key: \"tickSpacing\",\n    get: function get() {\n      return TICK_SPACINGS[this.fee];\n    }\n  }]);\n\n  return Pool;\n}();\n\n/**\r\n * Represents a position on a Uniswap V3 Pool\r\n */\n\nvar Position = /*#__PURE__*/function () {\n  /**\r\n   * Constructs a position for a given pool with the given liquidity\r\n   * @param pool For which pool the liquidity is assigned\r\n   * @param liquidity The amount of liquidity that is in the position\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   */\n  function Position(_ref) {\n    var pool = _ref.pool,\n        liquidity = _ref.liquidity,\n        tickLower = _ref.tickLower,\n        tickUpper = _ref.tickUpper;\n    // cached resuts for the getters\n    this._token0Amount = null;\n    this._token1Amount = null;\n    this._mintAmounts = null;\n    !(tickLower < tickUpper) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_ORDER') : 0 : void 0;\n    !(tickLower >= TickMath.MIN_TICK && tickLower % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_LOWER') : 0 : void 0;\n    !(tickUpper <= TickMath.MAX_TICK && tickUpper % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TICK_UPPER') : 0 : void 0;\n    this.pool = pool;\n    this.tickLower = tickLower;\n    this.tickUpper = tickUpper;\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(liquidity);\n  }\n  /**\r\n   * Returns the price of token0 at the lower tick\r\n   */\n\n\n  var _proto = Position.prototype;\n\n  /**\r\n   * Returns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentage\r\n   * @param slippageTolerance The amount by which the price can 'slip' before the transaction will revert\r\n   * @returns The sqrt ratios after slippage\r\n   */\n  _proto.ratiosAfterSlippage = function ratiosAfterSlippage(slippageTolerance) {\n    var priceLower = this.pool.token0Price.asFraction.multiply(new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Percent(1).subtract(slippageTolerance));\n    var priceUpper = this.pool.token0Price.asFraction.multiply(slippageTolerance.add(1));\n    var sqrtRatioX96Lower = encodeSqrtRatioX96(priceLower.numerator, priceLower.denominator);\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().lessThanOrEqual(sqrtRatioX96Lower, TickMath.MIN_SQRT_RATIO)) {\n      sqrtRatioX96Lower = jsbi__WEBPACK_IMPORTED_MODULE_1___default().add(TickMath.MIN_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(1));\n    }\n\n    var sqrtRatioX96Upper = encodeSqrtRatioX96(priceUpper.numerator, priceUpper.denominator);\n\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThanOrEqual(sqrtRatioX96Upper, TickMath.MAX_SQRT_RATIO)) {\n      sqrtRatioX96Upper = jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract(TickMath.MAX_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(1));\n    }\n\n    return {\n      sqrtRatioX96Lower: sqrtRatioX96Lower,\n      sqrtRatioX96Upper: sqrtRatioX96Upper\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position\r\n   * with the given slippage tolerance\r\n   * @param slippageTolerance Tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   */\n  ;\n\n  _proto.mintAmountsWithSlippage = function mintAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    var _this$ratiosAfterSlip = this.ratiosAfterSlippage(slippageTolerance),\n        sqrtRatioX96Upper = _this$ratiosAfterSlip.sqrtRatioX96Upper,\n        sqrtRatioX96Lower = _this$ratiosAfterSlip.sqrtRatioX96Lower; // construct counterfactual pools\n\n\n    var poolLower = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Lower, 0\n    /* liquidity doesn't matter */\n    , TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Upper, 0\n    /* liquidity doesn't matter */\n    , TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper)); // because the router is imprecise, we need to calculate the position that will be created (assuming no slippage)\n\n    var positionThatWillBeCreated = Position.fromAmounts(_extends({\n      pool: this.pool,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }, this.mintAmounts, {\n      useFullPrecision: false\n    })); // we want the smaller amounts...\n    // ...which occurs at the upper price for amount0...\n\n    var amount0 = new Position({\n      pool: poolUpper,\n      liquidity: positionThatWillBeCreated.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount0; // ...and the lower for amount1\n\n    var amount1 = new Position({\n      pool: poolLower,\n      liquidity: positionThatWillBeCreated.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount1;\n    return {\n      amount0: amount0,\n      amount1: amount1\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the\r\n   * position with the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   */\n  ;\n\n  _proto.burnAmountsWithSlippage = function burnAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    var _this$ratiosAfterSlip2 = this.ratiosAfterSlippage(slippageTolerance),\n        sqrtRatioX96Upper = _this$ratiosAfterSlip2.sqrtRatioX96Upper,\n        sqrtRatioX96Lower = _this$ratiosAfterSlip2.sqrtRatioX96Lower; // construct counterfactual pools\n\n\n    var poolLower = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Lower, 0\n    /* liquidity doesn't matter */\n    , TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Upper, 0\n    /* liquidity doesn't matter */\n    , TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper)); // we want the smaller amounts...\n    // ...which occurs at the upper price for amount0...\n\n    var amount0 = new Position({\n      pool: poolUpper,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount0; // ...and the lower for amount1\n\n    var amount1 = new Position({\n      pool: poolLower,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount1;\n    return {\n      amount0: amount0.quotient,\n      amount1: amount1.quotient\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at\r\n   * the current price for the pool\r\n   */\n  ;\n\n  /**\r\n   * Computes the maximum amount of liquidity received for a given amount of token0, token1,\r\n   * and the prices at the tick boundaries.\r\n   * @param pool The pool for which the position should be created\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   * @param amount0 token0 amount\r\n   * @param amount1 token1 amount\r\n   * @param useFullPrecision If false, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The amount of liquidity for the position\r\n   */\n  Position.fromAmounts = function fromAmounts(_ref2) {\n    var pool = _ref2.pool,\n        tickLower = _ref2.tickLower,\n        tickUpper = _ref2.tickUpper,\n        amount0 = _ref2.amount0,\n        amount1 = _ref2.amount1,\n        useFullPrecision = _ref2.useFullPrecision;\n    var sqrtRatioAX96 = TickMath.getSqrtRatioAtTick(tickLower);\n    var sqrtRatioBX96 = TickMath.getSqrtRatioAtTick(tickUpper);\n    return new Position({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      liquidity: maxLiquidityForAmounts(pool.sqrtRatioX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision)\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount0 The desired amount of token0\r\n   * @param useFullPrecision If true, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The position\r\n   */\n  ;\n\n  Position.fromAmount0 = function fromAmount0(_ref3) {\n    var pool = _ref3.pool,\n        tickLower = _ref3.tickLower,\n        tickUpper = _ref3.tickUpper,\n        amount0 = _ref3.amount0,\n        useFullPrecision = _ref3.useFullPrecision;\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: amount0,\n      amount1: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256,\n      useFullPrecision: useFullPrecision\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount1 The desired amount of token1\r\n   * @returns The position\r\n   */\n  ;\n\n  Position.fromAmount1 = function fromAmount1(_ref4) {\n    var pool = _ref4.pool,\n        tickLower = _ref4.tickLower,\n        tickUpper = _ref4.tickUpper,\n        amount1 = _ref4.amount1;\n    // this function always uses full precision,\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256,\n      amount1: amount1,\n      useFullPrecision: true\n    });\n  };\n\n  _createClass(Position, [{\n    key: \"token0PriceLower\",\n    get: function get() {\n      return tickToPrice(this.pool.token0, this.pool.token1, this.tickLower);\n    }\n    /**\r\n     * Returns the price of token0 at the upper tick\r\n     */\n\n  }, {\n    key: \"token0PriceUpper\",\n    get: function get() {\n      return tickToPrice(this.pool.token0, this.pool.token1, this.tickUpper);\n    }\n    /**\r\n     * Returns the amount of token0 that this position's liquidity could be burned for at the current pool price\r\n     */\n\n  }, {\n    key: \"amount0\",\n    get: function get() {\n      if (this._token0Amount === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, ZERO);\n        }\n      }\n\n      return this._token0Amount;\n    }\n    /**\r\n     * Returns the amount of token1 that this position's liquidity could be burned for at the current pool price\r\n     */\n\n  }, {\n    key: \"amount1\",\n    get: function get() {\n      if (this._token1Amount === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, ZERO);\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, false));\n        } else {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        }\n      }\n\n      return this._token1Amount;\n    }\n  }, {\n    key: \"mintAmounts\",\n    get: function get() {\n      if (this._mintAmounts === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          return {\n            amount0: SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: ZERO\n          };\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          return {\n            amount0: SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, true)\n          };\n        } else {\n          return {\n            amount0: ZERO,\n            amount1: SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true)\n          };\n        }\n      }\n\n      return this._mintAmounts;\n    }\n  }]);\n\n  return Position;\n}();\n\n/**\r\n * Represents a list of pools through which a swap can occur\r\n * @template TInput The input token\r\n * @template TOutput The output token\r\n */\n\nvar Route = /*#__PURE__*/function () {\n  /**\r\n   * Creates an instance of route.\r\n   * @param pools An array of `Pool` objects, ordered by the route the swap will take\r\n   * @param input The input token\r\n   * @param output The output token\r\n   */\n  function Route(pools, input, output) {\n    this._midPrice = null;\n    !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'POOLS') : 0 : void 0;\n    var chainId = pools[0].chainId;\n    var allOnSameChain = pools.every(function (pool) {\n      return pool.chainId === chainId;\n    });\n    !allOnSameChain ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'CHAIN_IDS') : 0 : void 0;\n    var wrappedInput = input.wrapped;\n    !pools[0].involvesToken(wrappedInput) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INPUT') : 0 : void 0;\n    !pools[pools.length - 1].involvesToken(output.wrapped) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n    /**\r\n     * Normalizes token0-token1 order and selects the next token/fee step to add to the path\r\n     * */\n\n    var tokenPath = [wrappedInput];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(pools.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          i = _step$value[0],\n          pool = _step$value[1];\n      var currentInputToken = tokenPath[i];\n      !(currentInputToken.equals(pool.token0) || currentInputToken.equals(pool.token1)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'PATH') : 0 : void 0;\n      var nextToken = currentInputToken.equals(pool.token0) ? pool.token1 : pool.token0;\n      tokenPath.push(nextToken);\n    }\n\n    this.pools = pools;\n    this.tokenPath = tokenPath;\n    this.input = input;\n    this.output = output != null ? output : tokenPath[tokenPath.length - 1];\n  }\n\n  _createClass(Route, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pools[0].chainId;\n    }\n    /**\r\n     * Returns the mid price of the route\r\n     */\n\n  }, {\n    key: \"midPrice\",\n    get: function get() {\n      if (this._midPrice !== null) return this._midPrice;\n      var price = this.pools.slice(1).reduce(function (_ref, pool) {\n        var nextInput = _ref.nextInput,\n            price = _ref.price;\n        return nextInput.equals(pool.token0) ? {\n          nextInput: pool.token1,\n          price: price.multiply(pool.token0Price)\n        } : {\n          nextInput: pool.token0,\n          price: price.multiply(pool.token1Price)\n        };\n      }, this.pools[0].token0.equals(this.input.wrapped) ? {\n        nextInput: this.pools[0].token1,\n        price: this.pools[0].token0Price\n      } : {\n        nextInput: this.pools[0].token0,\n        price: this.pools[0].token1Price\n      }).price;\n      return this._midPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.input, this.output, price.denominator, price.numerator);\n    }\n  }]);\n\n  return Route;\n}();\n\n/**\r\n * Trades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking them\r\n * @template TInput The input token, either Ether or an ERC-20\r\n * @template TOutput The output token, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n * @param a The first trade to compare\r\n * @param b The second trade to compare\r\n * @returns A sorted ordering for two neighboring elements in a trade array\r\n */\n\nfunction tradeComparator(a, b) {\n  // must have same input and output token for comparison\n  !a.inputAmount.currency.equals(b.inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INPUT_CURRENCY') : 0 : void 0;\n  !a.outputAmount.currency.equals(b.outputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'OUTPUT_CURRENCY') : 0 : void 0;\n\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      // consider the number of hops since each hop costs gas\n      var aHops = a.swaps.reduce(function (total, cur) {\n        return total + cur.route.tokenPath.length;\n      }, 0);\n      var bHops = b.swaps.reduce(function (total, cur) {\n        return total + cur.route.tokenPath.length;\n      }, 0);\n      return aHops - bHops;\n    } // trade A requires less input than trade B, so A should come first\n\n\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n/**\r\n * Represents a trade executed against a set of routes where some percentage of the input is\r\n * split across each route.\r\n *\r\n * Each route has its own set of pools. Pools can not be re-used across routes.\r\n *\r\n * Does not account for slippage, i.e., changes in price environment that can occur between\r\n * the time the trade is submitted and when it is executed.\r\n * @template TInput The input token, either Ether or an ERC-20\r\n * @template TOutput The output token, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n */\n\nvar Trade = /*#__PURE__*/function () {\n  /**\r\n   * Construct a trade by passing in the pre-computed property values\r\n   * @param routes The routes through which the trade occurs\r\n   * @param tradeType The type of trade, exact input or exact output\r\n   */\n  function Trade(_ref) {\n    var routes = _ref.routes,\n        tradeType = _ref.tradeType;\n    var inputCurrency = routes[0].inputAmount.currency;\n    var outputCurrency = routes[0].outputAmount.currency;\n    !routes.every(function (_ref2) {\n      var route = _ref2.route;\n      return inputCurrency.wrapped.equals(route.input.wrapped);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INPUT_CURRENCY_MATCH') : 0 : void 0;\n    !routes.every(function (_ref3) {\n      var route = _ref3.route;\n      return outputCurrency.wrapped.equals(route.output.wrapped);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'OUTPUT_CURRENCY_MATCH') : 0 : void 0;\n    var numPools = routes.map(function (_ref4) {\n      var route = _ref4.route;\n      return route.pools.length;\n    }).reduce(function (total, cur) {\n      return total + cur;\n    }, 0);\n    var poolAddressSet = new Set();\n\n    for (var _iterator = _createForOfIteratorHelperLoose(routes), _step; !(_step = _iterator()).done;) {\n      var route = _step.value.route;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(route.pools), _step2; !(_step2 = _iterator2()).done;) {\n        var pool = _step2.value;\n        poolAddressSet.add(Pool.getAddress(pool.token0, pool.token1, pool.fee));\n      }\n    }\n\n    !(numPools == poolAddressSet.size) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'POOLS_DUPLICATED') : 0 : void 0;\n    this.swaps = routes;\n    this.tradeType = tradeType;\n  }\n  /**\r\n   * @deprecated Deprecated in favor of 'swaps' property. If the trade consists of multiple routes\r\n   * this will return an error.\r\n   *\r\n   * When the trade consists of just a single route, this returns the route of the trade,\r\n   * i.e. which pools the trade goes through.\r\n   */\n\n\n  /**\r\n   * Constructs an exact in trade with the given amount in and route\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The route of the exact in trade\r\n   * @param amountIn The amount being passed in\r\n   * @returns The exact in trade\r\n   */\n  Trade.exactIn =\n  /*#__PURE__*/\n  function () {\n    var _exactIn = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(route, amountIn) {\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Trade.fromRoute(route, amountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function exactIn(_x, _x2) {\n      return _exactIn.apply(this, arguments);\n    }\n\n    return exactIn;\n  }()\n  /**\r\n   * Constructs an exact out trade with the given amount out and route\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The route of the exact out trade\r\n   * @param amountOut The amount returned by the trade\r\n   * @returns The exact out trade\r\n   */\n  ;\n\n  Trade.exactOut =\n  /*#__PURE__*/\n  function () {\n    var _exactOut = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(route, amountOut) {\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", Trade.fromRoute(route, amountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function exactOut(_x3, _x4) {\n      return _exactOut.apply(this, arguments);\n    }\n\n    return exactOut;\n  }()\n  /**\r\n   * Constructs a trade by simulating swaps through the given route\r\n   * @template TInput The input token, either Ether or an ERC-20.\r\n   * @template TOutput The output token, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param route route to swap through\r\n   * @param amount the amount specified, either input or output, depending on tradeType\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The route\r\n   */\n  ;\n\n  Trade.fromRoute =\n  /*#__PURE__*/\n  function () {\n    var _fromRoute = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(route, amount, tradeType) {\n      var amounts, inputAmount, outputAmount, i, pool, _yield$pool$getOutput, _outputAmount, _i, _pool, _yield$_pool$getInput, _inputAmount;\n\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              amounts = new Array(route.tokenPath.length);\n\n              if (!(tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT)) {\n                _context3.next = 19;\n                break;\n              }\n\n              !amount.currency.equals(route.input) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INPUT') : 0 : void 0;\n              amounts[0] = amount.wrapped;\n              i = 0;\n\n            case 5:\n              if (!(i < route.tokenPath.length - 1)) {\n                _context3.next = 15;\n                break;\n              }\n\n              pool = route.pools[i];\n              _context3.next = 9;\n              return pool.getOutputAmount(amounts[i]);\n\n            case 9:\n              _yield$pool$getOutput = _context3.sent;\n              _outputAmount = _yield$pool$getOutput[0];\n              amounts[i + 1] = _outputAmount;\n\n            case 12:\n              i++;\n              _context3.next = 5;\n              break;\n\n            case 15:\n              inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n              outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amounts[amounts.length - 1].numerator, amounts[amounts.length - 1].denominator);\n              _context3.next = 34;\n              break;\n\n            case 19:\n              !amount.currency.equals(route.output) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n              amounts[amounts.length - 1] = amount.wrapped;\n              _i = route.tokenPath.length - 1;\n\n            case 22:\n              if (!(_i > 0)) {\n                _context3.next = 32;\n                break;\n              }\n\n              _pool = route.pools[_i - 1];\n              _context3.next = 26;\n              return _pool.getInputAmount(amounts[_i]);\n\n            case 26:\n              _yield$_pool$getInput = _context3.sent;\n              _inputAmount = _yield$_pool$getInput[0];\n              amounts[_i - 1] = _inputAmount;\n\n            case 29:\n              _i--;\n              _context3.next = 22;\n              break;\n\n            case 32:\n              inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator);\n              outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n\n            case 34:\n              return _context3.abrupt(\"return\", new Trade({\n                routes: [{\n                  inputAmount: inputAmount,\n                  outputAmount: outputAmount,\n                  route: route\n                }],\n                tradeType: tradeType\n              }));\n\n            case 35:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function fromRoute(_x5, _x6, _x7) {\n      return _fromRoute.apply(this, arguments);\n    }\n\n    return fromRoute;\n  }()\n  /**\r\n   * Constructs a trade from routes by simulating swaps\r\n   *\r\n   * @template TInput The input token, either Ether or an ERC-20.\r\n   * @template TOutput The output token, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param routes the routes to swap through and how much of the amount should be routed through each\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The trade\r\n   */\n  ;\n\n  Trade.fromRoutes =\n  /*#__PURE__*/\n  function () {\n    var _fromRoutes = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4(routes, tradeType) {\n      var populatedRoutes, _iterator3, _step3, _step3$value, route, amount, amounts, inputAmount, outputAmount, i, pool, _yield$pool$getOutput2, _outputAmount2, _i2, _pool2, _yield$_pool2$getInpu, _inputAmount2;\n\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              populatedRoutes = [];\n              _iterator3 = _createForOfIteratorHelperLoose(routes);\n\n            case 2:\n              if ((_step3 = _iterator3()).done) {\n                _context4.next = 43;\n                break;\n              }\n\n              _step3$value = _step3.value, route = _step3$value.route, amount = _step3$value.amount;\n              amounts = new Array(route.tokenPath.length);\n              inputAmount = void 0;\n              outputAmount = void 0;\n\n              if (!(tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT)) {\n                _context4.next = 25;\n                break;\n              }\n\n              !amount.currency.equals(route.input) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INPUT') : 0 : void 0;\n              inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n              amounts[0] = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input.wrapped, amount.numerator, amount.denominator);\n              i = 0;\n\n            case 12:\n              if (!(i < route.tokenPath.length - 1)) {\n                _context4.next = 22;\n                break;\n              }\n\n              pool = route.pools[i];\n              _context4.next = 16;\n              return pool.getOutputAmount(amounts[i]);\n\n            case 16:\n              _yield$pool$getOutput2 = _context4.sent;\n              _outputAmount2 = _yield$pool$getOutput2[0];\n              amounts[i + 1] = _outputAmount2;\n\n            case 19:\n              i++;\n              _context4.next = 12;\n              break;\n\n            case 22:\n              outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amounts[amounts.length - 1].numerator, amounts[amounts.length - 1].denominator);\n              _context4.next = 40;\n              break;\n\n            case 25:\n              !amount.currency.equals(route.output) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n              outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n              amounts[amounts.length - 1] = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output.wrapped, amount.numerator, amount.denominator);\n              _i2 = route.tokenPath.length - 1;\n\n            case 29:\n              if (!(_i2 > 0)) {\n                _context4.next = 39;\n                break;\n              }\n\n              _pool2 = route.pools[_i2 - 1];\n              _context4.next = 33;\n              return _pool2.getInputAmount(amounts[_i2]);\n\n            case 33:\n              _yield$_pool2$getInpu = _context4.sent;\n              _inputAmount2 = _yield$_pool2$getInpu[0];\n              amounts[_i2 - 1] = _inputAmount2;\n\n            case 36:\n              _i2--;\n              _context4.next = 29;\n              break;\n\n            case 39:\n              inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator);\n\n            case 40:\n              populatedRoutes.push({\n                route: route,\n                inputAmount: inputAmount,\n                outputAmount: outputAmount\n              });\n\n            case 41:\n              _context4.next = 2;\n              break;\n\n            case 43:\n              return _context4.abrupt(\"return\", new Trade({\n                routes: populatedRoutes,\n                tradeType: tradeType\n              }));\n\n            case 44:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function fromRoutes(_x8, _x9) {\n      return _fromRoutes.apply(this, arguments);\n    }\n\n    return fromRoutes;\n  }()\n  /**\r\n   * Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */\n  ;\n\n  Trade.createUncheckedTrade = function createUncheckedTrade(constructorArguments) {\n    return new Trade(_extends({}, constructorArguments, {\n      routes: [{\n        inputAmount: constructorArguments.inputAmount,\n        outputAmount: constructorArguments.outputAmount,\n        route: constructorArguments.route\n      }]\n    }));\n  }\n  /**\r\n   * Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */\n  ;\n\n  Trade.createUncheckedTradeWithMultipleRoutes = function createUncheckedTradeWithMultipleRoutes(constructorArguments) {\n    return new Trade(constructorArguments);\n  }\n  /**\r\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount out\r\n   */\n  ;\n\n  var _proto = Trade.prototype;\n\n  _proto.minimumAmountOut = function minimumAmountOut(slippageTolerance, amountOut) {\n    if (amountOut === void 0) {\n      amountOut = this.outputAmount;\n    }\n\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT) {\n      return amountOut;\n    } else {\n      var slippageAdjustedAmountOut = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Fraction(ONE).add(slippageTolerance).invert().multiply(amountOut.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(amountOut.currency, slippageAdjustedAmountOut);\n    }\n  }\n  /**\r\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount in\r\n   */\n  ;\n\n  _proto.maximumAmountIn = function maximumAmountIn(slippageTolerance, amountIn) {\n    if (amountIn === void 0) {\n      amountIn = this.inputAmount;\n    }\n\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n      return amountIn;\n    } else {\n      var slippageAdjustedAmountIn = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Fraction(ONE).add(slippageTolerance).multiply(amountIn.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(amountIn.currency, slippageAdjustedAmountIn);\n    }\n  }\n  /**\r\n   * Return the execution price after accounting for slippage tolerance\r\n   * @param slippageTolerance the allowed tolerated slippage\r\n   * @returns The execution price\r\n   */\n  ;\n\n  _proto.worstExecutionPrice = function worstExecutionPrice(slippageTolerance) {\n    return new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(slippageTolerance).quotient, this.minimumAmountOut(slippageTolerance).quotient);\n  }\n  /**\r\n   * Given a list of pools, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\r\n   * amount to an output token, making at most `maxHops` hops.\r\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param nextAmountIn exact amount of input currency to spend\r\n   * @param currencyOut the desired currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact in trade\r\n   */\n  ;\n\n  Trade.bestTradeExactIn =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactIn = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5(pools, currencyAmountIn, currencyOut, _temp, // used in recursion.\n    currentPools, nextAmountIn, bestTrades) {\n      var _ref5, _ref5$maxNumResults, maxNumResults, _ref5$maxHops, maxHops, amountIn, tokenOut, i, pool, amountOut, _yield$pool$getOutput3, poolsExcludingThisPool;\n\n      return runtime_1.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref5 = _temp === void 0 ? {} : _temp, _ref5$maxNumResults = _ref5.maxNumResults, maxNumResults = _ref5$maxNumResults === void 0 ? 3 : _ref5$maxNumResults, _ref5$maxHops = _ref5.maxHops, maxHops = _ref5$maxHops === void 0 ? 3 : _ref5$maxHops;\n\n              if (currentPools === void 0) {\n                currentPools = [];\n              }\n\n              if (nextAmountIn === void 0) {\n                nextAmountIn = currencyAmountIn;\n              }\n\n              if (bestTrades === void 0) {\n                bestTrades = [];\n              }\n\n              !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'POOLS') : 0 : void 0;\n              !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n              !(currencyAmountIn === nextAmountIn || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n              amountIn = nextAmountIn.wrapped;\n              tokenOut = currencyOut.wrapped;\n              i = 0;\n\n            case 10:\n              if (!(i < pools.length)) {\n                _context5.next = 46;\n                break;\n              }\n\n              pool = pools[i]; // pool irrelevant\n\n              if (!(!pool.token0.equals(amountIn.currency) && !pool.token1.equals(amountIn.currency))) {\n                _context5.next = 14;\n                break;\n              }\n\n              return _context5.abrupt(\"continue\", 43);\n\n            case 14:\n              amountOut = void 0;\n              _context5.prev = 15;\n              _context5.next = 19;\n              return pool.getOutputAmount(amountIn);\n\n            case 19:\n              _yield$pool$getOutput3 = _context5.sent;\n              amountOut = _yield$pool$getOutput3[0];\n              _context5.next = 28;\n              break;\n\n            case 23:\n              _context5.prev = 23;\n              _context5.t0 = _context5[\"catch\"](15);\n\n              if (!_context5.t0.isInsufficientInputAmountError) {\n                _context5.next = 27;\n                break;\n              }\n\n              return _context5.abrupt(\"continue\", 43);\n\n            case 27:\n              throw _context5.t0;\n\n            case 28:\n              if (!(amountOut.currency.isToken && amountOut.currency.equals(tokenOut))) {\n                _context5.next = 39;\n                break;\n              }\n\n              _context5.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sortedInsert;\n              _context5.t2 = bestTrades;\n              _context5.next = 33;\n              return Trade.fromRoute(new Route([].concat(currentPools, [pool]), currencyAmountIn.currency, currencyOut), currencyAmountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT);\n\n            case 33:\n              _context5.t3 = _context5.sent;\n              _context5.t4 = maxNumResults;\n              _context5.t5 = tradeComparator;\n              (0, _context5.t1)(_context5.t2, _context5.t3, _context5.t4, _context5.t5);\n              _context5.next = 43;\n              break;\n\n            case 39:\n              if (!(maxHops > 1 && pools.length > 1)) {\n                _context5.next = 43;\n                break;\n              }\n\n              poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n\n              _context5.next = 43;\n              return Trade.bestTradeExactIn(poolsExcludingThisPool, currencyAmountIn, currencyOut, {\n                maxNumResults: maxNumResults,\n                maxHops: maxHops - 1\n              }, [].concat(currentPools, [pool]), amountOut, bestTrades);\n\n            case 43:\n              i++;\n              _context5.next = 10;\n              break;\n\n            case 46:\n              return _context5.abrupt(\"return\", bestTrades);\n\n            case 47:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[15, 23]]);\n    }));\n\n    function bestTradeExactIn(_x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n      return _bestTradeExactIn.apply(this, arguments);\n    }\n\n    return bestTradeExactIn;\n  }()\n  /**\r\n   * similar to the above method but instead targets a fixed output amount\r\n   * given a list of pools, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\r\n   * to an output token amount, making at most `maxHops` hops\r\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param currencyIn the currency to spend\r\n   * @param currencyAmountOut the desired currency amount out\r\n   * @param nextAmountOut the exact amount of currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact out trade\r\n   */\n  ;\n\n  Trade.bestTradeExactOut =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactOut = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee6(pools, currencyIn, currencyAmountOut, _temp2, // used in recursion.\n    currentPools, nextAmountOut, bestTrades) {\n      var _ref6, _ref6$maxNumResults, maxNumResults, _ref6$maxHops, maxHops, amountOut, tokenIn, i, pool, amountIn, _yield$pool$getInputA, poolsExcludingThisPool;\n\n      return runtime_1.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _ref6 = _temp2 === void 0 ? {} : _temp2, _ref6$maxNumResults = _ref6.maxNumResults, maxNumResults = _ref6$maxNumResults === void 0 ? 3 : _ref6$maxNumResults, _ref6$maxHops = _ref6.maxHops, maxHops = _ref6$maxHops === void 0 ? 3 : _ref6$maxHops;\n\n              if (currentPools === void 0) {\n                currentPools = [];\n              }\n\n              if (nextAmountOut === void 0) {\n                nextAmountOut = currencyAmountOut;\n              }\n\n              if (bestTrades === void 0) {\n                bestTrades = [];\n              }\n\n              !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'POOLS') : 0 : void 0;\n              !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n              !(currencyAmountOut === nextAmountOut || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n              amountOut = nextAmountOut.wrapped;\n              tokenIn = currencyIn.wrapped;\n              i = 0;\n\n            case 10:\n              if (!(i < pools.length)) {\n                _context6.next = 46;\n                break;\n              }\n\n              pool = pools[i]; // pool irrelevant\n\n              if (!(!pool.token0.equals(amountOut.currency) && !pool.token1.equals(amountOut.currency))) {\n                _context6.next = 14;\n                break;\n              }\n\n              return _context6.abrupt(\"continue\", 43);\n\n            case 14:\n              amountIn = void 0;\n              _context6.prev = 15;\n              _context6.next = 19;\n              return pool.getInputAmount(amountOut);\n\n            case 19:\n              _yield$pool$getInputA = _context6.sent;\n              amountIn = _yield$pool$getInputA[0];\n              _context6.next = 28;\n              break;\n\n            case 23:\n              _context6.prev = 23;\n              _context6.t0 = _context6[\"catch\"](15);\n\n              if (!_context6.t0.isInsufficientReservesError) {\n                _context6.next = 27;\n                break;\n              }\n\n              return _context6.abrupt(\"continue\", 43);\n\n            case 27:\n              throw _context6.t0;\n\n            case 28:\n              if (!amountIn.currency.equals(tokenIn)) {\n                _context6.next = 39;\n                break;\n              }\n\n              _context6.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sortedInsert;\n              _context6.t2 = bestTrades;\n              _context6.next = 33;\n              return Trade.fromRoute(new Route([pool].concat(currentPools), currencyIn, currencyAmountOut.currency), currencyAmountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n\n            case 33:\n              _context6.t3 = _context6.sent;\n              _context6.t4 = maxNumResults;\n              _context6.t5 = tradeComparator;\n              (0, _context6.t1)(_context6.t2, _context6.t3, _context6.t4, _context6.t5);\n              _context6.next = 43;\n              break;\n\n            case 39:\n              if (!(maxHops > 1 && pools.length > 1)) {\n                _context6.next = 43;\n                break;\n              }\n\n              poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n\n              _context6.next = 43;\n              return Trade.bestTradeExactOut(poolsExcludingThisPool, currencyIn, currencyAmountOut, {\n                maxNumResults: maxNumResults,\n                maxHops: maxHops - 1\n              }, [pool].concat(currentPools), amountIn, bestTrades);\n\n            case 43:\n              i++;\n              _context6.next = 10;\n              break;\n\n            case 46:\n              return _context6.abrupt(\"return\", bestTrades);\n\n            case 47:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[15, 23]]);\n    }));\n\n    function bestTradeExactOut(_x17, _x18, _x19, _x20, _x21, _x22, _x23) {\n      return _bestTradeExactOut.apply(this, arguments);\n    }\n\n    return bestTradeExactOut;\n  }();\n\n  _createClass(Trade, [{\n    key: \"route\",\n    get: function get() {\n      !(this.swaps.length == 1) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MULTIPLE_ROUTES') : 0 : void 0;\n      return this.swaps[0].route;\n    }\n    /**\r\n     * The input amount for the trade assuming no slippage.\r\n     */\n\n  }, {\n    key: \"inputAmount\",\n    get: function get() {\n      if (this._inputAmount) {\n        return this._inputAmount;\n      }\n\n      var inputCurrency = this.swaps[0].inputAmount.currency;\n      var totalInputFromRoutes = this.swaps.map(function (_ref7) {\n        var inputAmount = _ref7.inputAmount;\n        return inputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(inputCurrency, 0));\n      this._inputAmount = totalInputFromRoutes;\n      return this._inputAmount;\n    }\n    /**\r\n     * The output amount for the trade assuming no slippage.\r\n     */\n\n  }, {\n    key: \"outputAmount\",\n    get: function get() {\n      if (this._outputAmount) {\n        return this._outputAmount;\n      }\n\n      var outputCurrency = this.swaps[0].outputAmount.currency;\n      var totalOutputFromRoutes = this.swaps.map(function (_ref8) {\n        var outputAmount = _ref8.outputAmount;\n        return outputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(outputCurrency, 0));\n      this._outputAmount = totalOutputFromRoutes;\n      return this._outputAmount;\n    }\n    /**\r\n     * The price expressed in terms of output amount/input amount.\r\n     */\n\n  }, {\n    key: \"executionPrice\",\n    get: function get() {\n      var _this$_executionPrice;\n\n      return (_this$_executionPrice = this._executionPrice) != null ? _this$_executionPrice : this._executionPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient);\n    }\n    /**\r\n     * Returns the percent difference between the route's mid price and the price impact\r\n     */\n\n  }, {\n    key: \"priceImpact\",\n    get: function get() {\n      if (this._priceImpact) {\n        return this._priceImpact;\n      }\n\n      var spotOutputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0);\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.swaps), _step4; !(_step4 = _iterator4()).done;) {\n        var _step4$value = _step4.value,\n            route = _step4$value.route,\n            inputAmount = _step4$value.inputAmount;\n        var midPrice = route.midPrice;\n        spotOutputAmount = spotOutputAmount.add(midPrice.quote(inputAmount));\n      }\n\n      var priceImpact = spotOutputAmount.subtract(this.outputAmount).divide(spotOutputAmount);\n      this._priceImpact = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Percent(priceImpact.numerator, priceImpact.denominator);\n      return this._priceImpact;\n    }\n  }]);\n\n  return Trade;\n}();\n\nfunction isAllowedPermit(permitOptions) {\n  return 'nonce' in permitOptions;\n}\n\nvar SelfPermit = /*#__PURE__*/function () {\n  function SelfPermit() {}\n\n  SelfPermit.encodePermit = function encodePermit(token, options) {\n    return isAllowedPermit(options) ? SelfPermit.INTERFACE.encodeFunctionData('selfPermitAllowed', [token.address, toHex(options.nonce), toHex(options.expiry), options.v, options.r, options.s]) : SelfPermit.INTERFACE.encodeFunctionData('selfPermit', [token.address, toHex(options.amount), toHex(options.deadline), options.v, options.r, options.s]);\n  };\n\n  return SelfPermit;\n}();\nSelfPermit.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__.Interface(_uniswap_v3_periphery_artifacts_contracts_interfaces_ISelfPermit_sol_ISelfPermit_json__WEBPACK_IMPORTED_MODULE_3__.abi);\n\nvar MaxUint128 = /*#__PURE__*/toHex( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().subtract( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().exponentiate( /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(128)), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1___default().BigInt(1))); // type guard\n\nfunction isMint(options) {\n  return Object.keys(options).some(function (k) {\n    return k === 'recipient';\n  });\n}\n\nvar NonfungiblePositionManager = /*#__PURE__*/function (_SelfPermit) {\n  _inheritsLoose(NonfungiblePositionManager, _SelfPermit);\n\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function NonfungiblePositionManager() {\n    return _SelfPermit.call(this) || this;\n  }\n\n  NonfungiblePositionManager.encodeCreate = function encodeCreate(pool) {\n    return NonfungiblePositionManager.INTERFACE.encodeFunctionData('createAndInitializePoolIfNecessary', [pool.token0.address, pool.token1.address, pool.fee, toHex(pool.sqrtRatioX96)]);\n  };\n\n  NonfungiblePositionManager.createCallParameters = function createCallParameters(pool) {\n    return {\n      calldata: this.encodeCreate(pool),\n      value: toHex(0)\n    };\n  };\n\n  NonfungiblePositionManager.addCallParameters = function addCallParameters(position, options) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(position.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'ZERO_LIQUIDITY') : 0 : void 0;\n    var calldatas = []; // get amounts\n\n    var _position$mintAmounts = position.mintAmounts,\n        amount0Desired = _position$mintAmounts.amount0,\n        amount1Desired = _position$mintAmounts.amount1; // adjust for slippage\n\n    var minimumAmounts = position.mintAmountsWithSlippage(options.slippageTolerance);\n    var amount0Min = toHex(minimumAmounts.amount0);\n    var amount1Min = toHex(minimumAmounts.amount1);\n    var deadline = toHex(options.deadline); // create pool if needed\n\n    if (isMint(options) && options.createPool) {\n      calldatas.push(this.encodeCreate(position.pool));\n    } // permits if necessary\n\n\n    if (options.token0Permit) {\n      calldatas.push(NonfungiblePositionManager.encodePermit(position.pool.token0, options.token0Permit));\n    }\n\n    if (options.token1Permit) {\n      calldatas.push(NonfungiblePositionManager.encodePermit(position.pool.token1, options.token1Permit));\n    } // mint\n\n\n    if (isMint(options)) {\n      var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [{\n        token0: position.pool.token0.address,\n        token1: position.pool.token1.address,\n        fee: position.pool.fee,\n        tickLower: position.tickLower,\n        tickUpper: position.tickUpper,\n        amount0Desired: toHex(amount0Desired),\n        amount1Desired: toHex(amount1Desired),\n        amount0Min: amount0Min,\n        amount1Min: amount1Min,\n        recipient: recipient,\n        deadline: deadline\n      }]));\n    } else {\n      // increase\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('increaseLiquidity', [{\n        tokenId: toHex(options.tokenId),\n        amount0Desired: toHex(amount0Desired),\n        amount1Desired: toHex(amount1Desired),\n        amount0Min: amount0Min,\n        amount1Min: amount1Min,\n        deadline: deadline\n      }]));\n    }\n\n    var value = toHex(0);\n\n    if (options.useNative) {\n      var wrapped = options.useNative.wrapped;\n      !(position.pool.token0.equals(wrapped) || position.pool.token1.equals(wrapped)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'NO_WETH') : 0 : void 0;\n      var wrappedValue = position.pool.token0.equals(wrapped) ? amount0Desired : amount1Desired; // we only need to refund if we're actually sending ETH\n\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(wrappedValue, ZERO)) {\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('refundETH'));\n      }\n\n      value = toHex(wrappedValue);\n    }\n\n    return {\n      calldata: calldatas.length === 1 ? calldatas[0] : NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: value\n    };\n  };\n\n  NonfungiblePositionManager.encodeCollect = function encodeCollect(options) {\n    var calldatas = [];\n    var tokenId = toHex(options.tokenId);\n    var involvesETH = options.expectedCurrencyOwed0.currency.isNative || options.expectedCurrencyOwed1.currency.isNative;\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient); // collect\n\n    calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [{\n      tokenId: tokenId,\n      recipient: involvesETH ? ADDRESS_ZERO : recipient,\n      amount0Max: MaxUint128,\n      amount1Max: MaxUint128\n    }]));\n\n    if (involvesETH) {\n      var ethAmount = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed0.quotient : options.expectedCurrencyOwed1.quotient;\n      var token = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed1.currency : options.expectedCurrencyOwed0.currency;\n      var tokenAmount = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed1.quotient : options.expectedCurrencyOwed0.quotient;\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('unwrapWETH9', [toHex(ethAmount), recipient]));\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('sweepToken', [token.address, toHex(tokenAmount), recipient]));\n    }\n\n    return calldatas;\n  };\n\n  NonfungiblePositionManager.collectCallParameters = function collectCallParameters(options) {\n    var calldatas = NonfungiblePositionManager.encodeCollect(options);\n    return {\n      calldata: calldatas.length === 1 ? calldatas[0] : NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   * Produces the calldata for completely or partially exiting a position\r\n   * @param position The position to exit\r\n   * @param options Additional information necessary for generating the calldata\r\n   * @returns The call parameters\r\n   */\n  ;\n\n  NonfungiblePositionManager.removeCallParameters = function removeCallParameters(position, options) {\n    var calldatas = [];\n    var deadline = toHex(options.deadline);\n    var tokenId = toHex(options.tokenId); // construct a partial position with a percentage of liquidity\n\n    var partialPosition = new Position({\n      pool: position.pool,\n      liquidity: options.liquidityPercentage.multiply(position.liquidity).quotient,\n      tickLower: position.tickLower,\n      tickUpper: position.tickUpper\n    });\n    !jsbi__WEBPACK_IMPORTED_MODULE_1___default().greaterThan(partialPosition.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'ZERO_LIQUIDITY') : 0 : void 0; // slippage-adjusted underlying amounts\n\n    var _partialPosition$burn = partialPosition.burnAmountsWithSlippage(options.slippageTolerance),\n        amount0Min = _partialPosition$burn.amount0,\n        amount1Min = _partialPosition$burn.amount1;\n\n    if (options.permit) {\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('permit', [(0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.permit.spender), tokenId, toHex(options.permit.deadline), options.permit.v, options.permit.r, options.permit.s]));\n    } // remove liquidity\n\n\n    calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('decreaseLiquidity', [{\n      tokenId: tokenId,\n      liquidity: toHex(partialPosition.liquidity),\n      amount0Min: toHex(amount0Min),\n      amount1Min: toHex(amount1Min),\n      deadline: deadline\n    }]));\n\n    var _options$collectOptio = options.collectOptions,\n        expectedCurrencyOwed0 = _options$collectOptio.expectedCurrencyOwed0,\n        expectedCurrencyOwed1 = _options$collectOptio.expectedCurrencyOwed1,\n        rest = _objectWithoutPropertiesLoose(_options$collectOptio, [\"expectedCurrencyOwed0\", \"expectedCurrencyOwed1\"]);\n\n    calldatas.push.apply(calldatas, NonfungiblePositionManager.encodeCollect(_extends({\n      tokenId: toHex(options.tokenId),\n      // add the underlying value to the expected currency already owed\n      expectedCurrencyOwed0: expectedCurrencyOwed0.add(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(expectedCurrencyOwed0.currency, amount0Min)),\n      expectedCurrencyOwed1: expectedCurrencyOwed1.add(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(expectedCurrencyOwed1.currency, amount1Min))\n    }, rest)));\n\n    if (options.liquidityPercentage.equalTo(ONE)) {\n      if (options.burnToken) {\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('burn', [tokenId]));\n      }\n    } else {\n      !(options.burnToken !== true) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'CANNOT_BURN') : 0 : void 0;\n    }\n\n    return {\n      calldata: NonfungiblePositionManager.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: toHex(0)\n    };\n  };\n\n  NonfungiblePositionManager.safeTransferFromParameters = function safeTransferFromParameters(options) {\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var sender = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.sender);\n    var calldata;\n\n    if (options.data) {\n      calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256,bytes)', [sender, recipient, toHex(options.tokenId), options.data]);\n    } else {\n      calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256)', [sender, recipient, toHex(options.tokenId)]);\n    }\n\n    return {\n      calldata: calldata,\n      value: toHex(0)\n    };\n  };\n\n  return NonfungiblePositionManager;\n}(SelfPermit);\nNonfungiblePositionManager.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__.Interface(_uniswap_v3_periphery_artifacts_contracts_NonfungiblePositionManager_sol_NonfungiblePositionManager_json__WEBPACK_IMPORTED_MODULE_2__.abi);\n\n/**\r\n * Represents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.\r\n */\n\nvar SwapRouter = /*#__PURE__*/function (_SelfPermit) {\n  _inheritsLoose(SwapRouter, _SelfPermit);\n\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SwapRouter() {\n    return _SelfPermit.call(this) || this;\n  }\n  /**\r\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\r\n   * @param trade to produce call parameters for\r\n   * @param options options for the call parameters\r\n   */\n\n\n  SwapRouter.swapCallParameters = function swapCallParameters(trades, options) {\n    if (!Array.isArray(trades)) {\n      trades = [trades];\n    }\n\n    var sampleTrade = trades[0];\n    var tokenIn = sampleTrade.inputAmount.currency.wrapped;\n    var tokenOut = sampleTrade.outputAmount.currency.wrapped; // All trades should have the same starting and ending token.\n\n    !trades.every(function (trade) {\n      return trade.inputAmount.currency.wrapped.equals(tokenIn);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TOKEN_IN_DIFF') : 0 : void 0;\n    !trades.every(function (trade) {\n      return trade.outputAmount.currency.wrapped.equals(tokenOut);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'TOKEN_OUT_DIFF') : 0 : void 0;\n    var calldatas = [];\n    var ZERO_IN = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(trades[0].inputAmount.currency, 0);\n    var ZERO_OUT = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(trades[0].outputAmount.currency, 0);\n    var totalAmountOut = trades.reduce(function (sum, trade) {\n      return sum.add(trade.minimumAmountOut(options.slippageTolerance));\n    }, ZERO_OUT); // flag for whether a refund needs to happen\n\n    var mustRefund = sampleTrade.inputAmount.currency.isNative && sampleTrade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT;\n    var inputIsNative = sampleTrade.inputAmount.currency.isNative; // flags for whether funds should be send first to the router\n\n    var outputIsNative = sampleTrade.outputAmount.currency.isNative;\n    var routerMustCustody = outputIsNative || !!options.fee;\n    var totalValue = inputIsNative ? trades.reduce(function (sum, trade) {\n      return sum.add(trade.maximumAmountIn(options.slippageTolerance));\n    }, ZERO_IN) : ZERO_IN; // encode permit if necessary\n\n    if (options.inputTokenPermit) {\n      !sampleTrade.inputAmount.currency.isToken ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'NON_TOKEN_PERMIT') : 0 : void 0;\n      calldatas.push(SwapRouter.encodePermit(sampleTrade.inputAmount.currency, options.inputTokenPermit));\n    }\n\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var deadline = toHex(options.deadline);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(trades), _step; !(_step = _iterator()).done;) {\n      var trade = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(trade.swaps), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n            route = _step2$value.route,\n            inputAmount = _step2$value.inputAmount,\n            outputAmount = _step2$value.outputAmount;\n        var amountIn = toHex(trade.maximumAmountIn(options.slippageTolerance, inputAmount).quotient);\n        var amountOut = toHex(trade.minimumAmountOut(options.slippageTolerance, outputAmount).quotient); // flag for whether the trade is single hop or not\n\n        var singleHop = route.pools.length === 1;\n\n        if (singleHop) {\n          if (trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n            var _options$sqrtPriceLim;\n\n            var exactInputSingleParams = {\n              tokenIn: route.tokenPath[0].address,\n              tokenOut: route.tokenPath[1].address,\n              fee: route.pools[0].fee,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountIn: amountIn,\n              amountOutMinimum: amountOut,\n              sqrtPriceLimitX96: toHex((_options$sqrtPriceLim = options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim : 0)\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactInputSingle', [exactInputSingleParams]));\n          } else {\n            var _options$sqrtPriceLim2;\n\n            var exactOutputSingleParams = {\n              tokenIn: route.tokenPath[0].address,\n              tokenOut: route.tokenPath[1].address,\n              fee: route.pools[0].fee,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountOut: amountOut,\n              amountInMaximum: amountIn,\n              sqrtPriceLimitX96: toHex((_options$sqrtPriceLim2 = options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim2 : 0)\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutputSingle', [exactOutputSingleParams]));\n          }\n        } else {\n          !(options.sqrtPriceLimitX96 === undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MULTIHOP_PRICE_LIMIT') : 0 : void 0;\n          var path = encodeRouteToPath(route, trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n\n          if (trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n            var exactInputParams = {\n              path: path,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountIn: amountIn,\n              amountOutMinimum: amountOut\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactInput', [exactInputParams]));\n          } else {\n            var exactOutputParams = {\n              path: path,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountOut: amountOut,\n              amountInMaximum: amountIn\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutput', [exactOutputParams]));\n          }\n        }\n      }\n    } // unwrap\n\n\n    if (routerMustCustody) {\n      if (!!options.fee) {\n        var feeRecipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.fee.recipient);\n        var fee = toHex(options.fee.fee.multiply(10000).quotient);\n\n        if (outputIsNative) {\n          calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('unwrapWETH9WithFee', [toHex(totalAmountOut.quotient), recipient, fee, feeRecipient]));\n        } else {\n          calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('sweepTokenWithFee', [sampleTrade.outputAmount.currency.wrapped.address, toHex(totalAmountOut.quotient), recipient, fee, feeRecipient]));\n        }\n      } else {\n        calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('unwrapWETH9', [toHex(totalAmountOut.quotient), recipient]));\n      }\n    } // refund\n\n\n    if (mustRefund) {\n      calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('refundETH'));\n    }\n\n    return {\n      calldata: calldatas.length === 1 ? calldatas[0] : SwapRouter.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: toHex(totalValue.quotient)\n    };\n  };\n\n  return SwapRouter;\n}(SelfPermit);\nSwapRouter.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__.Interface(_uniswap_v3_periphery_artifacts_contracts_SwapRouter_sol_SwapRouter_json__WEBPACK_IMPORTED_MODULE_4__.abi);\n\n/**\r\n * Represents the Uniswap V3 QuoterV1 contract with a method for returning the formatted\r\n * calldata needed to call the quoter contract.\r\n */\n\nvar SwapQuoter = /*#__PURE__*/function () {\n  function SwapQuoter() {}\n\n  /**\r\n   * Produces the on-chain method name of the appropriate function within QuoterV2,\r\n   * and the relevant hex encoded parameters.\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The swap route, a list of pools through which a swap can occur\r\n   * @param amount The amount of the quote, either an amount in, or an amount out\r\n   * @param tradeType The trade type, either exact input or exact output\r\n   * @returns The formatted calldata\r\n   */\n  SwapQuoter.quoteCallParameters = function quoteCallParameters(route, amount, tradeType, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var singleHop = route.pools.length === 1;\n    var quoteAmount = toHex(amount.quotient);\n    var calldata;\n\n    if (singleHop) {\n      if (tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n        var _options$sqrtPriceLim, _options;\n\n        calldata = SwapQuoter.INTERFACE.encodeFunctionData(\"quoteExactInputSingle\", [route.tokenPath[0].address, route.tokenPath[1].address, route.pools[0].fee, quoteAmount, toHex((_options$sqrtPriceLim = (_options = options) == null ? void 0 : _options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim : 0)]);\n      } else {\n        var _options$sqrtPriceLim2, _options2;\n\n        calldata = SwapQuoter.INTERFACE.encodeFunctionData(\"quoteExactOutputSingle\", [route.tokenPath[0].address, route.tokenPath[1].address, route.pools[0].fee, quoteAmount, toHex((_options$sqrtPriceLim2 = (_options2 = options) == null ? void 0 : _options2.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim2 : 0)]);\n      }\n    } else {\n      var _options3;\n\n      !(((_options3 = options) == null ? void 0 : _options3.sqrtPriceLimitX96) === undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(false, 'MULTIHOP_PRICE_LIMIT') : 0 : void 0;\n      var path = encodeRouteToPath(route, tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n\n      if (tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n        calldata = SwapQuoter.INTERFACE.encodeFunctionData('quoteExactInput', [path, quoteAmount]);\n      } else {\n        calldata = SwapQuoter.INTERFACE.encodeFunctionData('quoteExactOutput', [path, quoteAmount]);\n      }\n    }\n\n    return {\n      calldata: calldata,\n      value: toHex(0)\n    };\n  };\n\n  return SwapQuoter;\n}();\nSwapQuoter.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__.Interface(_uniswap_v3_periphery_artifacts_contracts_lens_Quoter_sol_Quoter_json__WEBPACK_IMPORTED_MODULE_5__.abi);\n\nvar Staker = /*#__PURE__*/function () {\n  function Staker() {}\n  /**\r\n   *  To claim rewards, must unstake and then claim.\r\n   * @param incentiveKey The unique identifier of a staking program.\r\n   * @param options Options for producing the calldata to claim. Can't claim unless you unstake.\r\n   * @returns The calldatas for 'unstakeToken' and 'claimReward'.\r\n   */\n\n\n  Staker.encodeClaim = function encodeClaim(incentiveKey, options) {\n    var _options$amount;\n\n    var calldatas = [];\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('unstakeToken', [this._encodeIncentiveKey(incentiveKey), toHex(options.tokenId)]));\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var amount = (_options$amount = options.amount) != null ? _options$amount : 0;\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('claimReward', [incentiveKey.rewardToken.address, recipient, toHex(amount)]));\n    return calldatas;\n  }\n  /**\r\n   *\r\n   * Note:  A `tokenId` can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.\r\n   * @param incentiveKeys An IncentiveKey or array of IncentiveKeys that `tokenId` is staked in.\r\n   * Input an array of IncentiveKeys to claim rewards for each program.\r\n   * @param options ClaimOptions to specify tokenId, recipient, and amount wanting to collect.\r\n   * Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.\r\n   * @returns\r\n   */\n  ;\n\n  Staker.collectRewards = function collectRewards(incentiveKeys, options) {\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var calldatas = [];\n\n    for (var i = 0; i < incentiveKeys.length; i++) {\n      // the unique program tokenId is staked in\n      var incentiveKey = incentiveKeys[i]; // unstakes and claims for the unique program\n\n      calldatas = calldatas.concat(this.encodeClaim(incentiveKey, options)); // re-stakes the position for the unique program\n\n      calldatas.push(Staker.INTERFACE.encodeFunctionData('stakeToken', [this._encodeIncentiveKey(incentiveKey), toHex(options.tokenId)]));\n    }\n\n    return {\n      calldata: Staker.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   *\r\n   * @param incentiveKeys A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that `options.tokenId` is staked in.\r\n   * @param withdrawOptions Options for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for `tokenId`.\r\n   * @returns Calldata for unstaking, claiming, and withdrawing.\r\n   */\n  ;\n\n  Staker.withdrawToken = function withdrawToken(incentiveKeys, withdrawOptions) {\n    var calldatas = [];\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var claimOptions = {\n      tokenId: withdrawOptions.tokenId,\n      recipient: withdrawOptions.recipient,\n      amount: withdrawOptions.amount\n    };\n\n    for (var i = 0; i < incentiveKeys.length; i++) {\n      var incentiveKey = incentiveKeys[i];\n      calldatas = calldatas.concat(this.encodeClaim(incentiveKey, claimOptions));\n    }\n\n    var owner = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(withdrawOptions.owner);\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('withdrawToken', [toHex(withdrawOptions.tokenId), owner, withdrawOptions.data ? withdrawOptions.data : toHex(0)]));\n    return {\n      calldata: Staker.INTERFACE.encodeFunctionData('multicall', [calldatas]),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   *\r\n   * @param incentiveKeys A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in `safeTransferFrom`\r\n   * @returns An IncentiveKey as a string\r\n   */\n  ;\n\n  Staker.encodeDeposit = function encodeDeposit(incentiveKeys) {\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var data;\n\n    if (incentiveKeys.length > 1) {\n      var keys = [];\n\n      for (var i = 0; i < incentiveKeys.length; i++) {\n        var incentiveKey = incentiveKeys[i];\n        keys.push(this._encodeIncentiveKey(incentiveKey));\n      }\n\n      data = _ethersproject_abi__WEBPACK_IMPORTED_MODULE_9__.defaultAbiCoder.encode([Staker.INCENTIVE_KEY_ABI + \"[]\"], [keys]);\n    } else {\n      data = _ethersproject_abi__WEBPACK_IMPORTED_MODULE_9__.defaultAbiCoder.encode([Staker.INCENTIVE_KEY_ABI], [this._encodeIncentiveKey(incentiveKeys[0])]);\n    }\n\n    return data;\n  }\n  /**\r\n   *\r\n   * @param incentiveKey An `IncentiveKey` which represents a unique staking program.\r\n   * @returns An encoded IncentiveKey to be read by ethers\r\n   */\n  ;\n\n  Staker._encodeIncentiveKey = function _encodeIncentiveKey(incentiveKey) {\n    var _incentiveKey$pool = incentiveKey.pool,\n        token0 = _incentiveKey$pool.token0,\n        token1 = _incentiveKey$pool.token1,\n        fee = _incentiveKey$pool.fee;\n    var refundee = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(incentiveKey.refundee);\n    return {\n      rewardToken: incentiveKey.rewardToken.address,\n      pool: Pool.getAddress(token0, token1, fee),\n      startTime: toHex(incentiveKey.startTime),\n      endTime: toHex(incentiveKey.endTime),\n      refundee: refundee\n    };\n  };\n\n  return Staker;\n}();\nStaker.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_11__.Interface(_uniswap_v3_staker_artifacts_contracts_UniswapV3Staker_sol_UniswapV3Staker_json__WEBPACK_IMPORTED_MODULE_6__.abi);\nStaker.INCENTIVE_KEY_ABI = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)';\n\n\n//# sourceMappingURL=v3-sdk.esm.js.map\n\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js?");

/***/ }),

/***/ "./node_modules/big.js/big.js":
/*!************************************!*\
  !*** ./node_modules/big.js/big.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n *  big.js v5.2.2\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  https://github.com/MikeMcl/big.js/LICENCE\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,          // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big.\r\n     * (This limit is not enforced or checked.)\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   *\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        parse(x, n);\r\n      }\r\n\r\n      /*\r\n       * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\r\n       * points to Object.\r\n       */\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.version = '5.2.2';\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    // Minus zero?\r\n    if (n === 0 && 1 / n < 0) n = '-0';\r\n    else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number');\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n   * Called by stringify, P.div, P.round and P.sqrt.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * dp {number} Integer, 0 to MAX_DP inclusive.\r\n   * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, dp, rm, more) {\r\n    var xc = x.c,\r\n      i = x.e + dp + 1;\r\n\r\n    if (i < xc.length) {\r\n      if (rm === 1) {\r\n\r\n        // xc[i] is the digit after the digit that may be rounded up.\r\n        more = xc[i] >= 5;\r\n      } else if (rm === 2) {\r\n        more = xc[i] > 5 || xc[i] == 5 &&\r\n          (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\r\n      } else if (rm === 3) {\r\n        more = more || !!xc[0];\r\n      } else {\r\n        more = false;\r\n        if (rm !== 0) throw Error(INVALID_RM);\r\n      }\r\n\r\n      if (i < 1) {\r\n        xc.length = 1;\r\n\r\n        if (more) {\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          x.e = -dp;\r\n          xc[0] = 1;\r\n        } else {\r\n\r\n          // Zero.\r\n          xc[0] = x.e = 0;\r\n        }\r\n      } else {\r\n\r\n        // Remove any digits after the required decimal places.\r\n        xc.length = i--;\r\n\r\n        // Round up?\r\n        if (more) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up.\r\n          for (; ++xc[i] > 9;) {\r\n            xc[i] = 0;\r\n            if (!i--) {\r\n              ++x.e;\r\n              xc.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; !xc[--i];) xc.pop();\r\n      }\r\n    } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   *\r\n   * x {Big}\r\n   * id? {number} Caller id.\r\n   *         1 toExponential\r\n   *         2 toFixed\r\n   *         3 toPrecision\r\n   *         4 valueOf\r\n   * n? {number|undefined} Caller's argument.\r\n   * k? {number|undefined}\r\n   */\r\n  function stringify(x, id, n, k) {\r\n    var e, s,\r\n      Big = x.constructor,\r\n      z = !x.c[0];\r\n\r\n    if (n !== UNDEFINED) {\r\n      if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\r\n        throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\r\n      }\r\n\r\n      x = new Big(x);\r\n\r\n      // The index of the digit that may be rounded up.\r\n      n = k - x.e;\r\n\r\n      // Round?\r\n      if (x.c.length > ++k) round(x, n, Big.RM);\r\n\r\n      // toFixed: recalculate k as x.e may have changed if value rounded up.\r\n      if (id == 2) k = x.e + n + 1;\r\n\r\n      // Append zeros?\r\n      for (; x.c.length < k;) x.c.push(0);\r\n    }\r\n\r\n    e = x.e;\r\n    s = x.c.join('');\r\n    n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) for (e -= n; e--;) s += '0';\r\n      else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n  */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) return new Big(k * 0);\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      d = dp + (q.e = x.e - y.e) + 1;    // number of digits of the result\r\n\r\n    q.s = k;\r\n    k = d < 0 ? 0 : d;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n\r\n      // y is non-zero? x is non-zero? Or both are zero.\r\n      return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\r\n    if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    a = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (b = 0; a; xc[a] %= 10) b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (b) {\r\n      xc.unshift(b);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (a = xc.length; xc[--a] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor(1),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded using rounding mode rm\r\n   * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\r\n   * multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   * If rm is not specified, use Big.RM.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n   */\r\n  P.round = function (dp, rm) {\r\n    var Big = this.constructor;\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\r\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big(0.5);\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) throw Error(NAME + 'No square root');\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s);\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, Big.DP -= 4, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) return new Big(y.s * 0);\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = (c[j] + b) % 10;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   */\r\n  P.toExponential = function (dp) {\r\n    return stringify(this, 1, dp, dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp) {\r\n    return stringify(this, 2, dp, this.e + dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Integer, 1 to MAX_DP inclusive.\r\n   */\r\n  P.toPrecision = function (sd) {\r\n    return stringify(this, 3, sd, sd - 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toString = function () {\r\n    return stringify(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return stringify(this, 4);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return Big; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n\n\n//# sourceURL=webpack://bitmix/./node_modules/big.js/big.js?");

/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"?8131\").Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n\n//# sourceURL=webpack://bitmix/./node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/decimal.js-light/decimal.js":
/*!**************************************************!*\
  !*** ./node_modules/decimal.js-light/decimal.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */\r\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js-light v2.5.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js-light\r\n   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Expat Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  var MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    Decimal = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed during run-time using `Decimal.config`.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,\r\n      // `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -MAX_E\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to MAX_E\r\n\r\n      // The natural logarithm of 10.\r\n      // 115 digits\r\n      LN10: '2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286'\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    exponentOutOfRange = decimalError + 'Exponent out of range: ',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    ONE,\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE),    // 1286742750677284\r\n\r\n    // Decimal.prototype object\r\n    P = {};\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue                       abs\r\n   *  comparedTo                          cmp\r\n   *  decimalPlaces                       dp\r\n   *  dividedBy                           div\r\n   *  dividedToIntegerBy                  idiv\r\n   *  equals                              eq\r\n   *  exponent\r\n   *  greaterThan                         gt\r\n   *  greaterThanOrEqualTo                gte\r\n   *  isInteger                           isint\r\n   *  isNegative                          isneg\r\n   *  isPositive                          ispos\r\n   *  isZero\r\n   *  lessThan                            lt\r\n   *  lessThanOrEqualTo                   lte\r\n   *  logarithm                           log\r\n   *  minus                               sub\r\n   *  modulo                              mod\r\n   *  naturalExponential                  exp\r\n   *  naturalLogarithm                    ln\r\n   *  negated                             neg\r\n   *  plus                                add\r\n   *  precision                           sd\r\n   *  squareRoot                          sqrt\r\n   *  times                               mul\r\n   *  toDecimalPlaces                     todp\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toInteger                           toint\r\n   *  toNumber\r\n   *  toPower                             pow\r\n   *  toPrecision\r\n   *  toSignificantDigits                 tosd\r\n   *  toString\r\n   *  valueOf                             val\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this;\r\n\r\n    y = new x.constructor(y);\r\n\r\n    // Signs differ?\r\n    if (x.s !== y.s) return x.s || -y.s;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;\r\n\r\n    xdL = x.d.length;\r\n    ydL = y.d.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var x = this,\r\n      w = x.d.length - 1,\r\n      dp = (w - x.e) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = x.d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) dp--;\r\n\r\n    return dp < 0 ? 0 : dp;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).\r\n   *\r\n   */\r\n  P.exponent = function () {\r\n    return getBase10Exponent(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    return this.cmp(y) >= 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isint = function () {\r\n    return this.e > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isneg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.ispos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return this.s === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   * If no base is specified, return log[10](x).\r\n   *\r\n   * log[base](x) = ln(x) / ln(base)\r\n   *\r\n   * The maximum error of the result is 1 ulp (unit in the last place).\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var r,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      wpr = pr + 5;\r\n\r\n    // Default base is 10.\r\n    if (base === void 0) {\r\n      base = new Ctor(10);\r\n    } else {\r\n      base = new Ctor(base);\r\n\r\n      // log[-b](x) = NaN\r\n      // log[0](x)  = NaN\r\n      // log[1](x)  = NaN\r\n      if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    // log[b](-x) = NaN\r\n    // log[b](0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // log[b](1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    external = false;\r\n    r = divide(ln(x, wpr), ln(base, wpr), wpr);\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // x % 0 = NaN\r\n    if (!y.s) throw Error(decimalError + 'NaN');\r\n\r\n    // Return x if x is 0.\r\n    if (!x.s) return round(new Ctor(x), pr);\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n    q = divide(x, y, 0, 1).times(y);\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return exp(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return ln(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s || 0;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var x = this;\r\n    y = new x.constructor(y);\r\n    return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var e, sd, w,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    e = getBase10Exponent(x) + 1;\r\n    w = x.d.length - 1;\r\n    sd = w * LOG_BASE + 1;\r\n    w = x.d[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) sd--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = x.d[0]; w >= 10; w /= 10) sd++;\r\n    }\r\n\r\n    return z && e > sd ? e : sd;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`\r\n   * significant digits.\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var e, n, pr, r, s, t, wpr,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative or zero?\r\n    if (x.s < 1) {\r\n      if (!x.s) return new Ctor(0);\r\n\r\n      // sqrt(-x) = NaN\r\n      throw Error(decimalError + 'NaN');\r\n    }\r\n\r\n    e = getBase10Exponent(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    pr = Ctor.precision;\r\n    s = wpr = pr + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, wpr + 2)).times(0.5);\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {\r\n        n = n.slice(wpr - 3, wpr + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (s == wpr && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          round(t, pr + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        } else if (n != '9999') {\r\n          break;\r\n        }\r\n\r\n        wpr += 4;\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return round(r, pr);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to\r\n   * `precision` significant digits.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    // Return 0 if either is 0.\r\n    if (!x.s || !y.s) return new Ctor(0);\r\n\r\n    y.s *= x.s;\r\n    e = x.e + y.e;\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = e;\r\n\r\n    return external ? round(y, Ctor.precision) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.todp = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return round(x, dp + getBase10Exponent(x) + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = toString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), dp + 1, rm);\r\n      str = toString(x, true, dp + 1);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) return toString(x);\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);\r\n    str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isneg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.toInteger = P.toint = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,\r\n   * truncated to `precision` significant digits.\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * The maximum error is 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, sign, yIsInt,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      guard = 12,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // pow(x, 0) = 1\r\n    if (!y.s) return new Ctor(ONE);\r\n\r\n    x = new Ctor(x);\r\n\r\n    // pow(0, y > 0) = 0\r\n    // pow(0, y < 0) = Infinity\r\n    if (!x.s) {\r\n      if (y.s < 1) throw Error(decimalError + 'Infinity');\r\n      return x;\r\n    }\r\n\r\n    // pow(1, y) = 1\r\n    if (x.eq(ONE)) return x;\r\n\r\n    pr = Ctor.precision;\r\n\r\n    // pow(x, 1) = x\r\n    if (y.eq(ONE)) return round(x, pr);\r\n\r\n    e = y.e;\r\n    k = y.d.length - 1;\r\n    yIsInt = e >= k;\r\n    sign = x.s;\r\n\r\n    if (!yIsInt) {\r\n\r\n      // pow(x < 0, y non-integer) = NaN\r\n      if (sign < 0) throw Error(decimalError + 'NaN');\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = new Ctor(ONE);\r\n\r\n      // Max k of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      e = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n      external = false;\r\n\r\n      for (;;) {\r\n        if (k % 2) {\r\n          r = r.times(x);\r\n          truncate(r.d, e);\r\n        }\r\n\r\n        k = mathfloor(k / 2);\r\n        if (k === 0) break;\r\n\r\n        x = x.times(x);\r\n        truncate(x.d, e);\r\n      }\r\n\r\n      external = true;\r\n\r\n      return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);\r\n    }\r\n\r\n    // Result is negative if x is negative and the last digit of integer y is odd.\r\n    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;\r\n\r\n    x.s = 1;\r\n    external = false;\r\n    r = y.times(ln(x, pr + guard));\r\n    external = true;\r\n    r = exp(r);\r\n    r.s = sign;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var e, str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = round(new Ctor(x), sd, rm);\r\n      e = getBase10Exponent(x);\r\n      str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.tosd = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return round(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = P.valueOf = P.val = P.toJSON = function () {\r\n    var x = this,\r\n      e = getBase10Exponent(x),\r\n      Ctor = x.constructor;\r\n\r\n    return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  add                 P.minus, P.plus\r\n   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd\r\n   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln\r\n   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln\r\n   *  exp                 P.exp, P.pow\r\n   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,\r\n   *                      P.toString, divide, round, toString, exp, ln\r\n   *  getLn10             P.log, ln\r\n   *  getZeroString       digitsToString, toString\r\n   *  ln                  P.log, P.ln, P.pow, exp\r\n   *  parseDecimal        Decimal\r\n   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,\r\n   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,\r\n   *                      divide, getLn10, exp, ln\r\n   *  subtract            P.minus, P.plus\r\n   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf\r\n   *  truncate            P.pow\r\n   *\r\n   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,\r\n   *                      getLn10, exp, ln, parseDecimal, Decimal, config\r\n   */\r\n\r\n\r\n  function add(x, y) {\r\n    var carry, d, e, i, k, len, xd, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // If either is zero...\r\n    if (!x.s || !y.s) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!y.s) y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    k = x.e;\r\n    e = y.e;\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % BASE | 0;\r\n        carry = temp / BASE | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * BASE + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, dp) {\r\n      var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either 0?\r\n      if (!x.s) return new Ctor(x);\r\n      if (!y.s) throw Error(decimalError + 'Division by zero');\r\n\r\n      e = x.e - y.e;\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      for (i = 0; yd[i] == (xd[i] || 0); ) ++i;\r\n      if (yd[i] > (xd[i] || 0)) --e;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n      } else if (dp) {\r\n        sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) return new Ctor(0);\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / LOG_BASE + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * BASE + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= BASE/2\r\n        k = BASE / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k);\r\n          xd = multiplyInteger(xd, k);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= BASE / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= BASE) k = BASE - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n\r\n      q.e = e;\r\n\r\n      return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`\r\n   * significant digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   */\r\n  function exp(x, sd) {\r\n    var denominator, guard, pow, sum, t, wpr,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n\r\n    // exp(0) = 1\r\n    if (!x.s) return new Ctor(ONE);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    while (x.abs().gte(0.1)) {\r\n      x = x.times(t);    // x = x / 2^5\r\n      k += 5;\r\n    }\r\n\r\n    // Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(ONE);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = round(pow.times(x), wpr);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        while (k--) sum = round(sum.times(sum), wpr);\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(x) {\r\n    var e = x.e * LOG_BASE,\r\n      w = x.d[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for (; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n\r\n    if (sd > Ctor.LN10.sd()) {\r\n\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(decimalError + 'LN10 precision limit exceeded');\r\n    }\r\n\r\n    return round(new Ctor(Ctor.LN10), sd);\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(n) is non-terminating (n != 1)\r\n   *\r\n   */\r\n  function ln(y, sd) {\r\n    var c, c0, denominator, e, numerator, sum, t, wpr, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // ln(-x) = NaN\r\n    // ln(0) = -Infinity\r\n    if (x.s < 1) throw Error(decimalError + (x.s ? 'NaN' : '-Infinity'));\r\n\r\n    // ln(1) = 0\r\n    if (x.eq(ONE)) return new Ctor(0);\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    if (x.eq(10)) {\r\n      if (sd == null) external = true;\r\n      return getLn10(Ctor, wpr);\r\n    }\r\n\r\n    wpr += guard;\r\n    Ctor.precision = wpr;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n    e = getBase10Exponent(x);\r\n\r\n    if (Math.abs(e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = getBase10Exponent(x);\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = ln(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n\r\n      Ctor.precision = pr;\r\n      return sd == null ? (external = true, round(x, pr)) : x;\r\n    }\r\n\r\n    // x is reduced to a value near 1.\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);\r\n    x2 = round(x.times(x), wpr);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = round(numerator.times(x2), wpr);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr);\r\n\r\n        Ctor.precision = pr;\r\n        return sd == null ? (external = true, round(sum, pr)) : sum;\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48;) ++i;\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48;) --len;\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      e = e - i - 1;\r\n      x.e = mathfloor(e / LOG_BASE);\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);\r\n    } else {\r\n\r\n      // Zero.\r\n      x.s = 0;\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).\r\n   */\r\n   function round(x, sd, rm) {\r\n    var i, j, k, n, rd, doRound, w, xdi,\r\n      xd = x.d;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd which contains the rounding digit, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // n: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;\r\n    i = sd - n;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) return x;\r\n      w = k = xd[xdi];\r\n\r\n      // Get the number of digits of w.\r\n      for (n = 1; k >= 10; k /= 10) n++;\r\n\r\n      // Get the index of rd within w.\r\n      i %= LOG_BASE;\r\n\r\n      // Get the index of rd within w, adjusted for leading zeros.\r\n      // The number of leading zeros of w is given by LOG_BASE - n.\r\n      j = i - LOG_BASE + n;\r\n    }\r\n\r\n    if (rm !== void 0) {\r\n      k = mathpow(10, n - j - 1);\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / k % 10 | 0;\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;\r\n\r\n      // The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the\r\n      // digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give\r\n      // 714.\r\n\r\n      doRound = rm < 4\r\n        ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n    }\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      if (doRound) {\r\n        k = getBase10Exponent(x);\r\n        xd.length = 1;\r\n\r\n        // Convert sd to decimal places.\r\n        sd = sd - k - 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = mathfloor(-sd / LOG_BASE) || 0;\r\n      } else {\r\n        xd.length = 1;\r\n\r\n        // Zero.\r\n        xd[0] = x.e = x.s = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (doRound) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n          if ((xd[0] += k) == BASE) {\r\n            xd[0] = 1;\r\n            ++x.e;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n\r\n    if (external && (x.e > MAX_E || x.e < -MAX_E)) {\r\n      throw Error(exponentOutOfRange + getBase10Exponent(x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function subtract(x, y) {\r\n    var d, e, i, j, k, len, xd, xe, xLTy, yd,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision;\r\n\r\n    // Return y negated if x is zero.\r\n    // Return x if y is zero and x is non-zero.\r\n    if (!x.s || !y.s) {\r\n      if (y.s) y.s = -y.s;\r\n      else y = new Ctor(x);\r\n      return external ? round(y, pr) : y;\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n\r\n    // x and y are non-zero numbers with the same sign.\r\n\r\n    e = y.e;\r\n    xe = x.e;\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of zeros\r\n      // needing to be prepended, but this can be avoided while still ensuring correct rounding by\r\n      // limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to xd if shorter.\r\n    // Don't add zeros to yd if shorter as subtraction only needs to start at yd length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(0);\r\n\r\n    y.d = xd;\r\n    y.e = e;\r\n\r\n    //return external && xd.length >= pr / LOG_BASE ? round(y, pr) : y;\r\n    return external ? round(y, pr) : y;\r\n  }\r\n\r\n\r\n  function toString(x, isExp, sd) {\r\n    var k,\r\n      e = getBase10Exponent(x),\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (e < 0 ? 'e' : 'e+') + e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  clone\r\n   *  config/set\r\n   */\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * value {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(value) {\r\n      var x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(value);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (value instanceof Decimal) {\r\n        x.s = value.s;\r\n        x.e = value.e;\r\n        x.d = (value = value.d) ? value.slice() : value;\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'number') {\r\n\r\n        // Reject Infinity/NaN.\r\n        if (value * 0 !== 0) {\r\n          throw Error(invalidArgument + value);\r\n        }\r\n\r\n        if (value > 0) {\r\n          x.s = 1;\r\n        } else if (value < 0) {\r\n          value = -value;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 0;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (value === ~~value && value < 1e7) {\r\n          x.e = 0;\r\n          x.d = [value];\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, value.toString());\r\n      } else if (typeof value !== 'string') {\r\n        throw Error(invalidArgument + value);\r\n      }\r\n\r\n      // Minus sign?\r\n      if (value.charCodeAt(0) === 45) {\r\n        value = value.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      if (isDecimal.test(value)) parseDecimal(x, value);\r\n      else throw Error(invalidArgument + value);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n\r\n    Decimal.clone = clone;\r\n    Decimal.config = Decimal.set = config;\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'LN10'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n      throw Error(decimalError + 'Object expected');\r\n    }\r\n    var i, p, v,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -1 / 0, 0,\r\n        'toExpPos', 0, 1 / 0\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if ((v = obj[p = ps[i]]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if ((v = obj[p = 'LN10']) !== void 0) {\r\n        if (v == Math.LN10) this[p] = new this(v);\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(Decimal);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Internal constant.\r\n  ONE = new Decimal(1);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n      return Decimal;\r\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n\n\n//# sourceURL=webpack://bitmix/./node_modules/decimal.js-light/decimal.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var hash = exports;\n\nhash.utils = __webpack_require__(/*! ./hash/utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nhash.common = __webpack_require__(/*! ./hash/common */ \"./node_modules/hash.js/lib/hash/common.js\");\nhash.sha = __webpack_require__(/*! ./hash/sha */ \"./node_modules/hash.js/lib/hash/sha.js\");\nhash.ripemd = __webpack_require__(/*! ./hash/ripemd */ \"./node_modules/hash.js/lib/hash/ripemd.js\");\nhash.hmac = __webpack_require__(/*! ./hash/hmac */ \"./node_modules/hash.js/lib/hash/hmac.js\");\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/common.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/hmac.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/ripemd.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.sha1 = __webpack_require__(/*! ./sha/1 */ \"./node_modules/hash.js/lib/hash/sha/1.js\");\nexports.sha224 = __webpack_require__(/*! ./sha/224 */ \"./node_modules/hash.js/lib/hash/sha/224.js\");\nexports.sha256 = __webpack_require__(/*! ./sha/256 */ \"./node_modules/hash.js/lib/hash/sha/256.js\");\nexports.sha384 = __webpack_require__(/*! ./sha/384 */ \"./node_modules/hash.js/lib/hash/sha/384.js\");\nexports.sha512 = __webpack_require__(/*! ./sha/512 */ \"./node_modules/hash.js/lib/hash/sha/512.js\");\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/sha/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/1.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar SHA256 = __webpack_require__(/*! ./256 */ \"./node_modules/hash.js/lib/hash/sha/256.js\");\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/224.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\nvar shaCommon = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/sha/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/256.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar SHA512 = __webpack_require__(/*! ./512 */ \"./node_modules/hash.js/lib/hash/sha/512.js\");\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/384.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/512.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/sha/common.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n\n\n//# sourceURL=webpack://bitmix/./node_modules/hash.js/lib/hash/utils.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack://bitmix/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/js-sha3/src/sha3.js":
/*!******************************************!*\
  !*** ./node_modules/js-sha3/src/sha3.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return methods;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n\n\n//# sourceURL=webpack://bitmix/./node_modules/js-sha3/src/sha3.js?");

/***/ }),

/***/ "./node_modules/jsbi/dist/jsbi-umd.js":
/*!********************************************!*\
  !*** ./node_modules/jsbi/dist/jsbi-umd.js ***!
  \********************************************/
/***/ (function(module) {

eval("(function(i,_){ true?module.exports=_():0})(this,function(){'use strict';var i=Math.imul,_=Math.clz32,t=Math.abs,e=Math.max,g=Math.floor;class o extends Array{constructor(i,_){if(super(i),this.sign=_,i>o.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\")}static BigInt(i){var _=Number.isFinite;if(\"number\"==typeof i){if(0===i)return o.__zero();if(o.__isOneDigitInt(i))return 0>i?o.__oneDigit(-i,!0):o.__oneDigit(i,!1);if(!_(i)||g(i)!==i)throw new RangeError(\"The number \"+i+\" cannot be converted to BigInt because it is not an integer\");return o.__fromDouble(i)}if(\"string\"==typeof i){const _=o.__fromString(i);if(null===_)throw new SyntaxError(\"Cannot convert \"+i+\" to a BigInt\");return _}if(\"boolean\"==typeof i)return!0===i?o.__oneDigit(1,!1):o.__zero();if(\"object\"==typeof i){if(i.constructor===o)return i;const _=o.__toPrimitive(i);return o.BigInt(_)}throw new TypeError(\"Cannot convert \"+i+\" to a BigInt\")}toDebugString(){const i=[\"BigInt[\"];for(const _ of this)i.push((_?(_>>>0).toString(16):_)+\", \");return i.push(\"]\"),i.join(\"\")}toString(i=10){if(2>i||36<i)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(i&i-1)?o.__toStringBasePowerOfTwo(this,i):o.__toStringGeneric(this,i,!1)}static toNumber(i){const _=i.length;if(0===_)return 0;if(1===_){const _=i.__unsignedDigit(0);return i.sign?-_:_}const t=i.__digit(_-1),e=o.__clz30(t),n=30*_-e;if(1024<n)return i.sign?-Infinity:1/0;let g=n-1,s=t,l=_-1;const r=e+3;let a=32===r?0:s<<r;a>>>=12;const u=r-12;let d=12<=r?0:s<<20+r,h=20+r;for(0<u&&0<l&&(l--,s=i.__digit(l),a|=s>>>30-u,d=s<<u+2,h=u+2);0<h&&0<l;)l--,s=i.__digit(l),d|=30<=h?s<<h-30:s>>>30-h,h-=30;const m=o.__decideRounding(i,h,l,s);if((1===m||0===m&&1==(1&d))&&(d=d+1>>>0,0===d&&(a++,0!=a>>>20&&(a=0,g++,1023<g))))return i.sign?-Infinity:1/0;const b=i.sign?-2147483648:0;return g=g+1023<<20,o.__kBitConversionInts[1]=b|g|a,o.__kBitConversionInts[0]=d,o.__kBitConversionDouble[0]}static unaryMinus(i){if(0===i.length)return i;const _=i.__copy();return _.sign=!i.sign,_}static bitwiseNot(i){return i.sign?o.__absoluteSubOne(i).__trim():o.__absoluteAddOne(i,!0)}static exponentiate(i,_){if(_.sign)throw new RangeError(\"Exponent must be positive\");if(0===_.length)return o.__oneDigit(1,!1);if(0===i.length)return i;if(1===i.length&&1===i.__digit(0))return i.sign&&0==(1&_.__digit(0))?o.unaryMinus(i):i;if(1<_.length)throw new RangeError(\"BigInt too big\");let t=_.__unsignedDigit(0);if(1===t)return i;if(t>=o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===i.length&&2===i.__digit(0)){const _=1+(0|t/30),e=i.sign&&0!=(1&t),n=new o(_,e);n.__initializeDigits();const g=1<<t%30;return n.__setDigit(_-1,g),n}let e=null,n=i;for(0!=(1&t)&&(e=i),t>>=1;0!==t;t>>=1)n=o.multiply(n,n),0!=(1&t)&&(null===e?e=n:e=o.multiply(e,n));return e}static multiply(_,t){if(0===_.length)return _;if(0===t.length)return t;let i=_.length+t.length;30<=_.__clzmsd()+t.__clzmsd()&&i--;const e=new o(i,_.sign!==t.sign);e.__initializeDigits();for(let n=0;n<_.length;n++)o.__multiplyAccumulate(t,_.__digit(n),e,n);return e.__trim()}static divide(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return o.__zero();const t=i.sign!==_.sign,e=_.__unsignedDigit(0);let n;if(1===_.length&&32767>=e){if(1===e)return t===i.sign?i:o.unaryMinus(i);n=o.__absoluteDivSmall(i,e,null)}else n=o.__absoluteDivLarge(i,_,!0,!1);return n.sign=t,n.__trim()}static remainder(i,_){if(0===_.length)throw new RangeError(\"Division by zero\");if(0>o.__absoluteCompare(i,_))return i;const t=_.__unsignedDigit(0);if(1===_.length&&32767>=t){if(1===t)return o.__zero();const _=o.__absoluteModSmall(i,t);return 0===_?o.__zero():o.__oneDigit(_,i.sign)}const e=o.__absoluteDivLarge(i,_,!1,!0);return e.sign=i.sign,e.__trim()}static add(i,_){const t=i.sign;return t===_.sign?o.__absoluteAdd(i,_,t):0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t)}static subtract(i,_){const t=i.sign;return t===_.sign?0<=o.__absoluteCompare(i,_)?o.__absoluteSub(i,_,t):o.__absoluteSub(_,i,!t):o.__absoluteAdd(i,_,t)}static leftShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__rightShiftByAbsolute(i,_):o.__leftShiftByAbsolute(i,_)}static signedRightShift(i,_){return 0===_.length||0===i.length?i:_.sign?o.__leftShiftByAbsolute(i,_):o.__rightShiftByAbsolute(i,_)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(i,_){return 0>o.__compareToBigInt(i,_)}static lessThanOrEqual(i,_){return 0>=o.__compareToBigInt(i,_)}static greaterThan(i,_){return 0<o.__compareToBigInt(i,_)}static greaterThanOrEqual(i,_){return 0<=o.__compareToBigInt(i,_)}static equal(_,t){if(_.sign!==t.sign)return!1;if(_.length!==t.length)return!1;for(let e=0;e<_.length;e++)if(_.__digit(e)!==t.__digit(e))return!1;return!0}static notEqual(i,_){return!o.equal(i,_)}static bitwiseAnd(i,_){if(!i.sign&&!_.sign)return o.__absoluteAnd(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length)+1;let n=o.__absoluteSubOne(i,t);const g=o.__absoluteSubOne(_);return n=o.__absoluteOr(n,g,n),o.__absoluteAddOne(n,!0,n).__trim()}return i.sign&&([i,_]=[_,i]),o.__absoluteAndNot(i,o.__absoluteSubOne(_)).__trim()}static bitwiseXor(i,_){if(!i.sign&&!_.sign)return o.__absoluteXor(i,_).__trim();if(i.sign&&_.sign){const t=e(i.length,_.length),n=o.__absoluteSubOne(i,t),g=o.__absoluteSubOne(_);return o.__absoluteXor(n,g,n).__trim()}const t=e(i.length,_.length)+1;i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteXor(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static bitwiseOr(i,_){const t=e(i.length,_.length);if(!i.sign&&!_.sign)return o.__absoluteOr(i,_).__trim();if(i.sign&&_.sign){let e=o.__absoluteSubOne(i,t);const n=o.__absoluteSubOne(_);return e=o.__absoluteAnd(e,n,e),o.__absoluteAddOne(e,!0,e).__trim()}i.sign&&([i,_]=[_,i]);let n=o.__absoluteSubOne(_,t);return n=o.__absoluteAndNot(n,i,n),o.__absoluteAddOne(n,!0,n).__trim()}static asIntN(_,t){if(0===t.length)return t;if(_=g(_),0>_)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===_)return o.__zero();if(_>=o.__kMaxLengthBits)return t;const e=0|(_+29)/30;if(t.length<e)return t;const s=t.__unsignedDigit(e-1),l=1<<(_-1)%30;if(t.length===e&&s<l)return t;if(!((s&l)===l))return o.__truncateToNBits(_,t);if(!t.sign)return o.__truncateAndSubFromPowerOfTwo(_,t,!0);if(0==(s&l-1)){for(let n=e-2;0<=n;n--)if(0!==t.__digit(n))return o.__truncateAndSubFromPowerOfTwo(_,t,!1);return t.length===e&&s===l?t:o.__truncateToNBits(_,t)}return o.__truncateAndSubFromPowerOfTwo(_,t,!1)}static asUintN(i,_){if(0===_.length)return _;if(i=g(i),0>i)throw new RangeError(\"Invalid value: not (convertible to) a safe integer\");if(0===i)return o.__zero();if(_.sign){if(i>o.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return o.__truncateAndSubFromPowerOfTwo(i,_,!1)}if(i>=o.__kMaxLengthBits)return _;const t=0|(i+29)/30;if(_.length<t)return _;const e=i%30;if(_.length==t){if(0===e)return _;const i=_.__digit(t-1);if(0==i>>>e)return _}return o.__truncateToNBits(i,_)}static ADD(i,_){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i)return\"string\"!=typeof _&&(_=_.toString()),i+_;if(\"string\"==typeof _)return i.toString()+_;if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)&&o.__isBigInt(_))return o.add(i,_);if(\"number\"==typeof i&&\"number\"==typeof _)return i+_;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(i,_){return o.__compare(i,_,0)}static LE(i,_){return o.__compare(i,_,1)}static GT(i,_){return o.__compare(i,_,2)}static GE(i,_){return o.__compare(i,_,3)}static EQ(i,_){for(;;){if(o.__isBigInt(i))return o.__isBigInt(_)?o.equal(i,_):o.EQ(_,i);if(\"number\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"string\"==typeof i){if(o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.equal(i,_);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"boolean\"==typeof i){if(o.__isBigInt(_))return o.__equalToNumber(_,+i);if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"symbol\"==typeof i){if(o.__isBigInt(_))return!1;if(\"object\"!=typeof _)return i==_;_=o.__toPrimitive(_)}else if(\"object\"==typeof i){if(\"object\"==typeof _&&_.constructor!==o)return i==_;i=o.__toPrimitive(i)}else return i==_}}static NE(i,_){return!o.EQ(i,_)}static __zero(){return new o(0,!1)}static __oneDigit(i,_){const t=new o(1,_);return t.__setDigit(0,i),t}__copy(){const _=new o(this.length,this.sign);for(let t=0;t<this.length;t++)_[t]=this[t];return _}__trim(){let i=this.length,_=this[i-1];for(;0===_;)i--,_=this[i-1],this.pop();return 0===i&&(this.sign=!1),this}__initializeDigits(){for(let _=0;_<this.length;_++)this[_]=0}static __decideRounding(i,_,t,e){if(0<_)return-1;let n;if(0>_)n=-_-1;else{if(0===t)return-1;t--,e=i.__digit(t),n=29}let g=1<<n;if(0==(e&g))return-1;if(g-=1,0!=(e&g))return 1;for(;0<t;)if(t--,0!==i.__digit(t))return 1;return 0}static __fromDouble(i){o.__kBitConversionDouble[0]=i;const _=2047&o.__kBitConversionInts[1]>>>20,t=_-1023,e=(0|t/30)+1,n=new o(e,0>i);let g=1048575&o.__kBitConversionInts[1]|1048576,s=o.__kBitConversionInts[0];const l=20,r=t%30;let a,u=0;if(20>r){const i=l-r;u=i+32,a=g>>>i,g=g<<32-i|s>>>i,s<<=32-i}else if(20===r)u=32,a=g,g=s,s=0;else{const i=r-l;u=32-i,a=g<<i|s>>>32-i,g=s<<i,s=0}n.__setDigit(e-1,a);for(let _=e-2;0<=_;_--)0<u?(u-=30,a=g>>>2,g=g<<30|s>>>2,s<<=30):a=0,n.__setDigit(_,a);return n.__trim()}static __isWhitespace(i){return!!(13>=i&&9<=i)||(159>=i?32==i:131071>=i?160==i||5760==i:196607>=i?(i&=131071,10>=i||40==i||41==i||47==i||95==i||4096==i):65279==i)}static __fromString(i,_=0){let t=0;const e=i.length;let n=0;if(n===e)return o.__zero();let g=i.charCodeAt(n);for(;o.__isWhitespace(g);){if(++n===e)return o.__zero();g=i.charCodeAt(n)}if(43===g){if(++n===e)return null;g=i.charCodeAt(n),t=1}else if(45===g){if(++n===e)return null;g=i.charCodeAt(n),t=-1}if(0===_){if(_=10,48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(_=16,++n===e)return null;g=i.charCodeAt(n)}else if(79===g||111===g){if(_=8,++n===e)return null;g=i.charCodeAt(n)}else if(66===g||98===g){if(_=2,++n===e)return null;g=i.charCodeAt(n)}}}else if(16===_&&48===g){if(++n===e)return o.__zero();if(g=i.charCodeAt(n),88===g||120===g){if(++n===e)return null;g=i.charCodeAt(n)}}if(0!=t&&10!==_)return null;for(;48===g;){if(++n===e)return o.__zero();g=i.charCodeAt(n)}const s=e-n;let l=o.__kMaxBitsPerChar[_],r=o.__kBitsPerCharTableMultiplier-1;if(s>1073741824/l)return null;const a=l*s+r>>>o.__kBitsPerCharTableShift,u=new o(0|(a+29)/30,!1),h=10>_?_:10,b=10<_?_-10:0;if(0==(_&_-1)){l>>=o.__kBitsPerCharTableShift;const _=[],t=[];let s=!1;do{let o=0,r=0;for(;;){let _;if(g-48>>>0<h)_=g-48;else if((32|g)-97>>>0<b)_=(32|g)-87;else{s=!0;break}if(r+=l,o=o<<l|_,++n===e){s=!0;break}if(g=i.charCodeAt(n),30<r+l)break}_.push(o),t.push(r)}while(!s);o.__fillFromParts(u,_,t)}else{u.__initializeDigits();let t=!1,s=0;do{let a=0,D=1;for(;;){let o;if(g-48>>>0<h)o=g-48;else if((32|g)-97>>>0<b)o=(32|g)-87;else{t=!0;break}const l=D*_;if(1073741823<l)break;if(D=l,a=a*_+o,s++,++n===e){t=!0;break}g=i.charCodeAt(n)}r=30*o.__kBitsPerCharTableMultiplier-1;const c=0|(l*s+r>>>o.__kBitsPerCharTableShift)/30;u.__inplaceMultiplyAdd(D,a,c)}while(!t)}if(n!==e){if(!o.__isWhitespace(g))return null;for(n++;n<e;n++)if(g=i.charCodeAt(n),!o.__isWhitespace(g))return null}return u.sign=-1==t,u.__trim()}static __fillFromParts(_,t,e){let n=0,g=0,o=0;for(let s=t.length-1;0<=s;s--){const i=t[s],l=e[s];g|=i<<o,o+=l,30===o?(_.__setDigit(n++,g),o=0,g=0):30<o&&(_.__setDigit(n++,1073741823&g),o-=30,g=i>>>l-o)}if(0!==g){if(n>=_.length)throw new Error(\"implementation bug\");_.__setDigit(n++,g)}for(;n<_.length;n++)_.__setDigit(n,0)}static __toStringBasePowerOfTwo(_,i){const t=_.length;let e=i-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const n=e,g=i-1,s=_.__digit(t-1),l=o.__clz30(s);let r=0|(30*t-l+n-1)/n;if(_.sign&&r++,268435456<r)throw new Error(\"string too long\");const a=Array(r);let u=r-1,d=0,h=0;for(let e=0;e<t-1;e++){const i=_.__digit(e),t=(d|i<<h)&g;a[u--]=o.__kConversionChars[t];const s=n-h;for(d=i>>>s,h=30-s;h>=n;)a[u--]=o.__kConversionChars[d&g],d>>>=n,h-=n}const m=(d|s<<h)&g;for(a[u--]=o.__kConversionChars[m],d=s>>>n-h;0!==d;)a[u--]=o.__kConversionChars[d&g],d>>>=n;if(_.sign&&(a[u--]=\"-\"),-1!=u)throw new Error(\"implementation bug\");return a.join(\"\")}static __toStringGeneric(_,i,t){const e=_.length;if(0===e)return\"\";if(1===e){let e=_.__unsignedDigit(0).toString(i);return!1===t&&_.sign&&(e=\"-\"+e),e}const n=30*e-o.__clz30(_.__digit(e-1)),g=o.__kMaxBitsPerChar[i],s=g-1;let l=n*o.__kBitsPerCharTableMultiplier;l+=s-1,l=0|l/s;const r=l+1>>1,a=o.exponentiate(o.__oneDigit(i,!1),o.__oneDigit(r,!1));let u,d;const h=a.__unsignedDigit(0);if(1===a.length&&32767>=h){u=new o(_.length,!1),u.__initializeDigits();let t=0;for(let e=2*_.length-1;0<=e;e--){const i=t<<15|_.__halfDigit(e);u.__setHalfDigit(e,0|i/h),t=0|i%h}d=t.toString(i)}else{const t=o.__absoluteDivLarge(_,a,!0,!0);u=t.quotient;const e=t.remainder.__trim();d=o.__toStringGeneric(e,i,!0)}u.__trim();let m=o.__toStringGeneric(u,i,!0);for(;d.length<r;)d=\"0\"+d;return!1===t&&_.sign&&(m=\"-\"+m),m+d}static __unequalSign(i){return i?-1:1}static __absoluteGreater(i){return i?-1:1}static __absoluteLess(i){return i?1:-1}static __compareToBigInt(i,_){const t=i.sign;if(t!==_.sign)return o.__unequalSign(t);const e=o.__absoluteCompare(i,_);return 0<e?o.__absoluteGreater(t):0>e?o.__absoluteLess(t):0}static __compareToNumber(i,_){if(o.__isOneDigitInt(_)){const e=i.sign,n=0>_;if(e!==n)return o.__unequalSign(e);if(0===i.length){if(n)throw new Error(\"implementation bug\");return 0===_?0:-1}if(1<i.length)return o.__absoluteGreater(e);const g=t(_),s=i.__unsignedDigit(0);return s>g?o.__absoluteGreater(e):s<g?o.__absoluteLess(e):0}return o.__compareToDouble(i,_)}static __compareToDouble(i,_){if(_!==_)return _;if(_===1/0)return-1;if(_===-Infinity)return 1;const t=i.sign;if(t!==0>_)return o.__unequalSign(t);if(0===_)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===i.length)return-1;o.__kBitConversionDouble[0]=_;const e=2047&o.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const n=e-1023;if(0>n)return o.__absoluteGreater(t);const g=i.length;let s=i.__digit(g-1);const l=o.__clz30(s),r=30*g-l,a=n+1;if(r<a)return o.__absoluteLess(t);if(r>a)return o.__absoluteGreater(t);let u=1048576|1048575&o.__kBitConversionInts[1],d=o.__kBitConversionInts[0];const h=20,m=29-l;if(m!==(0|(r-1)%30))throw new Error(\"implementation bug\");let b,D=0;if(20>m){const i=h-m;D=i+32,b=u>>>i,u=u<<32-i|d>>>i,d<<=32-i}else if(20===m)D=32,b=u,u=d,d=0;else{const i=m-h;D=32-i,b=u<<i|d>>>32-i,u=d<<i,d=0}if(s>>>=0,b>>>=0,s>b)return o.__absoluteGreater(t);if(s<b)return o.__absoluteLess(t);for(let e=g-2;0<=e;e--){0<D?(D-=30,b=u>>>2,u=u<<30|d>>>2,d<<=30):b=0;const _=i.__unsignedDigit(e);if(_>b)return o.__absoluteGreater(t);if(_<b)return o.__absoluteLess(t)}if(0!==u||0!==d){if(0===D)throw new Error(\"implementation bug\");return o.__absoluteLess(t)}return 0}static __equalToNumber(i,_){return o.__isOneDigitInt(_)?0===_?0===i.length:1===i.length&&i.sign===0>_&&i.__unsignedDigit(0)===t(_):0===o.__compareToDouble(i,_)}static __comparisonResultToBool(i,_){return 0===_?0>i:1===_?0>=i:2===_?0<i:3===_?0<=i:void 0}static __compare(i,_,t){if(i=o.__toPrimitive(i),_=o.__toPrimitive(_),\"string\"==typeof i&&\"string\"==typeof _)switch(t){case 0:return i<_;case 1:return i<=_;case 2:return i>_;case 3:return i>=_;}if(o.__isBigInt(i)&&\"string\"==typeof _)return _=o.__fromString(_),null!==_&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"string\"==typeof i&&o.__isBigInt(_))return i=o.__fromString(i),null!==i&&o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(i=o.__toNumeric(i),_=o.__toNumeric(_),o.__isBigInt(i)){if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToBigInt(i,_),t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return o.__comparisonResultToBool(o.__compareToNumber(i,_),t)}if(\"number\"!=typeof i)throw new Error(\"implementation bug\");if(o.__isBigInt(_))return o.__comparisonResultToBool(o.__compareToNumber(_,i),2^t);if(\"number\"!=typeof _)throw new Error(\"implementation bug\");return 0===t?i<_:1===t?i<=_:2===t?i>_:3===t?i>=_:void 0}__clzmsd(){return o.__clz30(this.__digit(this.length-1))}static __absoluteAdd(_,t,e){if(_.length<t.length)return o.__absoluteAdd(t,_,e);if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);let n=_.length;(0===_.__clzmsd()||t.length===_.length&&0===t.__clzmsd())&&n++;const g=new o(n,e);let s=0,l=0;for(;l<t.length;l++){const i=_.__digit(l)+t.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}for(;l<_.length;l++){const i=_.__digit(l)+s;s=i>>>30,g.__setDigit(l,1073741823&i)}return l<g.length&&g.__setDigit(l,s),g.__trim()}static __absoluteSub(_,t,e){if(0===_.length)return _;if(0===t.length)return _.sign===e?_:o.unaryMinus(_);const n=new o(_.length,e);let g=0,s=0;for(;s<t.length;s++){const i=_.__digit(s)-t.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}for(;s<_.length;s++){const i=_.__digit(s)-g;g=1&i>>>30,n.__setDigit(s,1073741823&i)}return n.__trim()}static __absoluteAddOne(_,i,t=null){const e=_.length;null===t?t=new o(e,i):t.sign=i;let n=1;for(let g=0;g<e;g++){const i=_.__digit(g)+n;n=i>>>30,t.__setDigit(g,1073741823&i)}return 0!=n&&t.__setDigitGrow(e,1),t}static __absoluteSubOne(_,t){const e=_.length;t=t||e;const n=new o(t,!1);let g=1;for(let o=0;o<e;o++){const i=_.__digit(o)-g;g=1&i>>>30,n.__setDigit(o,1073741823&i)}if(0!=g)throw new Error(\"implementation bug\");for(let g=e;g<t;g++)n.__setDigit(g,0);return n}static __absoluteAnd(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=s;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&t.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteAndNot(_,t,e=null){const n=_.length,g=t.length;let s=g;n<g&&(s=n);let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)&~t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteOr(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)|t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteXor(_,t,e=null){let n=_.length,g=t.length,s=g;if(n<g){s=n;const i=_,e=n;_=t,n=g,t=i,g=e}let l=n;null===e?e=new o(l,!1):l=e.length;let r=0;for(;r<s;r++)e.__setDigit(r,_.__digit(r)^t.__digit(r));for(;r<n;r++)e.__setDigit(r,_.__digit(r));for(;r<l;r++)e.__setDigit(r,0);return e}static __absoluteCompare(_,t){const e=_.length-t.length;if(0!=e)return e;let n=_.length-1;for(;0<=n&&_.__digit(n)===t.__digit(n);)n--;return 0>n?0:_.__unsignedDigit(n)>t.__unsignedDigit(n)?1:-1}static __multiplyAccumulate(_,t,e,n){if(0===t)return;const g=32767&t,s=t>>>15;let l=0,r=0;for(let a,u=0;u<_.length;u++,n++){a=e.__digit(n);const i=_.__digit(u),t=32767&i,d=i>>>15,h=o.__imul(t,g),m=o.__imul(t,s),b=o.__imul(d,g),D=o.__imul(d,s);a+=r+h+l,l=a>>>30,a&=1073741823,a+=((32767&m)<<15)+((32767&b)<<15),l+=a>>>30,r=D+(m>>>15)+(b>>>15),e.__setDigit(n,1073741823&a)}for(;0!=l||0!==r;n++){let i=e.__digit(n);i+=l+r,r=0,l=i>>>30,e.__setDigit(n,1073741823&i)}}static __internalMultiplyAdd(_,t,e,g,s){let l=e,a=0;for(let n=0;n<g;n++){const i=_.__digit(n),e=o.__imul(32767&i,t),g=o.__imul(i>>>15,t),u=e+((32767&g)<<15)+a+l;l=u>>>30,a=g>>>15,s.__setDigit(n,1073741823&u)}if(s.length>g)for(s.__setDigit(g++,l+a);g<s.length;)s.__setDigit(g++,0);else if(0!==l+a)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(i,_,t){t>this.length&&(t=this.length);const e=32767&i,n=i>>>15;let g=0,s=_;for(let l=0;l<t;l++){const i=this.__digit(l),_=32767&i,t=i>>>15,r=o.__imul(_,e),a=o.__imul(_,n),u=o.__imul(t,e),d=o.__imul(t,n);let h=s+r+g;g=h>>>30,h&=1073741823,h+=((32767&a)<<15)+((32767&u)<<15),g+=h>>>30,s=d+(a>>>15)+(u>>>15),this.__setDigit(l,1073741823&h)}if(0!=g||0!==s)throw new Error(\"implementation bug\")}static __absoluteDivSmall(_,t,e=null){null===e&&(e=new o(_.length,!1));let n=0;for(let g,o=2*_.length-1;0<=o;o-=2){g=(n<<15|_.__halfDigit(o))>>>0;const i=0|g/t;n=0|g%t,g=(n<<15|_.__halfDigit(o-1))>>>0;const s=0|g/t;n=0|g%t,e.__setDigit(o>>>1,i<<15|s)}return e}static __absoluteModSmall(_,t){let e=0;for(let n=2*_.length-1;0<=n;n--){const i=(e<<15|_.__halfDigit(n))>>>0;e=0|i%t}return e}static __absoluteDivLarge(i,_,t,e){const g=_.__halfDigitLength(),n=_.length,s=i.__halfDigitLength()-g;let l=null;t&&(l=new o(s+2>>>1,!1),l.__initializeDigits());const r=new o(g+2>>>1,!1);r.__initializeDigits();const a=o.__clz15(_.__halfDigit(g-1));0<a&&(_=o.__specialLeftShift(_,a,0));const d=o.__specialLeftShift(i,a,1),u=_.__halfDigit(g-1);let h=0;for(let a,m=s;0<=m;m--){a=32767;const i=d.__halfDigit(m+g);if(i!==u){const t=(i<<15|d.__halfDigit(m+g-1))>>>0;a=0|t/u;let e=0|t%u;const n=_.__halfDigit(g-2),s=d.__halfDigit(m+g-2);for(;o.__imul(a,n)>>>0>(e<<16|s)>>>0&&(a--,e+=u,!(32767<e)););}o.__internalMultiplyAdd(_,a,0,n,r);let e=d.__inplaceSub(r,m,g+1);0!==e&&(e=d.__inplaceAdd(_,m,g),d.__setHalfDigit(m+g,32767&d.__halfDigit(m+g)+e),a--),t&&(1&m?h=a<<15:l.__setDigit(m>>>1,h|a))}if(e)return d.__inplaceRightShift(a),t?{quotient:l,remainder:d}:d;if(t)return l;throw new Error(\"unreachable\")}static __clz15(i){return o.__clz30(i)-15}__inplaceAdd(_,t,e){let n=0;for(let g=0;g<e;g++){const i=this.__halfDigit(t+g)+_.__halfDigit(g)+n;n=i>>>15,this.__setHalfDigit(t+g,32767&i)}return n}__inplaceSub(_,t,e){let n=0;if(1&t){t>>=1;let g=this.__digit(t),o=32767&g,s=0;for(;s<e-1>>>1;s++){const i=_.__digit(s),e=(g>>>15)-(32767&i)-n;n=1&e>>>15,this.__setDigit(t+s,(32767&e)<<15|32767&o),g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15}const i=_.__digit(s),l=(g>>>15)-(32767&i)-n;n=1&l>>>15,this.__setDigit(t+s,(32767&l)<<15|32767&o);if(t+s+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&e)&&(g=this.__digit(t+s+1),o=(32767&g)-(i>>>15)-n,n=1&o>>>15,this.__setDigit(t+_.length,1073709056&g|32767&o))}else{t>>=1;let g=0;for(;g<_.length-1;g++){const i=this.__digit(t+g),e=_.__digit(g),o=(32767&i)-(32767&e)-n;n=1&o>>>15;const s=(i>>>15)-(e>>>15)-n;n=1&s>>>15,this.__setDigit(t+g,(32767&s)<<15|32767&o)}const i=this.__digit(t+g),o=_.__digit(g),s=(32767&i)-(32767&o)-n;n=1&s>>>15;let l=0;0==(1&e)&&(l=(i>>>15)-(o>>>15)-n,n=1&l>>>15),this.__setDigit(t+g,(32767&l)<<15|32767&s)}return n}__inplaceRightShift(_){if(0===_)return;let t=this.__digit(0)>>>_;const e=this.length-1;for(let n=0;n<e;n++){const i=this.__digit(n+1);this.__setDigit(n,1073741823&i<<30-_|t),t=i>>>_}this.__setDigit(e,t)}static __specialLeftShift(_,t,e){const g=_.length,n=new o(g+e,!1);if(0===t){for(let t=0;t<g;t++)n.__setDigit(t,_.__digit(t));return 0<e&&n.__setDigit(g,0),n}let s=0;for(let o=0;o<g;o++){const i=_.__digit(o);n.__setDigit(o,1073741823&i<<t|s),s=i>>>30-t}return 0<e&&n.__setDigit(g,s),n}static __leftShiftByAbsolute(_,i){const t=o.__toShiftAmount(i);if(0>t)throw new RangeError(\"BigInt too big\");const e=0|t/30,n=t%30,g=_.length,s=0!==n&&0!=_.__digit(g-1)>>>30-n,l=g+e+(s?1:0),r=new o(l,_.sign);if(0===n){let t=0;for(;t<e;t++)r.__setDigit(t,0);for(;t<l;t++)r.__setDigit(t,_.__digit(t-e))}else{let t=0;for(let _=0;_<e;_++)r.__setDigit(_,0);for(let o=0;o<g;o++){const i=_.__digit(o);r.__setDigit(o+e,1073741823&i<<n|t),t=i>>>30-n}if(s)r.__setDigit(g+e,t);else if(0!==t)throw new Error(\"implementation bug\")}return r.__trim()}static __rightShiftByAbsolute(_,i){const t=_.length,e=_.sign,n=o.__toShiftAmount(i);if(0>n)return o.__rightShiftByMaximum(e);const g=0|n/30,s=n%30;let l=t-g;if(0>=l)return o.__rightShiftByMaximum(e);let r=!1;if(e){if(0!=(_.__digit(g)&(1<<s)-1))r=!0;else for(let t=0;t<g;t++)if(0!==_.__digit(t)){r=!0;break}}if(r&&0===s){const i=_.__digit(t-1);0==~i&&l++}let a=new o(l,e);if(0===s){a.__setDigit(l-1,0);for(let e=g;e<t;e++)a.__setDigit(e-g,_.__digit(e))}else{let e=_.__digit(g)>>>s;const n=t-g-1;for(let t=0;t<n;t++){const i=_.__digit(t+g+1);a.__setDigit(t,1073741823&i<<30-s|e),e=i>>>s}a.__setDigit(n,e)}return r&&(a=o.__absoluteAddOne(a,!0,a)),a.__trim()}static __rightShiftByMaximum(i){return i?o.__oneDigit(1,!0):o.__zero()}static __toShiftAmount(i){if(1<i.length)return-1;const _=i.__unsignedDigit(0);return _>o.__kMaxLengthBits?-1:_}static __toPrimitive(i,_=\"default\"){if(\"object\"!=typeof i)return i;if(i.constructor===o)return i;if(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol.toPrimitive){const t=i[Symbol.toPrimitive];if(t){const i=t(_);if(\"object\"!=typeof i)return i;throw new TypeError(\"Cannot convert object to primitive value\")}}const t=i.valueOf;if(t){const _=t.call(i);if(\"object\"!=typeof _)return _}const e=i.toString;if(e){const _=e.call(i);if(\"object\"!=typeof _)return _}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(i){return o.__isBigInt(i)?i:+i}static __isBigInt(i){return\"object\"==typeof i&&null!==i&&i.constructor===o}static __truncateToNBits(i,_){const t=0|(i+29)/30,e=new o(t,_.sign),n=t-1;for(let t=0;t<n;t++)e.__setDigit(t,_.__digit(t));let g=_.__digit(n);if(0!=i%30){const _=32-i%30;g=g<<_>>>_}return e.__setDigit(n,g),e.__trim()}static __truncateAndSubFromPowerOfTwo(_,t,e){var n=Math.min;const g=0|(_+29)/30,s=new o(g,e);let l=0;const r=g-1;let a=0;for(const i=n(r,t.length);l<i;l++){const i=0-t.__digit(l)-a;a=1&i>>>30,s.__setDigit(l,1073741823&i)}for(;l<r;l++)s.__setDigit(l,0|1073741823&-a);let u=r<t.length?t.__digit(r):0;const d=_%30;let h;if(0==d)h=0-u-a,h&=1073741823;else{const i=32-d;u=u<<i>>>i;const _=1<<32-i;h=_-u-a,h&=_-1}return s.__setDigit(r,h),s.__trim()}__digit(_){return this[_]}__unsignedDigit(_){return this[_]>>>0}__setDigit(_,i){this[_]=0|i}__setDigitGrow(_,i){this[_]=0|i}__halfDigitLength(){const i=this.length;return 32767>=this.__unsignedDigit(i-1)?2*i-1:2*i}__halfDigit(_){return 32767&this[_>>>1]>>>15*(1&_)}__setHalfDigit(_,i){const t=_>>>1,e=this.__digit(t),n=1&_?32767&e|i<<15:1073709056&e|32767&i;this.__setDigit(t,n)}static __digitPow(i,_){let t=1;for(;0<_;)1&_&&(t*=i),_>>>=1,i*=i;return t}static __isOneDigitInt(i){return(1073741823&i)===i}}return o.__kMaxLength=33554432,o.__kMaxLengthBits=o.__kMaxLength<<5,o.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],o.__kBitsPerCharTableShift=5,o.__kBitsPerCharTableMultiplier=1<<o.__kBitsPerCharTableShift,o.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],o.__kBitConversionBuffer=new ArrayBuffer(8),o.__kBitConversionDouble=new Float64Array(o.__kBitConversionBuffer),o.__kBitConversionInts=new Int32Array(o.__kBitConversionBuffer),o.__clz30=_?function(i){return _(i)-2}:function(i){var _=Math.LN2,t=Math.log;return 0===i?30:0|29-(0|t(i>>>0)/_)},o.__imul=i||function(i,_){return 0|i*_},o});\n//# sourceMappingURL=jsbi-umd.js.map\n\n\n//# sourceURL=webpack://bitmix/./node_modules/jsbi/dist/jsbi-umd.js?");

/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n\n//# sourceURL=webpack://bitmix/./node_modules/minimalistic-assert/index.js?");

/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar isProduction = \"development\" === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (invariant);\n\n\n//# sourceURL=webpack://bitmix/./node_modules/tiny-invariant/dist/tiny-invariant.esm.js?");

/***/ }),

/***/ "./node_modules/toformat/toFormat.js":
/*!*******************************************!*\
  !*** ./node_modules/toformat/toFormat.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/*\r\n *  toFormat v2.0.0\r\n *  Adds a toFormat instance method to big.js or decimal.js\r\n *  Copyright (c) 2017 Michael Mclaughlin\r\n *  MIT Licence\r\n */\r\n\r\n /*\r\n * Adds a `toFormat` method to `Ctor.prototype` and a `format` object to `Ctor`, where `Ctor` is\r\n * a big number constructor such as `Decimal` (decimal.js) or `Big` (big.js).\r\n */\r\nfunction toFormat(Ctor) {\r\n  'use strict';\r\n\r\n  /*\r\n   *  Returns a string representing the value of this big number in fixed-point notation to `dp`\r\n   *  decimal places using rounding mode `rm`, and formatted according to the properties of the\r\n   * `fmt`, `this.format` and `this.constructor.format` objects, in that order of precedence.\r\n   *\r\n   *  Example:\r\n   *\r\n   *  x = new Decimal('123456789.987654321')\r\n   *\r\n   *  // Add a format object to the constructor...\r\n   *  Decimal.format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ',',\r\n   *    groupSize: 3,\r\n   *    secondaryGroupSize: 0,\r\n   *    fractionGroupSeparator: '',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 0\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123,456,789.987654321\r\n   *  x.toFormat(2, 1);            // 123,456,789.98\r\n   *\r\n   *  // And/or add a format object to the big number itself...\r\n   *  x.format = {\r\n   *    decimalSeparator: ',',\r\n   *    groupSeparator: '',\r\n   *  }\r\n   *\r\n   *  x.toFormat();                // 123456789,987654321\r\n   *\r\n   *  format = {\r\n   *    decimalSeparator: '.',\r\n   *    groupSeparator: ' ',\r\n   *    groupSize: 3,\r\n   *    fractionGroupSeparator: ' ',     // '\\xA0' non-breaking space\r\n   *    fractionGroupSize : 5\r\n   *  }\r\n\r\n   *  // And/or pass a format object to the method call.\r\n   *  x.toFormat(format);          // 123 456 789.98765 4321\r\n   *  x.toFormat(4, format);       // 123 456 789.9877\r\n   *  x.toFormat(2, 1, format);    // 123 456 789.98\r\n   *\r\n   *  [dp] {number} Decimal places. Integer.\r\n   *  [rm] {number} Rounding mode. Integer, 0 to 8. (Ignored if using big.js.)\r\n   *  [fmt] {Object} A format object.\r\n   *\r\n   */\r\n  Ctor.prototype.toFormat = function toFormat(dp, rm, fmt) {\r\n\r\n    if (!this.e && this.e !== 0) return this.toString();   // Infinity/NaN\r\n\r\n    var arr, g1, g2, i,\r\n      u,                             // undefined\r\n      nd,                            // number of integer digits\r\n      intd,                          // integer digits\r\n      intp,                          // integer part\r\n      fracp,                         // fraction part\r\n      dsep,                          // decimalSeparator\r\n      gsep,                          // groupSeparator\r\n      gsize,                         // groupSize\r\n      sgsize,                        // secondaryGroupSize\r\n      fgsep,                         // fractionGroupSeparator\r\n      fgsize,                        // fractionGroupSize\r\n      tfmt = this.format || {},\r\n      cfmt = this.constructor.format || {};\r\n\r\n    if (dp != u) {\r\n      if (typeof dp == 'object') {\r\n        fmt = dp;\r\n        dp = u;\r\n      } else if (rm != u) {\r\n        if (typeof rm == 'object') {\r\n          fmt = rm;\r\n          rm = u;\r\n        } else if (typeof fmt != 'object') {\r\n          fmt = {};\r\n        }\r\n      } else {\r\n        fmt = {};\r\n      }\r\n    } else {\r\n      fmt = {};\r\n    }\r\n\r\n    arr = this.toFixed(dp, rm).split('.');\r\n    intp = arr[0];\r\n    fracp = arr[1];\r\n    intd = this.s < 0 ? intp.slice(1) : intp;\r\n    nd = intd.length;\r\n\r\n    dsep = fmt.decimalSeparator;\r\n    if (dsep == u) {\r\n      dsep = tfmt.decimalSeparator;\r\n      if (dsep == u) {\r\n        dsep = cfmt.decimalSeparator;\r\n        if (dsep == u) dsep = '.';\r\n      }\r\n    }\r\n\r\n    gsep = fmt.groupSeparator;\r\n    if (gsep == u) {\r\n      gsep = tfmt.groupSeparator;\r\n      if (gsep == u) gsep = cfmt.groupSeparator;\r\n    }\r\n\r\n    if (gsep) {\r\n      gsize = fmt.groupSize;\r\n      if (gsize == u) {\r\n        gsize = tfmt.groupSize;\r\n        if (gsize == u) {\r\n          gsize = cfmt.groupSize;\r\n          if (gsize == u) gsize = 0;\r\n        }\r\n      }\r\n\r\n      sgsize = fmt.secondaryGroupSize;\r\n      if (sgsize == u) {\r\n        sgsize = tfmt.secondaryGroupSize;\r\n        if (sgsize == u) {\r\n          sgsize = cfmt.secondaryGroupSize;\r\n          if (sgsize == u) sgsize = 0;\r\n        }\r\n      }\r\n\r\n      if (sgsize) {\r\n        g1 = +sgsize;\r\n        g2 = +gsize;\r\n        nd -= g2;\r\n      } else {\r\n        g1 = +gsize;\r\n        g2 = +sgsize;\r\n      }\r\n\r\n      if (g1 > 0 && nd > 0) {\r\n        i = nd % g1 || g1;\r\n        intp = intd.substr(0, i);\r\n        for (; i < nd; i += g1) intp += gsep + intd.substr(i, g1);\r\n        if (g2 > 0) intp += gsep + intd.slice(i);\r\n        if (this.s < 0) intp = '-' + intp;\r\n      }\r\n    }\r\n\r\n    if (fracp) {\r\n      fgsep = fmt.fractionGroupSeparator;\r\n      if (fgsep == u) {\r\n        fgsep = tfmt.fractionGroupSeparator;\r\n        if (fgsep == u) fgsep = cfmt.fractionGroupSeparator;\r\n      }\r\n\r\n      if (fgsep) {\r\n        fgsize = fmt.fractionGroupSize;\r\n        if (fgsize == u) {\r\n          fgsize = tfmt.fractionGroupSize;\r\n          if (fgsize == u) {\r\n            fgsize = cfmt.fractionGroupSize;\r\n            if (fgsize == u) fgsize = 0;\r\n          }\r\n        }\r\n\r\n        fgsize = +fgsize;\r\n\r\n        if (fgsize) {\r\n          fracp = fracp.replace(new RegExp('\\\\d{' + fgsize + '}\\\\B', 'g'), '$&' + fgsep);\r\n        }\r\n      }\r\n\r\n      return intp + dsep + fracp;\r\n    } else {\r\n\r\n      return intp;\r\n    }\r\n  };\r\n\r\n  Ctor.format = {\r\n    decimalSeparator: '.',\r\n    groupSeparator: ',',\r\n    groupSize: 3,\r\n    secondaryGroupSize: 0,\r\n    fractionGroupSeparator: '',\r\n    fractionGroupSize: 0\r\n  };\r\n\r\n  return Ctor;\r\n}\r\n\r\nif ( true && module.exports) module.exports = toFormat;\r\n\n\n//# sourceURL=webpack://bitmix/./node_modules/toformat/toFormat.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/v3-sdk */ \"./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js\");\n/* harmony import */ var _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uniswap/sdk-core */ \"./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\");\n\n\n\n\n\n\n\nconst { ChainId, Fetcher, DAI, USDC, WETH, Route, Trade, TokenAmount, SwapRouter, Pool } = __webpack_require__ (/*! @uniswap/v3-sdk */ \"./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js\");\nconst routerAddress = \"0xE592427A0AEce92De3Edee1F18E0157C05861564\"\nconst poolAddress = \"0x491bf019dbdf10404e27e0894b920ef893b63f68\"\nvar swapAbi  =__webpack_require__(  /*! @uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json */ \"./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json\");\nvar tokens = {\n  \"BML\": \"0x0575cBFcA796d335A911D7D9f43f8b4255FFd023\",\n  \"USDC\": \"0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b\",\n  \"USDT\":\"0x3b00ef435fa4fcff5c209a37d1f3dcff37c705ad\",\n  \"UNI\": \"0x03e6c12ef405ac3f642b9184eded8e1322de1a9e\",\n  \"DAI\": \"0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735\",\n}\nconst coins = __webpack_require__(/*! ./coins.json */ \"./src/coins.json\");\nconst erc20s = [\"BML\", \"USDC\", \"DAI\"]\nconst chains = [\"BTC\", \"ETH\"]\nconst allCoins = _.union(chains,erc20s)\nconst ethCoins = [\"ETH\"]  + erc20s\n\ngoogle.charts.load('current', {'packages':['corechart']});\ngoogle.charts.setOnLoadCallback(drawChart);\nconsole.log(coins )\n//var symbolToAddress = _.object(_.pluck(coins, 'symbol'), _.pluck(coins, 'address'))\nvar symbolToPrecision = _.object(_.pluck(coins, 'symbol'), _.pluck(coins, 'decimal'))\n//symbolToPrecision[\"BML\"]\nfunction roundUp(num, precision=2) {\n  precision = Math.pow(10, precision)\n  return Math.ceil(num * precision) / precision\n}\n\nfunction getSigner() {\n    return (new ethers.providers.Web3Provider(window.ethereum)).getSigner()\n}\n\nfunction balanceOf(address, tokenAddress=\"0x0575cBFcA796d335A911D7D9f43f8b4255FFd023\"){\n        var erc20_abi = [\n          {\n            \"constant\": true,\n            \"inputs\": [\n              {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n              }\n            ],\n            \"name\": \"balanceOf\",\n            \"outputs\": [\n              {\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"payable\": false,\n            \"type\": \"function\"\n          }\n        ]\n        const contract = new ethers.Contract(tokenAddress, erc20_abi, getSigner());\n        return contract.balanceOf(address)\n}\n\nconst routerABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]\n\nfunction drawChart() {\n\n\n\nvar data = [['Coin', 'Balance']]\nvar totalValue = 0\nvar symbolToValueUsd = {}\nvar values = _.map(allCoins, (symbol)=>{\n  var value = {}\n  var price = 0\n  if(_.has(window.prices, symbol)){\n    price = window.prices[symbol]\n  }\n  //var price = window.prices[symbol]\n  var value = Number($(`#balance${symbol}`).text() * price);\n  symbolToValueUsd[symbol] = value;\n  window.totalValue = totalValue\n  totalValue += value;\n  return [`${symbol}: $${roundUp(value)}`, value]\n});\n\n_.each(allCoins, (symbol)=>{\n  var percentage = (symbolToValueUsd[symbol] / totalValue) * 100;\n  if (totalValue == 0){\n    percentage = 0;\n  }\n  window.percentages[symbol] = percentage;\n  $(`#percent${symbol}`).val(roundUp(percentage));\n});\n\nvar data = google.visualization.arrayToDataTable(data.concat(values))\n\nvar options = {\n  title: 'Investing\\n            $' + roundUp(totalValue),\n  titleTextStyle: {fontSize: 24},\n  colors: [ '#ff8c00', 'grey', 'red','green'],\n  legend:{position: 'top'}\n};\n\nvar chart = new google.visualization.PieChart(document.getElementById('piechart'));\n\nchart.draw(data, options);\n}\n\n$('#rebalanceButton').click( function(e) {\n  e.preventDefault()\n  if (!window.ethereum.selectedAddress){\n    return\n  }\n  _.each(erc20s, (symbol, index, symbols) => {\n    var percentage = 0\n    if(_.has(window.percentages, symbol)){\n      percentage = window.percentages[symbol]\n    }\n    const difference = Number($(`#percent${symbol}`)[0].value) - percentage\n    if (difference > 0.1){\n      const toBuy = difference * window.totalValue / 100;\n      swap(toBuy, \"USDC\", symbol)\n    }\n  })\n});\n$('#submitButton').click( function(e) {\n  e.preventDefault()\n  if (!window.ethereum.selectedAddress){\n    return\n  }\n\n  var data = `addressETH=${window.ethereum.selectedAddress}&` + $('form#addressForm').serialize()\n\n  $.post( 'http://localhost:3000/add', data, function(balanceBTC) {\n    window.balanceBTC = balanceBTC;\n    $('#balanceBTC').text(balanceBTC/ 100000000);\n    drawChart()\n    $('#verifiedBTC').css(\"display\",\"inline\");\n    $('#signatureForm').css(\"display\",\"none\");\n       },\n       'json'\n    ,function(err){console.log(err)});\n});\n\nlet currentAccount = null;\ndetectEthereumProvider().then(provider => {\nif (provider) {\n  window.provider = provider\n  window.ethereum\n  .request({ method: 'eth_accounts' })\n  .then(handleAccountsChanged)\n  .catch((err) => {\n    console.error(err);\n  });\n  window.ethereum.on('accountsChanged', handleAccountsChanged);\n  //swap()\n//1. Import coingecko-api\n//const CoinGecko = require('coingecko-api');\n\n//2. Initiate the CoinGecko API Client\nconst coins = __webpack_require__(/*! ./coins.json */ \"./src/coins.json\");\n  var a=_.findWhere(coins, {symbol: \"USDC\"}).address\n//const CoinGeckoClient = new CoinGecko();\n  //CoinGeckoClient.coins.list().then((data)=>{\n//console.log(data)\n  //});\n\n//console.log(data)\n  console.log(provider)\n} else {\n      console.log('Please install MetaMask!');\n}\n}).catch(error => {\n  console.log(error)\n})\n\n\n\nfunction handleAccountsChanged(accounts) {\n  if (accounts.length === 0) {\n    console.log('Please connect to MetaMask.');\n  } else if (accounts[0] !== currentAccount) {\n    currentAccount = accounts[0];\n    $('#addressETH').text(currentAccount);\n    window.ethereum\n      .request({ method: 'eth_getBalance', params: [currentAccount, 'latest'] })\n      .then((balance) => {\n        const weiValue = parseInt(Number(balance), 10)\n        const ethValue = weiValue/ 1000000000000000000\n        const balanceETH = ethers.utils.parseEther(ethValue.toString());\n        $('#balanceETH').text(roundUp(ethValue));\n        $('#verifiedETH').css(\"display\",\"inline\");\n        _.each(erc20s, (symbol) => {\nconsole.log(tokens[symbol])\n\n          balanceOf(currentAccount, tokens[symbol]).then((balance) => {\nconsole.log(symbolToPrecision[symbol])\n            console.log(roundUp(balance/Math.pow(10,symbolToPrecision[symbol]), 1))\n            $(`#balance${symbol}`).text(roundUp(balance/Math.pow(10,symbolToPrecision[symbol]), 2));\n            drawChart()\n          })\n        })\n        drawChart()\n      })\n      .catch((err) => {\n        if (err.code === 4001) {\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(err);\n        }\n      });\n    }\n}\n\n$('#connectButton').click(connect);\n\nfunction connect() {\n  window.ethereum\n    .request({ method: 'eth_requestAccounts' })\n    .then(handleAccountsChanged)\n    .catch((err) => {\n      if (err.code === 4001) {\n        console.log('Please connect to MetaMask.');\n      } else {\n        console.error(err);\n      }\n    });\n}\nsetInterval(\n  function(){\n    balanceOf(window.ethereum.selectedAddress).then((balance) => {\n      if( balance /100 != $('#balanceBML').text()){\n        alert(\"You have received BML!\")\n        $('#balanceBML').text(balance/100);\n        drawChart()\n      }\n    })\n  }\n  , 3000);\n\nwindow.prices = {\"BML\":20, \"USDC\":1}\nwindow.percentages = {}\n_.each(_.reject(allCoins, (coin)=>{return coin == \"BML\"}), (symbol)=>{\n  console.log(symbol)\n  $.get(`https://api.binance.com/api/v3/avgPrice?symbol=${symbol}BUSD`, (data) => {\n    window.prices[symbol] = data.price\n    console.log(data.price)\n    drawChart()\n})\n\n})\n\n\nasync function swap(toBuyUSD, fromToken, toToken){\n//const Web3 = require('web3');\n//const routerABI = require('./abis/v3SwapRouterABI.json');\n//const credentials = require('./credentials.json');\n\n//const web3 = new Web3(`https://kovan.infura.io/v3/${credentials.infuraKey}`);\n//const privateKey = credentials.privateKey;\n//const activeAccount = window.ethereum.selectedAddress\nconst activeAccount = \"0x450A0cCFC21e42467040ad6d29B6E8a97B7ec68B\"\nconst fromTokenAddress = tokens[fromToken]\nconst toTokenAddress = tokens[toToken]\n\nconst routerAddress = `0xE592427A0AEce92De3Edee1F18E0157C05861564`; // Kovan Swap Router\n//const fromTokenAddress = tokens[\"USDC\"]; // Kovan WETH\n//const toTokenAddress =tokens[\"BML\"]; // Kovan DAI\nconst routerContract = new ethers.Contract(routerAddress, routerABI, getSigner());\nconst expiryDate = Math.floor(Date.now() / 1000) + 9000;\n\n(async () => {\n  console.log((roundUp(toBuyUSD)).toString())\nconsole.log(fromToken)\nconsole.log(toToken)\n\n  const numTokensToBuy = toBuyUSD / window.prices[fromToken]\n  console.log(numTokensToBuy)\n  const qty = ethers.utils.parseUnits(roundUp(numTokensToBuy).toString(), symbolToPrecision[fromToken]);\n\tconsole.log(qty.toString());\n  const params = {\n    tokenIn: fromTokenAddress,\n    tokenOut: toTokenAddress,\n    fee: 500,\n    recipient: activeAccount,\n    deadline: expiryDate,\n    amountIn: qty,\n    amountOutMinimum: 0,\n    sqrtPriceLimitX96: 0,\n  };\n\n  let gas_price = ethers.utils.hexlify(parseInt(2389890000))\n\tlet transactionObject = {\n    gasLimit: ethers.utils.hexlify(10000000), // 100000\n    //gasPrice: gas_price,\n\t\t//data: encoded_tx,\n\t\t//from: activeAccount,\n\t\t//to: routerAddress\n\t};\n  routerContract.exactInputSingle(params, transactionObject).then((data)=>{console.log(data)});\n  //console.log(tx_builder)\n\t//let encoded_tx = tx_builder.encodeABI();\n\n\t//web3.eth.accounts.signTransaction(transactionObject, activeAccount.privateKey, (error, signedTx) => {\n\t\t//if (error) {\n\t\t\t//console.log(error);\n\t\t//} else {\n\t\t\t//web3.eth.sendSignedTransaction(signedTx.rawTransaction).on('receipt', (receipt) => {\n\t\t\t\t//console.log(receipt);\n\t\t\t//});\n\t\t//}\n\t//});\n\n})();\n}\n\n\n\n\n//# sourceURL=webpack://bitmix/./src/index.js?");

/***/ }),

/***/ "?8131":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://bitmix/buffer_(ignored)?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"IUniswapV3Pool\",\"sourceName\":\"contracts/interfaces/IUniswapV3Pool.sol\",\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"0x\",\"deployedBytecode\":\"0x\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-core/artifacts/contracts/interfaces/IUniswapV3Pool.sol/IUniswapV3Pool.json?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"NonfungiblePositionManager\",\"sourceName\":\"contracts/NonfungiblePositionManager.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenDescriptor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"bytecode\":\"0x610120604052600d80546001600160b01b0319166001176001600160b01b0316600160b01b1790553480156200003457600080fd5b50604051620062e9380380620062e98339810160408190526200005791620002db565b82826040518060400160405280601b81526020017f556e697377617020563320506f736974696f6e73204e46542d563100000000008152506040518060400160405280600a815260200169554e492d56332d504f5360b01b815250604051806040016040528060018152602001603160f81b8152508282620000e66301ffc9a760e01b6200018d60201b60201c565b8151620000fb90600690602085019062000212565b5080516200011190600790602084019062000212565b50620001246380ac58cd60e01b6200018d565b62000136635b5e139f60e01b6200018d565b6200014863780e9d6360e01b6200018d565b50508251602093840120608052805192019190912060a052506001600160601b0319606092831b811660c05290821b811660e05291901b166101005250620003249050565b6001600160e01b03198082161415620001ed576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024a576000855562000295565b82601f106200026557805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029557825182559160200191906001019062000278565b50620002a3929150620002a7565b5090565b5b80821115620002a35760008155600101620002a8565b80516001600160a01b0381168114620002d657600080fd5b919050565b600080600060608486031215620002f0578283fd5b620002fb84620002be565b92506200030b60208501620002be565b91506200031b60408501620002be565b90509250925092565b60805160a05160c05160601c60e05160601c6101005160601c615f40620003a960003980612a835250806102995280611718528061180e52806118965280613e5d5280613ea35280613f17525080610aa75280610dde5280610ea55280612a1d5280612b235280612e4452806136e15250806114ff5250806114de5250615f406000f3fe6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a\",\"deployedBytecode\":\"0x6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"SwapRouter\",\"sourceName\":\"contracts/SwapRouter.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"bytecode\":\"0x60c06040526000196000553480156200001757600080fd5b506040516200302f3803806200302f8339810160408190526200003a9162000076565b6001600160601b0319606092831b8116608052911b1660a052620000ad565b80516001600160a01b03811681146200007157600080fd5b919050565b6000806040838503121562000089578182fd5b620000948362000059565b9150620000a46020840162000059565b90509250929050565b60805160601c60a05160601c612f26620001096000398061012f528061058352806106ad5280610747528061078752806108b15280611c435280611ca35280611d24525080610dc6528061140c5280611e265250612f266000f3fe6080604052600436106101125760003560e01c8063c04b8d59116100a5578063df2ab5bb11610074578063f28c049811610059578063f28c0498146102f5578063f3995c6714610308578063fa461e331461031b576101bd565b8063df2ab5bb146102cf578063e0e189a0146102e2576101bd565b8063c04b8d5914610281578063c2e3140a14610294578063c45a0155146102a7578063db3e2198146102bc576101bd565b80634aa4a4fc116100e15780634aa4a4fc146102195780639b2c0a371461023b578063a4a78f0c1461024e578063ac9650d814610261576101bd565b806312210e8a146101c2578063414bf389146101ca5780634659a494146101f357806349404b7c14610206576101bd565b366101bd573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b6101bb61033b565b6101dd6101d83660046129f8565b61034d565b6040516101ea9190612df1565b60405180910390f35b6101bb610201366004612776565b6104bf565b6101bb610214366004612aff565b61057f565b34801561022557600080fd5b5061022e610745565b6040516101ea9190612c37565b6101bb610249366004612b2e565b610769565b6101bb61025c366004612776565b610981565b61027461026f3660046127d6565b610a56565b6040516101ea9190612caa565b6101dd61028f36600461294d565b610bb0565b6101bb6102a2366004612776565b610d0f565b3480156102b357600080fd5b5061022e610dc4565b6101dd6102ca3660046129f8565b610de8565b6101bb6102dd3660046126d7565b610f78565b6101bb6102f0366004612718565b611095565b6101dd610303366004612a14565b6111fb565b6101bb610316366004612776565b61132f565b34801561032757600080fd5b506101bb610336366004612868565b6113c7565b471561034b5761034b334761150e565b565b600081608001358061035d61165c565b11156103ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b61047060a08401356103e260808601606087016126b4565b6103f3610100870160e088016126b4565b604080518082019091528061040b60208a018a6126b4565b61041b60608b0160408c01612adc565b61042b60408c0160208d016126b4565b60405160200161043d93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611660565b91508260c001358210156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b60405180910390fd5b50919050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060857600080fd5b505afa15801561061c573d6000803e3d6000fd5b505050506040513d602081101561063257600080fd5b50519050828110156106a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610740577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50505050610740828261150e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008211801561077a575060648211155b61078357600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b50519050848110156108a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561097a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50505050600061271061095285846117e690919063ffffffff16565b8161095957fe5b049050801561096c5761096c838261150e565b6109788582840361150e565b505b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d6020811015610a4057600080fd5b50511015610978576109788686868686866104bf565b60608167ffffffffffffffff81118015610a6f57600080fd5b50604051908082528060200260200182016040528015610aa357816020015b6060815260200190600190039081610a8e5790505b50905060005b82811015610ba95760008030868685818110610ac157fe5b9050602002810190610ad39190612dfa565b604051610ae1929190612c27565b600060405180830381855af49150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b509150915081610b8757604481511015610b3a57600080fd5b60048101905080806020019051810190610b5491906128e3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b09190612d28565b80848481518110610b9457fe5b60209081029190910101525050600101610aa9565b5092915050565b6000816040015180610bc061165c565b1115610c2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b335b6000610c3e8560000151611810565b9050610c97856060015182610c57578660200151610c59565b305b60006040518060400160405280610c738b6000015161181c565b81526020018773ffffffffffffffffffffffffffffffffffffffff16815250611660565b60608601528015610cb7578451309250610cb09061182b565b8552610cc4565b8460600151935050610cca565b50610c2f565b8360800151831015610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b505110156109785761097886868686868661132f565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610df861165c565b1115610e6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b610f0e60a0840135610e7d60808601606087016126b4565b610e8e610100870160e088016126b4565b6040518060400160405280886020016020810190610eac91906126b4565b610ebc60608b0160408c01612adc565b610ec960208c018c6126b4565b604051602001610edb93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611860565b91508260c00135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b505190508281101561107e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561108f5761108f848383611a1c565b50505050565b6000821180156110a6575060648211155b6110af57600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d602081101561114257600080fd5b50519050848110156111b557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b80156109785760006127106111ca83866117e6565b816111d157fe5b04905080156111e5576111e5878483611a1c565b6111f28786838503611a1c565b50505050505050565b600081604001358061120b61165c565b111561127857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b6112eb606084013561129060408601602087016126b4565b60408051808201909152600090806112a88980612dfa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525033602090910152611860565b5060005491508260800135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561055f57600080fd5b60008413806113d65750600083135b6113df57600080fd5b60006113ed82840184612a4c565b905060008060006114018460000151611bf1565b9250925092506114337f0000000000000000000000000000000000000000000000000000000000000000848484611c22565b5060008060008a13611474578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610896114a5565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b9150915081156114c4576114bf8587602001513384611c41565b610573565b85516114cf90611810565b156114f45785516114df9061182b565b86526114ee8133600089611860565b50610573565b806000819055508394506105738587602001513384611c41565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061158557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611548565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b505090508061074057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b4290565b600073ffffffffffffffffffffffffffffffffffffffff8416611681573093505b60008060006116938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808316908416106000806116c4868686611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856116ea8f611e5d565b73ffffffffffffffffffffffffffffffffffffffff8e161561170c578d611732565b8761172b5773fffd8963efd1fc6a506488495d951d5263988d25611732565b6401000276a45b8d6040516020016117439190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611772959493929190612c58565b6040805180830381600087803b15801561178b57600080fd5b505af115801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612845565b91509150826117d257816117d4565b805b6000039b9a5050505050505050505050565b6000821580611801575050818102818382816117fe57fe5b04145b61180a57600080fd5b92915050565b8051604211155b919050565b606061180a826000602b611e8f565b805160609061180a9083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901611e8f565b600073ffffffffffffffffffffffffffffffffffffffff8416611881573093505b60008060006118938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808416908316106000806118c4858786611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856118ea8f611e5d565b60000373ffffffffffffffffffffffffffffffffffffffff8e161561190f578d611935565b8761192e5773fffd8963efd1fc6a506488495d951d5263988d25611935565b6401000276a45b8d6040516020016119469190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611975959493929190612c58565b6040805180830381600087803b15801561198e57600080fd5b505af11580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190612845565b915091506000836119db5781836000036119e1565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16611a0d578b8114611a0d57600080fd5b50505050505050949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611af157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ab4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150818015611b86575080511580611b865750808060200190516020811015611b8357600080fd5b50515b61097a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008080611bff8482612076565b9250611c0c846014612176565b9050611c19846017612076565b91509193909250565b6000611c3885611c33868686612266565b6122e3565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611c9c5750804710155b15611de5577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0957600080fd5b505af1158015611d1d573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611db357600080fd5b505af1158015611dc7573d6000803e3d6000fd5b505050506040513d6020811015611ddd57600080fd5b5061108f9050565b73ffffffffffffffffffffffffffffffffffffffff8316301415611e1357611e0e848383611a1c565b61108f565b61108f84848484612313565b6000611e557f0000000000000000000000000000000000000000000000000000000000000000611e50868686612266565b6124f0565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210611e8b57600080fd5b5090565b60608182601f011015611f0357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015611f7457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015611fe657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015612005576040519150600082526020820160405261206d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203e578051835260209283019201612026565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6000818260140110156120ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561215d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156121ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561225d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b61226e612626565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156122a6579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b60006122ef83836124f0565b90503373ffffffffffffffffffffffffffffffffffffffff82161461180a57600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106123f057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123b3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612452576040519150601f19603f3d011682016040523d82523d6000602084013e612457565b606091505b5091509150818015612485575080511580612485575080806020019051602081101561248257600080fd5b50515b61097857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061253257600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561181781612ef4565b600082601f830112612661578081fd5b813561267461266f82612e88565b612e64565b818152846020838601011115612688578283fd5b816020850160208301379081016020019190915292915050565b600061010082840312156104b9578081fd5b6000602082840312156126c5578081fd5b81356126d081612ef4565b9392505050565b6000806000606084860312156126eb578182fd5b83356126f681612ef4565b925060208401359150604084013561270d81612ef4565b809150509250925092565b600080600080600060a0868803121561272f578081fd5b853561273a81612ef4565b945060208601359350604086013561275181612ef4565b925060608601359150608086013561276881612ef4565b809150509295509295909350565b60008060008060008060c0878903121561278e578081fd5b863561279981612ef4565b95506020870135945060408701359350606087013560ff811681146127bc578182fd5b9598949750929560808101359460a0909101359350915050565b600080602083850312156127e8578182fd5b823567ffffffffffffffff808211156127ff578384fd5b818501915085601f830112612812578384fd5b813581811115612820578485fd5b8660208083028501011115612833578485fd5b60209290920196919550909350505050565b60008060408385031215612857578182fd5b505080516020909101519092909150565b6000806000806060858703121561287d578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156128a2578384fd5b818701915087601f8301126128b5578384fd5b8135818111156128c3578485fd5b8860208285010111156128d4578485fd5b95989497505060200194505050565b6000602082840312156128f4578081fd5b815167ffffffffffffffff81111561290a578182fd5b8201601f8101841361291a578182fd5b805161292861266f82612e88565b81815285602083850101111561293c578384fd5b611c38826020830160208601612ec8565b60006020828403121561295e578081fd5b813567ffffffffffffffff80821115612975578283fd5b9083019060a08286031215612988578283fd5b60405160a08101818110838211171561299d57fe5b6040528235828111156129ae578485fd5b6129ba87828601612651565b8252506129c960208401612646565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612a0a578081fd5b6126d083836126a2565b600060208284031215612a25578081fd5b813567ffffffffffffffff811115612a3b578182fd5b820160a081850312156126d0578182fd5b600060208284031215612a5d578081fd5b813567ffffffffffffffff80821115612a74578283fd5b9083019060408286031215612a87578283fd5b604051604081018181108382111715612a9c57fe5b604052823582811115612aad578485fd5b612ab987828601612651565b82525060208301359250612acc83612ef4565b6020810192909252509392505050565b600060208284031215612aed578081fd5b813562ffffff811681146126d0578182fd5b60008060408385031215612b11578182fd5b823591506020830135612b2381612ef4565b809150509250929050565b60008060008060808587031215612b43578182fd5b843593506020850135612b5581612ef4565b9250604085013591506060850135612b6c81612ef4565b939692955090935050565b60008151808452612b8f816020860160208601612ec8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612c9f60a0830184612b77565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612d1b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612d09858351612b77565b94509285019290850190600101612ccf565b5092979650505050505050565b6000602082526126d06020830184612b77565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060208252825160406020840152612dc56060840182612b77565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e2e578283fd5b83018035915067ffffffffffffffff821115612e48578283fd5b602001915036819003821315612e5d57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715612e8057fe5b604052919050565b600067ffffffffffffffff821115612e9c57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015612ee3578181015183820152602001612ecb565b8381111561108f5750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114612f1657600080fd5b5056fea164736f6c6343000706000a\",\"deployedBytecode\":\"0x6080604052600436106101125760003560e01c8063c04b8d59116100a5578063df2ab5bb11610074578063f28c049811610059578063f28c0498146102f5578063f3995c6714610308578063fa461e331461031b576101bd565b8063df2ab5bb146102cf578063e0e189a0146102e2576101bd565b8063c04b8d5914610281578063c2e3140a14610294578063c45a0155146102a7578063db3e2198146102bc576101bd565b80634aa4a4fc116100e15780634aa4a4fc146102195780639b2c0a371461023b578063a4a78f0c1461024e578063ac9650d814610261576101bd565b806312210e8a146101c2578063414bf389146101ca5780634659a494146101f357806349404b7c14610206576101bd565b366101bd573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b6101bb61033b565b6101dd6101d83660046129f8565b61034d565b6040516101ea9190612df1565b60405180910390f35b6101bb610201366004612776565b6104bf565b6101bb610214366004612aff565b61057f565b34801561022557600080fd5b5061022e610745565b6040516101ea9190612c37565b6101bb610249366004612b2e565b610769565b6101bb61025c366004612776565b610981565b61027461026f3660046127d6565b610a56565b6040516101ea9190612caa565b6101dd61028f36600461294d565b610bb0565b6101bb6102a2366004612776565b610d0f565b3480156102b357600080fd5b5061022e610dc4565b6101dd6102ca3660046129f8565b610de8565b6101bb6102dd3660046126d7565b610f78565b6101bb6102f0366004612718565b611095565b6101dd610303366004612a14565b6111fb565b6101bb610316366004612776565b61132f565b34801561032757600080fd5b506101bb610336366004612868565b6113c7565b471561034b5761034b334761150e565b565b600081608001358061035d61165c565b11156103ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b61047060a08401356103e260808601606087016126b4565b6103f3610100870160e088016126b4565b604080518082019091528061040b60208a018a6126b4565b61041b60608b0160408c01612adc565b61042b60408c0160208d016126b4565b60405160200161043d93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611660565b91508260c001358210156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b60405180910390fd5b50919050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060857600080fd5b505afa15801561061c573d6000803e3d6000fd5b505050506040513d602081101561063257600080fd5b50519050828110156106a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610740577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50505050610740828261150e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008211801561077a575060648211155b61078357600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b50519050848110156108a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561097a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50505050600061271061095285846117e690919063ffffffff16565b8161095957fe5b049050801561096c5761096c838261150e565b6109788582840361150e565b505b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d6020811015610a4057600080fd5b50511015610978576109788686868686866104bf565b60608167ffffffffffffffff81118015610a6f57600080fd5b50604051908082528060200260200182016040528015610aa357816020015b6060815260200190600190039081610a8e5790505b50905060005b82811015610ba95760008030868685818110610ac157fe5b9050602002810190610ad39190612dfa565b604051610ae1929190612c27565b600060405180830381855af49150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b509150915081610b8757604481511015610b3a57600080fd5b60048101905080806020019051810190610b5491906128e3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b09190612d28565b80848481518110610b9457fe5b60209081029190910101525050600101610aa9565b5092915050565b6000816040015180610bc061165c565b1115610c2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b335b6000610c3e8560000151611810565b9050610c97856060015182610c57578660200151610c59565b305b60006040518060400160405280610c738b6000015161181c565b81526020018773ffffffffffffffffffffffffffffffffffffffff16815250611660565b60608601528015610cb7578451309250610cb09061182b565b8552610cc4565b8460600151935050610cca565b50610c2f565b8360800151831015610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b505110156109785761097886868686868661132f565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610df861165c565b1115610e6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b610f0e60a0840135610e7d60808601606087016126b4565b610e8e610100870160e088016126b4565b6040518060400160405280886020016020810190610eac91906126b4565b610ebc60608b0160408c01612adc565b610ec960208c018c6126b4565b604051602001610edb93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611860565b91508260c00135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b505190508281101561107e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561108f5761108f848383611a1c565b50505050565b6000821180156110a6575060648211155b6110af57600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d602081101561114257600080fd5b50519050848110156111b557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b80156109785760006127106111ca83866117e6565b816111d157fe5b04905080156111e5576111e5878483611a1c565b6111f28786838503611a1c565b50505050505050565b600081604001358061120b61165c565b111561127857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b6112eb606084013561129060408601602087016126b4565b60408051808201909152600090806112a88980612dfa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525033602090910152611860565b5060005491508260800135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561055f57600080fd5b60008413806113d65750600083135b6113df57600080fd5b60006113ed82840184612a4c565b905060008060006114018460000151611bf1565b9250925092506114337f0000000000000000000000000000000000000000000000000000000000000000848484611c22565b5060008060008a13611474578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610896114a5565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b9150915081156114c4576114bf8587602001513384611c41565b610573565b85516114cf90611810565b156114f45785516114df9061182b565b86526114ee8133600089611860565b50610573565b806000819055508394506105738587602001513384611c41565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061158557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611548565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b505090508061074057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b4290565b600073ffffffffffffffffffffffffffffffffffffffff8416611681573093505b60008060006116938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808316908416106000806116c4868686611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856116ea8f611e5d565b73ffffffffffffffffffffffffffffffffffffffff8e161561170c578d611732565b8761172b5773fffd8963efd1fc6a506488495d951d5263988d25611732565b6401000276a45b8d6040516020016117439190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611772959493929190612c58565b6040805180830381600087803b15801561178b57600080fd5b505af115801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612845565b91509150826117d257816117d4565b805b6000039b9a5050505050505050505050565b6000821580611801575050818102818382816117fe57fe5b04145b61180a57600080fd5b92915050565b8051604211155b919050565b606061180a826000602b611e8f565b805160609061180a9083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901611e8f565b600073ffffffffffffffffffffffffffffffffffffffff8416611881573093505b60008060006118938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808416908316106000806118c4858786611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856118ea8f611e5d565b60000373ffffffffffffffffffffffffffffffffffffffff8e161561190f578d611935565b8761192e5773fffd8963efd1fc6a506488495d951d5263988d25611935565b6401000276a45b8d6040516020016119469190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611975959493929190612c58565b6040805180830381600087803b15801561198e57600080fd5b505af11580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190612845565b915091506000836119db5781836000036119e1565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16611a0d578b8114611a0d57600080fd5b50505050505050949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611af157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ab4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150818015611b86575080511580611b865750808060200190516020811015611b8357600080fd5b50515b61097a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008080611bff8482612076565b9250611c0c846014612176565b9050611c19846017612076565b91509193909250565b6000611c3885611c33868686612266565b6122e3565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611c9c5750804710155b15611de5577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0957600080fd5b505af1158015611d1d573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611db357600080fd5b505af1158015611dc7573d6000803e3d6000fd5b505050506040513d6020811015611ddd57600080fd5b5061108f9050565b73ffffffffffffffffffffffffffffffffffffffff8316301415611e1357611e0e848383611a1c565b61108f565b61108f84848484612313565b6000611e557f0000000000000000000000000000000000000000000000000000000000000000611e50868686612266565b6124f0565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210611e8b57600080fd5b5090565b60608182601f011015611f0357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015611f7457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015611fe657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015612005576040519150600082526020820160405261206d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203e578051835260209283019201612026565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6000818260140110156120ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561215d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156121ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561225d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b61226e612626565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156122a6579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b60006122ef83836124f0565b90503373ffffffffffffffffffffffffffffffffffffffff82161461180a57600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106123f057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123b3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612452576040519150601f19603f3d011682016040523d82523d6000602084013e612457565b606091505b5091509150818015612485575080511580612485575080806020019051602081101561248257600080fd5b50515b61097857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061253257600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561181781612ef4565b600082601f830112612661578081fd5b813561267461266f82612e88565b612e64565b818152846020838601011115612688578283fd5b816020850160208301379081016020019190915292915050565b600061010082840312156104b9578081fd5b6000602082840312156126c5578081fd5b81356126d081612ef4565b9392505050565b6000806000606084860312156126eb578182fd5b83356126f681612ef4565b925060208401359150604084013561270d81612ef4565b809150509250925092565b600080600080600060a0868803121561272f578081fd5b853561273a81612ef4565b945060208601359350604086013561275181612ef4565b925060608601359150608086013561276881612ef4565b809150509295509295909350565b60008060008060008060c0878903121561278e578081fd5b863561279981612ef4565b95506020870135945060408701359350606087013560ff811681146127bc578182fd5b9598949750929560808101359460a0909101359350915050565b600080602083850312156127e8578182fd5b823567ffffffffffffffff808211156127ff578384fd5b818501915085601f830112612812578384fd5b813581811115612820578485fd5b8660208083028501011115612833578485fd5b60209290920196919550909350505050565b60008060408385031215612857578182fd5b505080516020909101519092909150565b6000806000806060858703121561287d578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156128a2578384fd5b818701915087601f8301126128b5578384fd5b8135818111156128c3578485fd5b8860208285010111156128d4578485fd5b95989497505060200194505050565b6000602082840312156128f4578081fd5b815167ffffffffffffffff81111561290a578182fd5b8201601f8101841361291a578182fd5b805161292861266f82612e88565b81815285602083850101111561293c578384fd5b611c38826020830160208601612ec8565b60006020828403121561295e578081fd5b813567ffffffffffffffff80821115612975578283fd5b9083019060a08286031215612988578283fd5b60405160a08101818110838211171561299d57fe5b6040528235828111156129ae578485fd5b6129ba87828601612651565b8252506129c960208401612646565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612a0a578081fd5b6126d083836126a2565b600060208284031215612a25578081fd5b813567ffffffffffffffff811115612a3b578182fd5b820160a081850312156126d0578182fd5b600060208284031215612a5d578081fd5b813567ffffffffffffffff80821115612a74578283fd5b9083019060408286031215612a87578283fd5b604051604081018181108382111715612a9c57fe5b604052823582811115612aad578485fd5b612ab987828601612651565b82525060208301359250612acc83612ef4565b6020810192909252509392505050565b600060208284031215612aed578081fd5b813562ffffff811681146126d0578182fd5b60008060408385031215612b11578182fd5b823591506020830135612b2381612ef4565b809150509250929050565b60008060008060808587031215612b43578182fd5b843593506020850135612b5581612ef4565b9250604085013591506060850135612b6c81612ef4565b939692955090935050565b60008151808452612b8f816020860160208601612ec8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612c9f60a0830184612b77565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612d1b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612d09858351612b77565b94509285019290850190600101612ccf565b5092979650505050505050565b6000602082526126d06020830184612b77565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060208252825160406020840152612dc56060840182612b77565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e2e578283fd5b83018035915067ffffffffffffffff821115612e48578283fd5b602001915036819003821315612e5d57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715612e8057fe5b604052919050565b600067ffffffffffffffff821115612e9c57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015612ee3578181015183820152602001612ecb565b8381111561108f5750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114612f1657600080fd5b5056fea164736f6c6343000706000a\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json ***!
  \************************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"ISelfPermit\",\"sourceName\":\"contracts/interfaces/ISelfPermit.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"bytecode\":\"0x\",\"deployedBytecode\":\"0x\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json":
/*!********************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Quoter\",\"sourceName\":\"contracts/lens/Quoter.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"0x60c060405234801561001057600080fd5b506040516112e53803806112e583398101604081905261002f91610069565b6001600160601b0319606092831b8116608052911b1660a05261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c6112176100ce60003980610342525080610366528061058652806106d552506112176000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610e9e565b610116565b6040516100a29190611148565b60405180910390f35b6100956100b9366004610e30565b61017b565b6100c6610340565b6040516100a29190611084565b6100c6610364565b6100956100e9366004610e9e565b610388565b6100956100fc366004610e30565b6103d6565b61011461010f366004610f04565b610555565b005b60005b600061012484610660565b9050600080600061013487610668565b92509250925061014882848389600061017b565b955083156101605761015987610699565b965061016c565b85945050505050610175565b50505050610119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff808616878216109083166101a65760008490555b6101b18787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836101d78861070c565b60000373ffffffffffffffffffffffffffffffffffffffff8816156101fc5787610222565b8561021b5773fffd8963efd1fc6a506488495d951d5263988d25610222565b6401000276a45b8b8b8e6040516020016102379392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016102669594939291906110a5565b6040805180830381600087803b15801561027f57600080fd5b505af19250505080156102cd575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526102ca91810190610ee1565b60015b610333573d8080156102fb576040519150601f19603f3d011682016040523d82523d6000602084013e610300565b606091505b5073ffffffffffffffffffffffffffffffffffffffff841661032157600080555b61032a8161073e565b92505050610337565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061039684610660565b905060008060006103a687610668565b9250925092506103ba8383838960006103d6565b95508315610160576103cb87610699565b96505050505061038b565b600073ffffffffffffffffffffffffffffffffffffffff808616908716106103ff8787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836104258861070c565b73ffffffffffffffffffffffffffffffffffffffff881615610447578761046d565b856104665773fffd8963efd1fc6a506488495d951d5263988d2561046d565b6401000276a45b8c8b8d6040516020016104829392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016104b19594939291906110a5565b6040805180830381600087803b1580156104ca57600080fd5b505af1925050508015610518575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261051591810190610ee1565b60015b610333573d808015610546576040519150601f19603f3d011682016040523d82523d6000602084013e61054b565b606091505b5061032a8161073e565b60008313806105645750600082135b61056d57600080fd5b600080600061057b84610668565b9250925092506105ad7f00000000000000000000000000000000000000000000000000000000000000008484846107ef565b5060008060008089136105f3578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610628565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b925092509250821561063f57604051818152602081fd5b6000541561065557600054811461065557600080fd5b604051828152602081fd5b516042111590565b600080806106768482610805565b9250610683846014610905565b9050610690846017610805565b91509193909250565b80516060906101759083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9016109f5565b60006107047f00000000000000000000000000000000000000000000000000000000000000006106ff868686610bdc565b610c59565b949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061073a57600080fd5b5090565b600081516020146107db5760448251101561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611111565b60405180910390fd5b600482019150818060200190518101906107a89190610f52565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078591906110f7565b818060200190518101906101759190610fbc565b600061033785610800868686610bdc565b610d8f565b60008182601401101561087957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b81601401835110156108ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b60008182600301101561097957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b81600301835110156109ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610a6957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610ada57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015610b4c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015610b6b5760405191506000825260208201604052610bd3565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610ba4578051835260209283019201610b8c565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b610be4610dbf565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c1c579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610c9b57600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b6000610d9b8383610c59565b90503373ffffffffffffffffffffffffffffffffffffffff82161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610def578081fd5b8135610e02610dfd82611175565b611151565b818152846020838601011115610e16578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610e47578081fd5b8535610e52816111e5565b94506020860135610e62816111e5565b9350604086013562ffffff81168114610e79578182fd5b9250606086013591506080860135610e90816111e5565b809150509295509295909350565b60008060408385031215610eb0578182fd5b823567ffffffffffffffff811115610ec6578283fd5b610ed285828601610ddf565b95602094909401359450505050565b60008060408385031215610ef3578182fd5b505080516020909101519092909150565b600080600060608486031215610f18578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610f3c578182fd5b610f4886828701610ddf565b9150509250925092565b600060208284031215610f63578081fd5b815167ffffffffffffffff811115610f79578182fd5b8201601f81018413610f89578182fd5b8051610f97610dfd82611175565b818152856020838501011115610fab578384fd5b6103378260208301602086016111b5565b600060208284031215610fcd578081fd5b5051919050565b60008151808452610fec8160208601602086016111b5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a060808301526110ec60a0830184610fd4565b979650505050505050565b60006020825261110a6020830184610fd4565b9392505050565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561116d57fe5b604052919050565b600067ffffffffffffffff82111561118957fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b838110156111d05781810151838201526020016111b8565b838111156111df576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461120757600080fd5b5056fea164736f6c6343000706000a\",\"deployedBytecode\":\"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610e9e565b610116565b6040516100a29190611148565b60405180910390f35b6100956100b9366004610e30565b61017b565b6100c6610340565b6040516100a29190611084565b6100c6610364565b6100956100e9366004610e9e565b610388565b6100956100fc366004610e30565b6103d6565b61011461010f366004610f04565b610555565b005b60005b600061012484610660565b9050600080600061013487610668565b92509250925061014882848389600061017b565b955083156101605761015987610699565b965061016c565b85945050505050610175565b50505050610119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff808616878216109083166101a65760008490555b6101b18787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836101d78861070c565b60000373ffffffffffffffffffffffffffffffffffffffff8816156101fc5787610222565b8561021b5773fffd8963efd1fc6a506488495d951d5263988d25610222565b6401000276a45b8b8b8e6040516020016102379392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016102669594939291906110a5565b6040805180830381600087803b15801561027f57600080fd5b505af19250505080156102cd575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526102ca91810190610ee1565b60015b610333573d8080156102fb576040519150601f19603f3d011682016040523d82523d6000602084013e610300565b606091505b5073ffffffffffffffffffffffffffffffffffffffff841661032157600080555b61032a8161073e565b92505050610337565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061039684610660565b905060008060006103a687610668565b9250925092506103ba8383838960006103d6565b95508315610160576103cb87610699565b96505050505061038b565b600073ffffffffffffffffffffffffffffffffffffffff808616908716106103ff8787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836104258861070c565b73ffffffffffffffffffffffffffffffffffffffff881615610447578761046d565b856104665773fffd8963efd1fc6a506488495d951d5263988d2561046d565b6401000276a45b8c8b8d6040516020016104829392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016104b19594939291906110a5565b6040805180830381600087803b1580156104ca57600080fd5b505af1925050508015610518575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261051591810190610ee1565b60015b610333573d808015610546576040519150601f19603f3d011682016040523d82523d6000602084013e61054b565b606091505b5061032a8161073e565b60008313806105645750600082135b61056d57600080fd5b600080600061057b84610668565b9250925092506105ad7f00000000000000000000000000000000000000000000000000000000000000008484846107ef565b5060008060008089136105f3578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610628565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b925092509250821561063f57604051818152602081fd5b6000541561065557600054811461065557600080fd5b604051828152602081fd5b516042111590565b600080806106768482610805565b9250610683846014610905565b9050610690846017610805565b91509193909250565b80516060906101759083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9016109f5565b60006107047f00000000000000000000000000000000000000000000000000000000000000006106ff868686610bdc565b610c59565b949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061073a57600080fd5b5090565b600081516020146107db5760448251101561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611111565b60405180910390fd5b600482019150818060200190518101906107a89190610f52565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078591906110f7565b818060200190518101906101759190610fbc565b600061033785610800868686610bdc565b610d8f565b60008182601401101561087957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b81601401835110156108ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b60008182600301101561097957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b81600301835110156109ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610a6957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610ada57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015610b4c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015610b6b5760405191506000825260208201604052610bd3565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610ba4578051835260209283019201610b8c565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b610be4610dbf565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c1c579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610c9b57600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b6000610d9b8383610c59565b90503373ffffffffffffffffffffffffffffffffffffffff82161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610def578081fd5b8135610e02610dfd82611175565b611151565b818152846020838601011115610e16578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610e47578081fd5b8535610e52816111e5565b94506020860135610e62816111e5565b9350604086013562ffffff81168114610e79578182fd5b9250606086013591506080860135610e90816111e5565b809150509295509295909350565b60008060408385031215610eb0578182fd5b823567ffffffffffffffff811115610ec6578283fd5b610ed285828601610ddf565b95602094909401359450505050565b60008060408385031215610ef3578182fd5b505080516020909101519092909150565b600080600060608486031215610f18578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610f3c578182fd5b610f4886828701610ddf565b9150509250925092565b600060208284031215610f63578081fd5b815167ffffffffffffffff811115610f79578182fd5b8201601f81018413610f89578182fd5b8051610f97610dfd82611175565b818152856020838501011115610fab578384fd5b6103378260208301602086016111b5565b600060208284031215610fcd578081fd5b5051919050565b60008151808452610fec8160208601602086016111b5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a060808301526110ec60a0830184610fd4565b979650505050505050565b60006020825261110a6020830184610fd4565b9392505050565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561116d57fe5b604052919050565b600067ffffffffffffffff82111561118957fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b838110156111d05781810151838201526020016111b8565b838111156111df576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461120757600080fd5b5056fea164736f6c6343000706000a\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json?");

/***/ }),

/***/ "./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"UniswapV3Staker\",\"sourceName\":\"contracts/UniswapV3Staker.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"_nonfungiblePositionManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxIncentiveStartLeadTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxIncentiveDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"DepositTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"IncentiveCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"IncentiveEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountRequested\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"createIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"numberOfStakes\",\"type\":\"uint48\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"endIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"secondsInsideX128\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"incentives\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRewardUnclaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"totalSecondsClaimedX128\",\"type\":\"uint160\"},{\"internalType\":\"uint96\",\"name\":\"numberOfStakes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIncentiveStartLeadTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"incentiveId\",\"type\":\"bytes32\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideInitialX128\",\"type\":\"uint160\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"internalType\":\"struct IUniswapV3Staker.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}');\n\n//# sourceURL=webpack://bitmix/./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json?");

/***/ }),

/***/ "./src/coins.json":
/*!************************!*\
  !*** ./src/coins.json ***!
  \************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('[{\"address\":\"null\",\"symbol\":\"BML\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x4E84E9e5fb0A972628Cf4568c403167EF1D40431\",\"symbol\":\"$FFC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa024e8057eec474a9b2356833707dd0579e26ef3\",\"symbol\":\"$FYX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcdb7ecfd3403eef3882c65b761ef9b5054890a47\",\"symbol\":\"$HUR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0db8d8b76bc361bacbb72e2c491e06085a97ab31\",\"symbol\":\"$IQN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7dd7f56d697cc0f2b52bd55c057f378f1fe6ab4b\",\"symbol\":\"$TEAK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB6eD7644C69416d67B522e20bC294A9a9B405B31\",\"symbol\":\"0xBTC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0f72714b35a366285df85886a2ee174601292a17\",\"symbol\":\"1SG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xAf30D2a7E90d7DC361c8C4585e9BB7D2F6f15bc7\",\"symbol\":\"1ST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfdbc1adc26f0f8f8606a5d63b7d3a3cd21c22b23\",\"symbol\":\"1WO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0073e5E52E2B4fE218D75d994eE2B3c82f9C87EA\",\"symbol\":\"22x\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9fC0583220eB44fAeE9e2dc1E63F39204DDD9090\",\"symbol\":\"2DC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaEc98A708810414878c3BCDF46Aad31dEd4a4557\",\"symbol\":\"300\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x430241368c1D293fdA21DBa8Bb7aF32007c59109\",\"symbol\":\"3LT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5D9776472483eE2c2B204775547BFf6db5A30Fed\",\"symbol\":\"599GTO1\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xBa7DCBa2Ade319Bc772DB4df75A76BA00dFb31b0\",\"symbol\":\"A18\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcc7d26d8ea6281bb363c8448515f2c61f7bc19f0\",\"symbol\":\"ABCH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb348cb0638b2399ae598b5575d5c12e0f15d3690\",\"symbol\":\"ABDX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcb03bec536843d338ac138205a6689d4cdc11046\",\"symbol\":\"ABPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb98d4c97425d9908e66e53a6fdf673acca0be986\",\"symbol\":\"ABT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0e8d6b471e332f140e7d9dbb99e5e3822f728da6\",\"symbol\":\"ABYSS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x13f1b7fdfbe1fc66676d56483e21b1ecb40b58e2\",\"symbol\":\"ACC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x06147110022b768ba8f99a8f385df11a151a9cc8\",\"symbol\":\"ACE\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x2baac9330cf9ac479d819195794d79ad0c7616e3\",\"symbol\":\"ADB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x827fe1736cee36f7737be6cf502434af294cf137\",\"symbol\":\"ADC$\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE69a353b3152Dd7b706ff7dD40fe1d18b7802d31\",\"symbol\":\"ADH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8810C63470d38639954c6B41AaC545848C46484a\",\"symbol\":\"ADI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x660e71483785f66133548b10f6926dc332b06e61\",\"symbol\":\"ADL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x422866a8F0b032c5cf1DfBDEf31A20F4509562b0\",\"symbol\":\"ADST\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xD0D6D6C5Fe4a677D343cC433536BB717bAe167dD\",\"symbol\":\"ADT\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x4470BB87d77b963A013DB939BE332f927f2b992e\",\"symbol\":\"ADX\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x5ca9a71b1d01849c0a95490cc00559717fcf0d1d\",\"symbol\":\"AE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8eB24319393716668D768dCEC29356ae9CfFe285\",\"symbol\":\"AGI\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5121e348e897daef1eef23959ab290e5557cf274\",\"symbol\":\"AI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x37e8789bb9996cac9156cd5f5fd32599e6b91289\",\"symbol\":\"AID\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466\",\"symbol\":\"AION\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x27dce1ec4d3f72c3e457cc50354f1f975ddef488\",\"symbol\":\"AIR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1063ce524265d5a3A624f4914acd573dD89ce988\",\"symbol\":\"AIX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1ca43a170bad619322e6f54d46b57e504db663aa\",\"symbol\":\"AKC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x181a63746d3adcf356cbc73ace22832ffbb1ee5a\",\"symbol\":\"ALCO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4289c043a12392f1027307fb58272d8ebd853912\",\"symbol\":\"ALI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEA610B1153477720748DC13ED378003941d84fAB\",\"symbol\":\"ALIS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x638ac149ea8ef9a1286c41b977017aa7359e6cfa\",\"symbol\":\"ALTS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x49b127bc33ce7e1586ec28cec6a65b112596c822\",\"symbol\":\"ALX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4dc3643dbc642b72c158e7f3d2ff232df61cb6ce\",\"symbol\":\"AMB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf1aC7A375429719DE0dde33528e2639B9a206ebA\",\"symbol\":\"AMGO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x949bed886c739f1a3273629b3320db0c5024c719\",\"symbol\":\"AMIS\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0xca0e7269600d353f70b14ad118a49575455c0f2f\",\"symbol\":\"AMLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x737f98ac8ca59f2c68ad658e3c3d8c8963e40a4c\",\"symbol\":\"AMN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x38c87aa89b2b8cd9b95b736e1fa7b612ea972169\",\"symbol\":\"AMO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xD46bA6D942050d489DBd938a2C909A5d5039A161\",\"symbol\":\"AMPL\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x84936cF7630AA3e27Dd9AfF968b140d5AEE49F5a\",\"symbol\":\"AMTC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x960b236A07cf122663c4303350609A66A7B288C0\",\"symbol\":\"ANT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9ab165d795019b6d8b3e971dda91071421305e5a\",\"symbol\":\"AOA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4c0fbe1bb46612915e7967d2c3213cd4d87257ad\",\"symbol\":\"APIS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1a7a8bd9106f2b8d977e08582dc7d24c723ab0db\",\"symbol\":\"APPC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x23ae3c5b39b12f0693e05435eeaa1e51d8c61530\",\"symbol\":\"APT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xafbec4d65bc7b116d85107fd05d912491029bf46\",\"symbol\":\"ARB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xAc709FcB44a43c35F0DA4e3163b117A17F3770f5\",\"symbol\":\"ARC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1245ef80f4d9e02ed9425375e8f649b9221b31d8\",\"symbol\":\"ARCT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x75aa7b0d02532f3833b66c7f0ad35376d373ddf8\",\"symbol\":\"ARD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBA5F11b16B155792Cf3B2E6880E8706859A8AEB6\",\"symbol\":\"ARN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xfec0cF7fE078a500abf15F1284958F22049c2C7e\",\"symbol\":\"ART\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7705FaA34B16EB6d77Dfc7812be2367ba6B0248e\",\"symbol\":\"ARX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb0D926c1BC3d78064F3e1075D5bD9A24F35Ae6C5\",\"symbol\":\"ARXT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa5f8fc0921880cb7342368bd128eb8050442b1a1\",\"symbol\":\"ARY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x27054b13b1B798B345b591a4d22e6562d47eA75a\",\"symbol\":\"AST\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x7b22938ca841aa392c93dbb7f4c42178e3d65e88\",\"symbol\":\"ASTRO\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x017b584acfd16d767541ae9e80cdc702f4527b0b\",\"symbol\":\"ASY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x98d0cde5c3d79531613e18f0912127bf172bd7aa\",\"symbol\":\"ATG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1543d0F83489e82A1344DF6827B23d541F235A50\",\"symbol\":\"ATH (AIgatha Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x17052d51E954592C1046320c2371AbaB6C73Ef10\",\"symbol\":\"ATH (Athenian Warrior Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x78B7FADA55A64dD895D8c8c35779DD8b67fA8a05\",\"symbol\":\"ATL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9B11EFcAAA1890f6eE52C6bB7CF8153aC5d74139\",\"symbol\":\"ATM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x97AEB5066E1A590e868b511457BEb6FE99d329F5\",\"symbol\":\"ATMI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2dAEE1AA61D60A252DC80564499A69802853583A\",\"symbol\":\"ATS\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x887834d3b8d450b6bab109c252df3da286d73ce4\",\"symbol\":\"ATT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6339784d9478da43106a429196772a029c2f177d\",\"symbol\":\"ATTN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1a0f2ab46ec630f9fd638029027b552afa64b94c\",\"symbol\":\"ATX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc12d099be31567add4e4e4d0d45691c3f58f5663\",\"symbol\":\"AUC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcdcfc0f66c522fd086a1b725ea3c0eeb9f9e8814\",\"symbol\":\"AURA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x622dFfCc4e83C64ba959530A5a5580687a57581b\",\"symbol\":\"AUTO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeD247980396B10169BB1d36f6e278eD16700a60f\",\"symbol\":\"AVA\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x0d88ed6e74bbfd96b831231638b66c05571e824f\",\"symbol\":\"AVT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcd4b4b0f3284a33ac49c67961ec6e111708318cf\",\"symbol\":\"AX1\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0xC39E626A04C5971D770e319760D7926502975e47\",\"symbol\":\"AXPR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5d51fcced3114a8bb5e90cdd0f9d682bcbcc5393\",\"symbol\":\"B2BX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x062e3be6a7c56a395b1881a0cd69a4923ade4fa2\",\"symbol\":\"BAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x998b3b82bc9dba173990be7afb772788b5acb8bd\",\"symbol\":\"BANCA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf87f0d9153fea549c728ad61cb801595a68b73de\",\"symbol\":\"BANX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc73f2474001ad1d6aed615af53631148cf98de6b\",\"symbol\":\"BAR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2a05d22db079bc40c2f77a1d1ff703a56e631cc1\",\"symbol\":\"BAS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\",\"symbol\":\"BAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9a0242b7a33dacbe40edb927834f96eb39f8fbcb\",\"symbol\":\"BAX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe7D3e4413E29ae35B0893140F4500965c74365e5\",\"symbol\":\"BBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x37d40510a2f5bc98aa7a0f7bf4b3453bcfb90ac1\",\"symbol\":\"BBI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4a6058666cf1057eaC3CD3A5a614620547559fc9\",\"symbol\":\"BBK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x35a69642857083ba2f30bfab735dacc7f0bac969\",\"symbol\":\"BBN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x84f7c44b6fed1080f647e354d552595be2cc602f\",\"symbol\":\"BBO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2ecb13a8c458c379c4d9a7259e202de03c8f3d19\",\"symbol\":\"BC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1f41e42d0a9e3c0dd3ba15b527342783b43200a9\",\"symbol\":\"BCAP\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xb5BB48567BfD0bFE9e4B08EF8b7f91556CC2a112\",\"symbol\":\"BCASH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7367a68039d4704f30bfbf6d948020c3b07dfc59\",\"symbol\":\"BCBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1e797Ce986C3CFF4472F7D38d5C4aba55DfEFE40\",\"symbol\":\"BCDN\",\"decimal\":15,\"type\":\"default\"},{\"address\":\"0xacfa209fb73bf3dd5bbfb1101b9bc999c49062a5\",\"symbol\":\"BCDT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbc1234552EBea32B5121190356bBa6D3Bb225bb5\",\"symbol\":\"BCL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1c4481750daa5Ff521A2a7490d9981eD46465Dbd\",\"symbol\":\"BCPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1014613e2b3cbc4d575054d4982e580d9b99d7b1\",\"symbol\":\"BCV\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1961B3331969eD52770751fC718ef530838b6dEE\",\"symbol\":\"BDG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4D8fc1453a0F359e99c9675954e656D80d996FbF\",\"symbol\":\"BEE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x74C1E4b8caE59269ec1D85D3D4F324396048F4ac\",\"symbol\":\"BeerCoin\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xB91C2a2b953D72f3EF890490669a0A41B0ADD5f7\",\"symbol\":\"BEFX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x6aeb95f06cda84ca345c2de0f3b7f96923a44f4c\",\"symbol\":\"BERRY\",\"decimal\":14,\"type\":\"default\"},{\"address\":\"0x8aA33A7899FCC8eA5fBe6A608A109c3893A1B8b2\",\"symbol\":\"BET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x14C926F2290044B647e1Bf2072e67B495eff1905\",\"symbol\":\"BETHER\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x763186eb8d4856d536ed4478302971214febc6a9\",\"symbol\":\"BETR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3839d8ba312751aa0248fed6a8bacb84308e20ed\",\"symbol\":\"Bez\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xee74110fb5a1007b06282e0de5d73a61bf41d9cd\",\"symbol\":\"BHPC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfe5d908c9ad85f651185daa6a4770726e2b27d09\",\"symbol\":\"BHR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x089b85fa15f72c1088cbbef23a49db80b91dd521\",\"symbol\":\"BIT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x08b4c866aE9D1bE56a06e0C302054B4FFe067b43\",\"symbol\":\"BITCAR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf3d29fb98d2dc5e78c87198deef99377345fd6f1\",\"symbol\":\"BITPARK\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb3104b4b9da82025e8b9f8fb28b3553ce2f67069\",\"symbol\":\"BIX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5c39bc68e58a242a624e4fc96be77a383c52002d\",\"symbol\":\"BKB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb2bfeb70b903f1baac7f2ba2c62934c7e5b974c4\",\"symbol\":\"BKB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xc88Be04c809856B75E3DfE19eB4dCf0a3B15317a\",\"symbol\":\"BKC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xBeE6EDF5fa7e862ed2eA9b9f42cb0849184aAE85\",\"symbol\":\"BKN\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x3cf9e0c385a5abec9fd2a71790aa344c4e8e3570\",\"symbol\":\"BKRx\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x45245bc59219eeaaf6cd3f382e078a461ff9de7b\",\"symbol\":\"BKX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xca29db4221c111888a7e80b12eac8a266da3ee0d\",\"symbol\":\"BLN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1c3bb10de15c31d5dbe48fbb7b87735d1b7d8c32\",\"symbol\":\"BLO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x107c4504cd79C5d2696Ea0030a8dD4e92601B82e\",\"symbol\":\"BLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x539efe69bcdd21a83efd9122571a64cc25e0282b\",\"symbol\":\"BLUE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xce59d29b09aae565feeef8e52f47c3cd5368c663\",\"symbol\":\"BLX (Bullion)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE5a7c12972f3bbFe70ed29521C8949b8Af6a0970\",\"symbol\":\"BLX (Iconomi)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5732046A883704404F284Ce41FfADd5b007FD668\",\"symbol\":\"BLZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdf6ef343350780bf8c3410bf062e0c015b1dd671\",\"symbol\":\"BMC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf028adee51533b1b47beaa890feb54a457f51e89\",\"symbol\":\"BMT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x986EE2B944c42D017F52Af21c4c69B84DBeA35d8\",\"symbol\":\"BMX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb8c77482e45f1f44de1745f52c74426c631bdd52\",\"symbol\":\"BNB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdD6Bf56CA2ada24c683FAC50E37783e55B57AF9F\",\"symbol\":\"BNC\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0xef51c9377feb29856e61625caf9390bd0b67ea18\",\"symbol\":\"BNC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdA2C424Fc98c741c2d4ef2f42897CEfed897CA75\",\"symbol\":\"BNFT\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0xda80b20038bdf968c7307bb5907a469482cf6251\",\"symbol\":\"BNN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xd27d76a1ba55ce5c0291ccd04febbe793d22ebf4\",\"symbol\":\"BNP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C\",\"symbol\":\"BNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd2d6158683aee4cc838067727209a0aaf4359de3\",\"symbol\":\"BNTY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x746DdA2ea243400D5a63e0700F190aB79f06489e\",\"symbol\":\"BOA\",\"decimal\":7,\"type\":\"default\"},{\"address\":\"0xfb6becd99282d7ca14d0890f3e4f073d9dd522e9\",\"symbol\":\"BOA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xDF347911910b6c9A4286bA8E2EE5ea4a39eB2134\",\"symbol\":\"BOB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x27C743954bCe1Bfaef8bcbD685527531001D88D7\",\"symbol\":\"BOK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9f235d23354857efe6c541db92a9ef1877689bcb\",\"symbol\":\"BOLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xCc34366E3842cA1BD36c1f324d15257960fCC801\",\"symbol\":\"BON\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7f1e2c7d6a69bf34824d72c53b4550e895c0d8c2\",\"symbol\":\"BOP\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xC2C63F23ec5E97efbD7565dF9Ec764FDc7d4e91d\",\"symbol\":\"BOU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x139d9397274bb9e2c29a9aa8aa0b5874d30d62e3\",\"symbol\":\"BOUTS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x63f584fa56e60e4d0fe8802b27c7e6e3b33e007f\",\"symbol\":\"BOX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe1A178B681BD05964d3e3Ed33AE731577d9d96dD\",\"symbol\":\"BOX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x780116d91e5592e58a3b3c76a351571b39abcec6\",\"symbol\":\"BOXX\",\"decimal\":15,\"type\":\"default\"},{\"address\":\"0x327682779bAB2BF4d1337e8974ab9dE8275A7Ca8\",\"symbol\":\"BPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9E77D5a1251b6F7D456722A6eaC6D2d5980bd891\",\"symbol\":\"BRAT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x558ec3152e2eb2174905cd19aea4e34a23de9ad6\",\"symbol\":\"BRD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB22c2786a549B008517B67625f5296E8fAf9589e\",\"symbol\":\"BRP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf26ef5e0545384b7dcc0f297f2674189586830df\",\"symbol\":\"BSDC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x509A38b7a1cC0dcd83Aa9d06214663D9eC7c7F4a\",\"symbol\":\"BST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x02725836ebf3ecdb1cdf1c7b02fcbbfaa2736af8\",\"symbol\":\"BTCA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0886949c1b8C412860c4264Ceb8083d1365e86CF\",\"symbol\":\"BTCE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5acD19b9c91e596b1f062f18e3D02da7eD8D1e50\",\"symbol\":\"BTCL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x87f5e8c3425218837f3cb67db941af0c01323e56\",\"symbol\":\"BTCONE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6aac8cb9861e42bf8259f5abdc6ae3ae89909e11\",\"symbol\":\"BTCR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x73dd069c299a5d691e9836243bcaec9c8c1d8734\",\"symbol\":\"BTE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xfad572db566e5234ac9fc3d570c4edc0050eaa92\",\"symbol\":\"BTH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdb8646f5b487b5dd979fac618350e85018f557d4\",\"symbol\":\"BTK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2accaB9cb7a48c3E82286F0b2f8798D201F4eC3f\",\"symbol\":\"BTL (Battle)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x92685E93956537c25Bb75D5d47fca4266dd628B8\",\"symbol\":\"BTL (Bitlle)\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xcb97e65f07da24d46bcdd078ebebd7c6e6e3d750\",\"symbol\":\"BTM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xd6b107d3e45b959b6d13faf1bb2a2cf8fc7025e6\",\"symbol\":\"BTNG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x36905fc93280f52362a1cbab151f25dc46742fb5\",\"symbol\":\"BTO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x20900587e569e3d0b2609bca6fb3469765ed0920\",\"symbol\":\"BTP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x16B0E62aC13a2fAeD36D18bce2356d25Ab3CfAD3\",\"symbol\":\"BTQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcbf15FB8246F679F9Df0135881CB29a3746f734b\",\"symbol\":\"BTR (Bitether Platform)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x499a6b77bc25c26bcf8265e2102b1b3dd1617024\",\"symbol\":\"BTR (Bitether)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x03c780cd554598592b97b7256ddaad759945b125\",\"symbol\":\"BTRN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x080aa07e2c7185150d7e4da98838a8d2feac3dfc\",\"symbol\":\"BTT (Bitether)\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xFA456Cf55250A839088b27EE32A424d7DAcB54Ff\",\"symbol\":\"BTT (Blocktrade)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb683D83a532e2Cb7DFa5275eED3698436371cc9f\",\"symbol\":\"BTU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9eecec130fb665d03a37289ee34c818ee7f79926\",\"symbol\":\"BTY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE5f867dE1EA81346df5181b8b48DD6B0BB3357B0\",\"symbol\":\"BTZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xca3c18a65b802ec267f8f4802545e7f53d24c75e\",\"symbol\":\"BUC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x51a4f65463597ca4609c9a90ea3d5ab219fbc85d\",\"symbol\":\"BWN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbd168cbf9d3a375b38dc51a202b5e8a4e52069ed\",\"symbol\":\"BWX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4375e7ad8a01b8ec3ed041399f62d9cd120e0063\",\"symbol\":\"BZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe1aee98495365fc179699c1bb3e761fa716bee62\",\"symbol\":\"BZNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x26E75307Fc0C021472fEb8F727839531F112f317\",\"symbol\":\"C20\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd42debE4eDc92Bd5a3FBb4243e1ecCf6d63A4A5d\",\"symbol\":\"C8\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7d4b8Cce0591C9044a22ee543533b72E976E36C3\",\"symbol\":\"CAG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1d462414fe14cf489c7A21CaC78509f4bF8CD7c0\",\"symbol\":\"CAN\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x04f2e7221fdb1b52a68169b25793e51478ff0329\",\"symbol\":\"CAPP\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x423e4322cdda29156b49a17dfbd2acc4b280600d\",\"symbol\":\"CAR\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x4d9e23a3842fe7eb7682b9725cf6c507c424a41b\",\"symbol\":\"CAR (Carblock)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa517a46baad6b054a76bd19c46844f717fe69fea\",\"symbol\":\"CARB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x954b890704693af242613edef1b603825afcd708\",\"symbol\":\"CARD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbf18f246b9301f231e9561b35a3879769bb46375\",\"symbol\":\"CARE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x779492d3644dDF4495Aa2d80C468E1B7be6AF1d2\",\"symbol\":\"CAS (CAS Coin)\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xe8780B48bdb05F928697A5e8155f672ED91462F7\",\"symbol\":\"CAS (Cashaa)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1234567461d3f8db7496581774bd869c83d51c93\",\"symbol\":\"CAT (BitClave)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x56ba2Ee7890461f463F7be02aAC3099f6d5811A8\",\"symbol\":\"CAT (Blockcat)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8293bbd92c42608b20af588620a76128a33e4de9\",\"symbol\":\"CATS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x68e14bb5A45B9681327E16E528084B9d962C1a39\",\"symbol\":\"CATs (BitClave)_Old\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x26db5439f651caf491a87d48799da81f191bdb6b\",\"symbol\":\"CBC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x95efd1fe6099f65a7ed524def487483221094947\",\"symbol\":\"CBM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x076C97e1c869072eE22f8c91978C99B4bcB02591\",\"symbol\":\"CBT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc166038705FFBAb3794185b3a9D925632A1DF37D\",\"symbol\":\"CC3\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x28577A6d31559bd265Ce3ADB62d0458550F7b8a7\",\"symbol\":\"CCC (CryptoCrashCourse)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbe11eeb186e624b8f26a5045575a1340e4054552\",\"symbol\":\"CCC (ICONOMI)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x378903a03fb2c3ac76bb52773e3ce11340377a32\",\"symbol\":\"CCCX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd348e07a2806505b856123045d27aeed90924b50\",\"symbol\":\"CCLC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x679badc551626e01b23ceecefbc9b877ea18fc46\",\"symbol\":\"CCO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x315ce59fafd3a8d562b7ec1c8542382d2710b06c\",\"symbol\":\"CCS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x336f646f87d9f6bc6ed42dd46e8b3fd9dbd15c22\",\"symbol\":\"CCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8a95ca448A52C0ADf0054bB3402dC5e09CD6B232\",\"symbol\":\"CDL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x177d39AC676ED1C67A2b268AD7F1E58826E5B0af\",\"symbol\":\"CDT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2cb101d7da0ebaa57d3f2fef46d7ffb7bb64592b\",\"symbol\":\"CDX (Carbon Dollar X)\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x6fFF3806Bbac52A20e0d79BC538d527f6a22c96b\",\"symbol\":\"CDX (Network)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb056c38f6b7dc4064367403e26424cd2c60655e1\",\"symbol\":\"CEEK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0bC61DdED5F6710c637cf8288Eb6058766ce1921\",\"symbol\":\"CEN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1122b6a0e00dce0563082b6e2953f3a943855c1f\",\"symbol\":\"CENNZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf660ca1e228e7be1fa8b4f5583145e31147fb577\",\"symbol\":\"CET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5dff89a2caa4d76bc286f74d67bd718eb834da61\",\"symbol\":\"CFC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x12FEF5e57bF45873Cd9B62E9DBd7BFb99e32D73e\",\"symbol\":\"CFI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6956983f8b3ce173b4ab84361aa0ad52f38d936f\",\"symbol\":\"CFTY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf3db7560e820834658b590c96234c333cd3d5e5e\",\"symbol\":\"CHP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xba9d4199fab4f26efe3551d490e3821486f135ba\",\"symbol\":\"CHSB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1460a58096d80a50a2f1f956dda497611fa4f165\",\"symbol\":\"CHX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3abdff32f76b42e7635bdb7e425f0231a5f3ab17\",\"symbol\":\"CJT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x06012c8cf97bead5deae237070f9587f8e7a266d\",\"symbol\":\"CK\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xe81d72d14b1516e68ac3190a46c93302cc8ed60f\",\"symbol\":\"CL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb1c1cb8c7c1992dba24e628bf7d38e71dad46aeb\",\"symbol\":\"CLB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3dc9a42fa7afe57be03c58fd7f4411b1e466c508\",\"symbol\":\"CLL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4162178B78D6985480A308B2190EE5517460406D\",\"symbol\":\"CLN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7fce2856899a6806eeef70807985fc7554c66340\",\"symbol\":\"CLP\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x3edd235c3e840c1f29286b2e39370a255c7b6fdb\",\"symbol\":\"CMBT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7e667525521cF61352e2E01b50FaaaE7Df39749a\",\"symbol\":\"CMC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x47bc01597798dcd7506dcca36ac4302fc93a8cfb\",\"symbol\":\"CMCT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf85fEea2FdD81d51177F6b8F35F0e6734Ce45F5F\",\"symbol\":\"CMT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEBf2F9E8De960f64ec0fDCDa6Cb282423133347B\",\"symbol\":\"CNB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xd4c435f5b09f855c3317c8524cb1f586e42795fa\",\"symbol\":\"CND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8713d26637cf49e1b6b4a7ce57106aabc9325343\",\"symbol\":\"CNN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB4b1D2C217EC0776584CE08D3DD98F90EDedA44b\",\"symbol\":\"CO2\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x574b36bced443338875d171cc377e691f7d4f887\",\"symbol\":\"CO2Bit\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb2f7eb1f2c37645be61d73953035360e768d81e6\",\"symbol\":\"COB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x933dfc5622792b41245ab8313416caf0ba885ae7\",\"symbol\":\"COBR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3136eF851592aCf49CA4C825131E364170FA32b3\",\"symbol\":\"COFI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0c91b015aba6f7b4738dcd36e7410138b29adc29\",\"symbol\":\"COIL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xeb547ed1d8a3ff1461abaa7f0022fed4836e00a4\",\"symbol\":\"COIN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc4bcd64cb216d49fd3c643a32762f34626b45a1a\",\"symbol\":\"COSM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x65292eeadf1426cd2df1c4793a3d7519f253913b\",\"symbol\":\"COSS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9e96604445ec19ffed9a5e8dd7b50a29c899a10c\",\"symbol\":\"COSS (coss.io)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE2FB6529EF566a080e6d23dE0bd351311087D567\",\"symbol\":\"COV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x31910aff5545784755970ae1fbe7fe65d5f0eea2\",\"symbol\":\"CPAL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0Ebb614204E47c09B6C3FeB9AAeCad8EE060E23E\",\"symbol\":\"CPAY\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xfAE4Ee59CDd86e3Be9e8b90b53AA866327D7c090\",\"symbol\":\"CPC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb787d4eac8899730bb8c57fc3c998c49c5244ec0\",\"symbol\":\"CPEX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7064aAb39A0Fcf7221c3396719D0917a65E35515\",\"symbol\":\"CPOLLO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9B62513c8a27290CF6A7A9e29386e600245EA819\",\"symbol\":\"CPT (Contents Protocol Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x88d50b466be55222019d71f9e8fae17f5f45fca1\",\"symbol\":\"CPT (Cryptaur)\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf44745fbd41f6a1ba151df190db0564c5fcc4410\",\"symbol\":\"CPY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0d9a10a0466b7e9ad693e24993f5105bfdb240e3\",\"symbol\":\"CR1\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7f585b9130c64e9e9f470b618a7badd03d79ca7e\",\"symbol\":\"CR7\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xAef38fBFBF932D1AeF3B808Bc8fBd8Cd8E1f8BC5\",\"symbol\":\"CRB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x2cf618c19041d9db330d8222b860a624021f30fb\",\"symbol\":\"CRBT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf41e5fbc2f6aac200dd8619e121ce1f05d150077\",\"symbol\":\"CRC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x672a1AD4f667FB18A333Af13667aa0Af1F5b5bDD\",\"symbol\":\"CRED\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4e0603e2a27a30480e5e3a4fe548e29ef12f64be\",\"symbol\":\"CREDO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf49cdd50ad408d387d611f88a647179c3de3492b\",\"symbol\":\"CRGO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9238bfb781a55eacc3cf05f7df94038c198cd9b9\",\"symbol\":\"CRMT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x80a7e048f37a50500351c204cb407766fa3bae7f\",\"symbol\":\"CRPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xF0da1186a4977226b9135d0613ee72e229EC3F4d\",\"symbol\":\"CRT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE4c94d45f7Aef7018a5D66f44aF780ec6023378e\",\"symbol\":\"CryptoCarbon\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x46b9ad944d1059450da1163511069c718f699d31\",\"symbol\":\"CS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x29d75277ac7f0335b2165d0895e8725cbf658d73\",\"symbol\":\"CSNO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xbb49a51ee5a66ca3a8cbe529379ba44ba67e6771\",\"symbol\":\"CST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4545750F39aF6Be4F237B6869D4EccA928Fd5A85\",\"symbol\":\"CTF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc87c5dd86a3d567ff28701886fb0745aaa898da4\",\"symbol\":\"CTG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9e7d29bd499b6c7da2a5b2eafcf4a39d3bd845d1\",\"symbol\":\"CTGC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbf4cfd7d1edeeea5f6600827411b41a21eb08abd\",\"symbol\":\"CTL\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x96A65609a7B84E8842732DEB08f56C3E21aC6f8a\",\"symbol\":\"CTR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE3Fa177AcecfB86721Cf6f9f4206bd3Bd672D7d5\",\"symbol\":\"CTT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1a4743cf1af4c289351390a2b3fe7c13d2f7c235\",\"symbol\":\"CTT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x662aBcAd0b7f345AB7FfB1b1fbb9Df7894f18e66\",\"symbol\":\"CTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xea11755ae41d889ceec39a63e6ff75a02bc1c00d\",\"symbol\":\"CTXC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x05c3617cbf1304b9260aa61ec960f115d67becea\",\"symbol\":\"Cubrix\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x490dbf7884b8e13c2161448b83dd2d8909db48ed\",\"symbol\":\"CUR8\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1dabf6ab0eb8e4208e7e9302cec7a014068952e4\",\"symbol\":\"CURE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdA6cb58A0D0C01610a29c5A65c303e13e885887C\",\"symbol\":\"cV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x41e5560054824ea6b0732e656e3ad64e20e94e45\",\"symbol\":\"CVC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdb56448fe2635f7912287cd619e7ed3d93180f25\",\"symbol\":\"CVS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbe428c3867f05dea2a89fc76a102b544eac7f772\",\"symbol\":\"CVT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2134057c0b461f898d375cead652acae62b59541\",\"symbol\":\"CXC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb6EE9668771a79be7967ee29a63D4184F8097143\",\"symbol\":\"CXO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfe831929098b5ff5d736105bd68ba9460ef07207\",\"symbol\":\"CYCLE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3f06B5D78406cD97bdf10f5C420B241D32759c80\",\"symbol\":\"CYFM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x78c292d1445e6b9558bf42e8bc369271ded062ea\",\"symbol\":\"CYMT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0223fc70574214f65813fe336d870ac47e147fae\",\"symbol\":\"CZR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdab0C31BF34C897Fb0Fe90D12EC9401caf5c36Ec\",\"symbol\":\"DAB\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xa31108e5bab5494560db34c95492658af239357c\",\"symbol\":\"DACS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfb2f26f266fb2805a387230f2aa0a331b4d96fba\",\"symbol\":\"DADI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359\",\"symbol\":\"DAI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x07d9e49ea402194bf48a8276dafb16e4ed633317\",\"symbol\":\"DALC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9B70740e708a083C6fF38Df52297020f5DfAa5EE\",\"symbol\":\"DAN\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413\",\"symbol\":\"DAO\",\"decimal\":16,\"type\":\"default\"},{\"address\":\"0x81c9151de0c8bafcd325a57e3db5a5df1cebf79c\",\"symbol\":\"DAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1b5f21ee98eed48d292e8e2d3ed82b40a9728a22\",\"symbol\":\"DATABroker\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0cf0ee63788a0849fe5297f3407f701e122cc023\",\"symbol\":\"DATACoin\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xabbbb6447b68ffd6141da77c18c7b5876ed6c5ab\",\"symbol\":\"DATx\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd82Df0ABD3f51425Eb15ef7580fDA55727875f14\",\"symbol\":\"DAV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0b4bdc478791897274652dc15ef5c135cae61e60\",\"symbol\":\"DAX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x61725f3db4004afe014745b21dab1e1677cc328b\",\"symbol\":\"DAXT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9b68bfae21df5a510931a262cecf63f41338f264\",\"symbol\":\"DBET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x386Faa4703a34a7Fdb19Bec2e14Fd427C9638416\",\"symbol\":\"DCA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xffa93aacf49297d51e211817452839052fdfb961\",\"symbol\":\"DCC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x399A0e6FbEb3d74c85357439f4c8AeD9678a5cbF\",\"symbol\":\"DCL\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x08d32b0da63e2C3bcF8019c9c5d849d7a9d791e6\",\"symbol\":\"DCN\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xcC4eF9EEAF656aC1a2Ab886743E98e97E090ed38\",\"symbol\":\"DDF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x151202C9c18e495656f372281F493EB7698961D5\",\"symbol\":\"DEB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xde1e0ae6101b46520cf66fdc0b1059c5cc3d106c\",\"symbol\":\"DELTA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3597bfd533a99c9aa083587b074434e61eb0a258\",\"symbol\":\"DENT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7cF271966F36343Bf0150F25E5364f7961c58201\",\"symbol\":\"DEPO\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x89cbeac5e8a13f0ebb4c74fadfc69be81a501106\",\"symbol\":\"DEPO (Depository Network)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdd94De9cFE063577051A5eb7465D08317d8808B6\",\"symbol\":\"Devcon2 Token\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x20e94867794dba030ee287f1406e100d03c84cd3\",\"symbol\":\"DEW\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x497bAEF294c11a5f0f5Bea3f2AdB3073DB448B56\",\"symbol\":\"DEX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0\",\"symbol\":\"DF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A\",\"symbol\":\"DGD\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0xf6cFe53d6FEbaEEA051f400ff5fc14F0cBBDacA1\",\"symbol\":\"DGPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6aEDbF8dFF31437220dF351950Ba2a3362168d1b\",\"symbol\":\"DGS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1c83501478f1320977047008496dacbd60bb15ef\",\"symbol\":\"DGTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4f3afec4e5a3f2a6a1a411def7d7dfe50ee057bf\",\"symbol\":\"DGX\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x55b9a11c2e8351b4Ffc7b11561148bfaC9977855\",\"symbol\":\"DGX1\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x2e071D2966Aa7D8dECB1005885bA1977D6038A65\",\"symbol\":\"DICE\",\"decimal\":16,\"type\":\"default\"},{\"address\":\"0xc719d010B63E5bbF2C0551872CD5316ED26AcD83\",\"symbol\":\"DIP (Decentralized Insurance Protocol)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf14922001a2fb8541a433905437ae954419c2439\",\"symbol\":\"DIT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x13f11C9905A08ca76e3e853bE63D4f0944326C72\",\"symbol\":\"DIVX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x07e3c70653548b04f0a75970c1f81b4cbbfb606f\",\"symbol\":\"DLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2ccbFF3A042c68716Ed2a2Cb0c544A9f1d1935E1\",\"symbol\":\"DMT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x82b0e50478eeafde392d45d1259ed1071b6fda81\",\"symbol\":\"DNA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0abdace70d3790235af448c88547603b945604ea\",\"symbol\":\"DNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE43E2041dc3786e166961eD9484a5539033d10fB\",\"symbol\":\"DNX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe5dada80aa6477e85d09747f2842f7993d0df71c\",\"symbol\":\"DOCK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x906b3f8b7845840188eab53c3f5ad348a787752f\",\"symbol\":\"DOR\",\"decimal\":15,\"type\":\"default\"},{\"address\":\"0xac3211a5025414af2866ff09c23fc18bc97e79b1\",\"symbol\":\"DOV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x76974c7b79dc8a6a109fd71fd7ceb9e40eff5382\",\"symbol\":\"DOW\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x01b3Ec4aAe1B8729529BEB4965F27d008788B0EB\",\"symbol\":\"DPP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc2e3ed7f61d338755bf7b6fb4baa0fffada4ac28\",\"symbol\":\"DRC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x82f4ded9cec9b5750fbff5c2185aee35afc16587\",\"symbol\":\"DREAM\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x419c4db4b9e25d6db2ad9691ccb832c8d9fda05e\",\"symbol\":\"DRGN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4672bad527107471cb5067a887f4656d585a8a31\",\"symbol\":\"DROP (dropil)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3c75226555FC496168d48B88DF83B95F16771F37\",\"symbol\":\"DROP (droplex)\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x621d78f2ef2fd937bfca696cabaf9a779f59b3ed\",\"symbol\":\"DRP\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x2799d90c6d44cb9aa5fbc377177f16c33e056b82\",\"symbol\":\"DRP (Dripcoin)\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xe30e02f049957e2a5907589e06ba646fb2c321ba\",\"symbol\":\"DRPU\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9af4f26941677c706cfecf6d3379ff01bb85d5ab\",\"symbol\":\"DRT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x62d4c04644314f35868ba4c65cc27a77681de7a9\",\"symbol\":\"DRVH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x03e3f0c25965f13DbbC58246738C183E27b26a56\",\"symbol\":\"DSCP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x68d53441c0e253f76c500e551bdeA3D102206C9a\",\"symbol\":\"DST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5adc961D6AC3f7062D2eA45FEFB8D8167d44b190\",\"symbol\":\"DTH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd234bf2410a0009df9c3c63b610c09738f18ccd7\",\"symbol\":\"DTR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xc20464e0c373486d2b3335576e83a218b1618a5e\",\"symbol\":\"DTRC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf9F7c29CFdf19FCf1f2AA6B84aA367Bcf1bD1676\",\"symbol\":\"DTT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x765f0c16d1ddc279295c1a7c24b0883f62d33f75\",\"symbol\":\"DTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x82fdedfB7635441aA5A92791D001fA7388da8025\",\"symbol\":\"DTx\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEd7fEA78C393cF7B17B152A8c2D0CD97aC31790B\",\"symbol\":\"DUBI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8db54ca569d3019a2ba126d03c37c44b5ef81ef6\",\"symbol\":\"DXT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xce5c603c78d047ef43032e96b5b785324f753a4f\",\"symbol\":\"E4ROW\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x994f0dffdbae0bbf09b652d6f11a493fd33f42b9\",\"symbol\":\"EAGLE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x900b4449236a7bb26b286601dd14d2bde7a6ac6c\",\"symbol\":\"EARTH\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x31f3d9d1bece0c033ff78fa6da60a6048f3e13c5\",\"symbol\":\"EBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xafc39788c51f0c1ff7b55317f3e70299e521fff6\",\"symbol\":\"eBCH\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xeb7c20027172e5d143fb030d50f91cece2d1485d\",\"symbol\":\"eBTC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xa578acc0cb7875781b7880903f4594d13cfa8b98\",\"symbol\":\"ECN\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x17F93475d2A978f527c3f7c44aBf44AdfBa60D5C\",\"symbol\":\"ECO2\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x171d750d42d661b62c277a6b486adb82348c3eca\",\"symbol\":\"ECOM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8869b1f9bc8b246a4d7220f834e56ddfdd8255e7\",\"symbol\":\"ECP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfa1de2ee97e4c10c94c91cb2b5062b89fb140b82\",\"symbol\":\"EDC\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x08711D3B02C8758F2FB3ab4e80228418a7F8e39c\",\"symbol\":\"EDG\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xced4e93198734ddaff8492d525bd258d49eb388e\",\"symbol\":\"EDO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc528c28FEC0A90C083328BC45f587eE215760A0F\",\"symbol\":\"EDR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2a22e5cca00a3d63308fa39f29202eb1b39eef52\",\"symbol\":\"EDU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbf8d8f1242b95dfbae532af6b0f4463905415cc1\",\"symbol\":\"EDX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb53a96bcbdd9cf78dff20bab6c2be7baec8f00f8\",\"symbol\":\"eGAS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x999aa6488f076e6765448f090aba83fbb470fc99\",\"symbol\":\"EGG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8e1b448EC7aDFc7Fa35FC2e885678bD323176E34\",\"symbol\":\"EGT (Egretia)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5dbac24e98e2a4f43adc0dc82af403fca063ce2c\",\"symbol\":\"EGT (Engagement Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa19bbef64eff0d060a653e4df10a57b6d8006d3e\",\"symbol\":\"EGX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf9F0FC7167c311Dd2F1e21E9204F87EBA9012fB2\",\"symbol\":\"EHT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xa6a840e50bcaa50da017b91a0d86b8b2d41156ee\",\"symbol\":\"EKO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbab165df9455aa0f2aed1f2565520b91ddadb4c8\",\"symbol\":\"EKT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xd49ff13661451313ca1553fd6954bd1d9b6e02b9\",\"symbol\":\"ELEC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbf2179859fc6d5bee9bf9158632dc51678a4100e\",\"symbol\":\"ELF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc8C6A31A4A806d3710A7B38b7B296D2fABCCDBA8\",\"symbol\":\"ELIX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x44197a4c44d6a059297caf6be4f7e172bd56caaf\",\"symbol\":\"ELTCOIN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xa95592DCFfA3C080B4B40E459c5f5692F67DB7F8\",\"symbol\":\"ELY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x28b94f58b11ac945341329dbf2e5ef7f8bd44225\",\"symbol\":\"EMB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb67b88a25708a35ae7c2d736d398d268ce4f7f83\",\"symbol\":\"EMON\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x95daaab98046846bf4b2853e23cba236fa394a31\",\"symbol\":\"EMONT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9501BFc48897DCEEadf73113EF635d2fF7ee4B97\",\"symbol\":\"EMT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB802b24E0637c2B87D2E8b7784C055BBE921011a\",\"symbol\":\"EMV\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x039f5050de4908f9b5ddf40a4f3aa3f329086387\",\"symbol\":\"ENC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf0ee6b27b759c9893ce4f094b49ad28fd15a23e4\",\"symbol\":\"ENG\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c\",\"symbol\":\"ENJ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5BC7e5f0Ab8b2E10D2D0a3F21739FCe62459aeF3\",\"symbol\":\"ENTRP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x86fa049857e0209aa7d9e616f7eb3b3b78ecfdb0\",\"symbol\":\"EOS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7e9e431a0b8c4d532c745b1043c7fa29a48d4fba\",\"symbol\":\"eosDAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x875089a734213ca39f0d93c2bbb8209827ec5e9f\",\"symbol\":\"EPH\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x35BAA72038F127f9f8C8f9B491049f64f377914d\",\"symbol\":\"EPX\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x50ee674689d75c0f88e8f83cfe8c4b69e8fd590d\",\"symbol\":\"EPY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x47dd62d4d075dead71d0e00299fc56a2d747bebb\",\"symbol\":\"EQL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x74ceda77281b339142a36817fa5f9e29412bab85\",\"symbol\":\"ERO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x92A5B04D0ED5D94D7a193d1d334D3D16996f4E13\",\"symbol\":\"ERT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x369760ebf89d577a734d927a9599c1921397a152\",\"symbol\":\"ESB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe8a1df958be379045e2b46a31a98b93a2ecdfded\",\"symbol\":\"ESZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1b9743f556d65e757c4c650b4555baf354cb8bd3\",\"symbol\":\"ETBS\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0xdd74a7a3769fa72561b3a69e65968f49748c690c\",\"symbol\":\"ETCH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x28c8d01ff633ea9cd8fc6a451d7457889e698de6\",\"symbol\":\"ETG\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x3a26746Ddb79B1B8e4450e3F4FFE3285A307387E\",\"symbol\":\"ETHB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdbfb423e9bbf16294388e07696a5120e4ceba0c5\",\"symbol\":\"ETHD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5Af2Be193a6ABCa9c8817001F45744777Db30756\",\"symbol\":\"ETHOS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe52e75e8a97546f40991b489e92c68ebb386dc97\",\"symbol\":\"ETHPAY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3c4a3ffd813a107febd57b2f01bc344264d90fde\",\"symbol\":\"ETK\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x6927C69fb4daf2043fbB1Cb7b86c5661416bea29\",\"symbol\":\"ETR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd99298985902C9A69bf4C8a0895fA10721204ECC\",\"symbol\":\"EUCX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdb25f211ab05b1c97d595516f45794528a807ad8\",\"symbol\":\"EURS\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xabdf147870235fcfc34153828c769a70b3fae01f\",\"symbol\":\"EURT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xb62d18dea74045e822352ce4b3ee77319dc5ff2f\",\"symbol\":\"EVC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x923108a439C4e8C2315c4f6521E5cE95B44e9B4c\",\"symbol\":\"EVE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5aaefe84e0fb3dd1f0fcff6fa7468124986b91bd\",\"symbol\":\"EVED\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa26c4caaaea8b88ef49bf8c380488f66c2d807ae\",\"symbol\":\"EVF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x68909e586eeac8f47315e84b4c9788dd54ef65bb\",\"symbol\":\"EVN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd780Ae2Bf04cD96E577D3D014762f831d97129d0\",\"symbol\":\"EVN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x442d985efebc633b8bfd14ff99e860a5609a6484\",\"symbol\":\"EVO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8\",\"symbol\":\"EVX\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x444997b7e7fC830E20089afea3078cd518fCF2A2\",\"symbol\":\"EWO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9e4c143bfe35f855624b3f84465ab7401a17a120\",\"symbol\":\"EXC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x00c4b398500645eb5da00a1a379a88b11683ba01\",\"symbol\":\"EXC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc98e0639c6d2ec037a615341c369666b110e80e5\",\"symbol\":\"EXMR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe469c4473af82217b30cf17b10bcdb6c8c796e75\",\"symbol\":\"EXRN\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xe06af951086ec3c488b50e31be29c07f8a260ca3\",\"symbol\":\"EXU\",\"decimal\":16,\"type\":\"default\"},{\"address\":\"0x5c743a35e903f6c584514ec617acee0611cf44f3\",\"symbol\":\"EXY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5e6016ae7d7c49d347dcf834860b9f3ee282812b\",\"symbol\":\"EZT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb67734521eAbBE9C773729dB73E16CC2dfb20A58\",\"symbol\":\"E₹\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x1ccaa0f2a7210d76e1fdec740d5f323e2e1b1672\",\"symbol\":\"FACE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x190e569bE071F40c704e15825F285481CB74B6cC\",\"symbol\":\"FAM\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0x90162f41886c0946d09999736f1c15c8a105a421\",\"symbol\":\"FAN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7dcb3b2356c822d3577d4d060d0d5d78c860488c\",\"symbol\":\"FANX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7cf6dc769482abee2ff75795d000f381a8062dec\",\"symbol\":\"FAR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x41f723448433367be140d528d35efecd3e023db6\",\"symbol\":\"FARM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x23352036e911a22cfc692b5e2e196692658aded9\",\"symbol\":\"FDZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4e594479fa417a1e9c5790a413575802d393010f\",\"symbol\":\"FER\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xd9a8cfe21c232d485065cb62a96866799d4645f7\",\"symbol\":\"FGP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x52fb36c83ad33c1824912fc81071ca5eeb8ab390\",\"symbol\":\"FID\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdfc3e857c8ccea7657e0ed98ab92e048e38dee0f\",\"symbol\":\"FIH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x009e864923b49263c7F10D19B7f8Ab7a9A5AAd33\",\"symbol\":\"FKX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf04a8ac553FceDB5BA99A64799155826C136b0Be\",\"symbol\":\"FLIXX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x04cC783b450b8D11F3C7d00DD03fDF7FB51fE9F2\",\"symbol\":\"FLMC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x049399a6b048d52971f7d122ae21a1532722285f\",\"symbol\":\"FLOT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3a1Bda28AdB5B0a812a7CF10A1950c920F79BcD3\",\"symbol\":\"FLP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9aeFBE0b3C3ba9Eab262CB9856E8157AB7648e09\",\"symbol\":\"FLR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x954b5de09a55e59755acbda29e1eb74a45d30175\",\"symbol\":\"FLUZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x70b147e01e9285e7ce68b9ba437fe3a9190e756a\",\"symbol\":\"FLX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb4d0fdfc8497aef97d3c2892ae682ee06064a2bc\",\"symbol\":\"FMF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4df47b4969b2911c966506e3592c41389493953b\",\"symbol\":\"FND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0707681f344deb24184037fc0228856f2137b02e\",\"symbol\":\"FNKOS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbd4b60a138b3fce3584ea01f50c0908c18f9677a\",\"symbol\":\"FNTB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4946fcea7c692606e8908002e55a582af44ac121\",\"symbol\":\"FOAM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2a093BcF0C98Ef744Bb6F69D74f2F85605324290\",\"symbol\":\"FOOD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5bB1632fA0023e1AA76a1AE92B4635C8DBa49Fa2\",\"symbol\":\"FORK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4270bb238f6dd8b1c3ca01f96ca65b2647c06d3c\",\"symbol\":\"FOTA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0ABeFb7611Cb3A01EA3FaD85f33C3C934F8e2cF4\",\"symbol\":\"FRD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x17e67d1cb4e349b9ca4bc3e17c7df2a397a7bb64\",\"symbol\":\"FREC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd8B8E1Eca89dA014E67fDbc2014eaA8E171079bF\",\"symbol\":\"FRECNX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x48df4e0296f908ceab0428a5182d19b31fc037d6\",\"symbol\":\"FRV\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x36a73557f5bde5195ec39eca82d28b8a36d21141\",\"symbol\":\"FRX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd0352a019e9ab9d757776f532377aaebd36fd541\",\"symbol\":\"FSN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x78a73B6CBc5D183CE56e786f6e905CaDEC63547B\",\"symbol\":\"FT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x26ac29dc25806199373cb4884aa9e077a0587c5b\",\"symbol\":\"ftc\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe6f74dcfa0e20883008d8c16b6d9a329189d0c30\",\"symbol\":\"FTC\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x943ed852dadb5c3938ecdc6883718df8142de4c8\",\"symbol\":\"FTI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2023DCf7c438c8C8C0B0F28dBaE15520B4f3Ee20\",\"symbol\":\"FTR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2AEC18c5500f21359CE1BEA5Dc1777344dF4C0Dc\",\"symbol\":\"FTT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd559f20296ff4895da39b5bd9add54b442596a61\",\"symbol\":\"FTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x41875c2332b0877cdfaa699b641402b7d4642c32\",\"symbol\":\"FTXT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x65be44c747988fbf606207698c944df4442efe19\",\"symbol\":\"FUCK\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xEA38eAa3C86c8F9B751533Ba2E562deb9acDED40\",\"symbol\":\"FUEL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x419D0d8BdD9aF5e606Ae2232ed285Aff190E711b\",\"symbol\":\"FUN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4a57e687b9126435a9b19e4a802113e266adebde\",\"symbol\":\"FXC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1829aa045e21e0d59580024a951db48096e01782\",\"symbol\":\"FXT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x88FCFBc22C6d3dBaa25aF478C578978339BDe77a\",\"symbol\":\"FYN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8f0921f30555624143d427b340b1156914882c10\",\"symbol\":\"FYP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE5aeE163513119F4F750376C718766B40fA37A5F\",\"symbol\":\"Fzcoin\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa3EE21C306A700E682AbCdfe9BaA6A08F3820419\",\"symbol\":\"G-CRE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf67451dc8421f0e0afeb52faa8101034ed081ed9\",\"symbol\":\"GAM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xc0EA6306F6360FE7dCAB65D16Bf1a3AF92C79Aa2\",\"symbol\":\"GANA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x687174f8c49ceb7729d925c3a961507ea4ac7b28\",\"symbol\":\"GAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x708876f486e448ee89eb332bfbc8e593553058b9\",\"symbol\":\"GAVEL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcc2a74b28e786fac86be3ca354b1941c25ab3eab\",\"symbol\":\"GBO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7585F835ae2d522722d2684323a0ba83401f32f5\",\"symbol\":\"GBT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x12fCd6463E66974cF7bBC24FFC4d40d6bE458283\",\"symbol\":\"GBX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x8eb38715604b938812dec25a0a1bc05b4becb9ca\",\"symbol\":\"GC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1778fffbd431be2ac3d69e64d1d819c786b2bee0\",\"symbol\":\"GCG\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdb0F69306FF8F949f258E83f6b87ee5D052d0b23\",\"symbol\":\"GCP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa4ec83c8907888d006a37debf755ee39766f38ae\",\"symbol\":\"GCU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4F4f0Db4de903B88f2B1a2847971E231D54F8fd3\",\"symbol\":\"GEE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x24083bb30072643c3bb90b44b7285860a755e687\",\"symbol\":\"GELD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc7bba5b765581efb2cdd2679db5bea9ee79b201f\",\"symbol\":\"GEM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x543Ff227F64Aa17eA132Bf9886cAb5DB55DCAddf\",\"symbol\":\"GEN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8a854288a5976036a725879164ca3e91d30c6a1b\",\"symbol\":\"GET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3930e4ddb4d24ef2f4cb54c1f009a3694b708428\",\"symbol\":\"GFN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7F969C4D388Ca0AE39A4FdDB1A6f89878CA2fBf8\",\"symbol\":\"GGC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xFcD862985628b254061F7A918035B80340D045d3\",\"symbol\":\"GIF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaE4f56F072c34C0a65B3ae3E4DB797D831439D93\",\"symbol\":\"GIM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9aa7d119bdf77f65a7284581a211d8c44ffb04b4\",\"symbol\":\"GIRL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x71d01db8d6a2fbea7f8d434599c237980c234e4c\",\"symbol\":\"GLA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb3Bd49E28f8F832b8d1E246106991e546c323502\",\"symbol\":\"GMT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6810e776880C02933D47DB1b9fc05908e5386b96\",\"symbol\":\"GNO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa74476443119A942dE498590Fe1f2454d7D4aC0d\",\"symbol\":\"GNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6ec8a24cabdc339a06a172f8223ea557055adaa5\",\"symbol\":\"GNX\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x247551F2EB3362E222c742E9c788B8957D9BC87e\",\"symbol\":\"GNY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeAb43193CF0623073Ca89DB9B712796356FA7414\",\"symbol\":\"GOLDX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x423b5f62b328d0d6d44870f4eee316befa0b2df5\",\"symbol\":\"GOT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x12b19d3e2ccc14da04fae33e63652ce469b3f2fd\",\"symbol\":\"GRID\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0xb444208cb0516c150178fcf9a52604bc04a1acea\",\"symbol\":\"GRMD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC17195bde49D70CefCF8A9F2ee1759FFC27BF0B1\",\"symbol\":\"GROO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0a9A9ce600D08BF9b76F49FA4e7b38A67EBEB1E6\",\"symbol\":\"GROW\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x228ba514309ffdf03a81a205a6d040e429d6e80c\",\"symbol\":\"GSC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe530441f4f73bDB6DC2fA5aF7c3fC5fD551Ec838\",\"symbol\":\"GSE\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xB70835D7822eBB9426B56543E391846C107bd32C\",\"symbol\":\"GTC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x025abad9e518516fdaafbdcdb9701b37fb7ef0fa\",\"symbol\":\"GTKT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xc5bbae50781be1669306b9e001eff57a2957b09d\",\"symbol\":\"GTO\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0xbdcfbf5c4d91abc0bc9709c7286d00063c0e6f22\",\"symbol\":\"GUESS\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x9847345de8b614c956146bbea549336d9c8d26b6\",\"symbol\":\"GULD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf7B098298f7C69Fc14610bf71d5e02c60792894C\",\"symbol\":\"GUP\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x056fd409e1d7a124bd7017459dfea2f387b6d5cd\",\"symbol\":\"GUSD\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x103c3A209da59d3E7C4A89307e66521e081CFDF0\",\"symbol\":\"GVT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x58ca3065c0f24c7c96aee8d6056b5b5decf9c2f8\",\"symbol\":\"GXC\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x22F0AF8D78851b72EE799e05F54A77001586B18A\",\"symbol\":\"GXVC\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x9dae8b7f6d37ea8e5d32c6c3e856a6d8a1d3b363\",\"symbol\":\"GZB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8C65e992297d5f092A756dEf24F4781a280198Ff\",\"symbol\":\"GZE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE638dc39b6aDBEE8526b5C22380b4b45dAf46d8e\",\"symbol\":\"GZR\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x5bfc1ff7f9e087c64fefb34f2e7cf24e5570919f\",\"symbol\":\"HABS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x93a7174dafd31d13400cd9fa01f4e5b5baa00d39\",\"symbol\":\"HAK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x48c1b2f3efa85fbafb2ab951bf4ba860a08cdbb7\",\"symbol\":\"HAND\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x5a567e28dbfa2bbd3ef13c0a01be114745349657\",\"symbol\":\"HAPPY\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x9002D4485b7594e3E850F0a206713B305113f69e\",\"symbol\":\"HAT\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0xe2492f8d2a2618d8709ca99b1d8d75713bd84089\",\"symbol\":\"HB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdd6c68bb32462e01705011a4e2ad1a60740f217f\",\"symbol\":\"HBT\",\"decimal\":15,\"type\":\"default\"},{\"address\":\"0xe34e1944e776f39b9252790a0527ebda647ae668\",\"symbol\":\"HBZ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xffe8196bc259e8dedc544d935786aa4709ec3e64\",\"symbol\":\"HDG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x95C4be8534d69C248C0623c4C9a7A2a001c17337\",\"symbol\":\"HDL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x86a63063b3a60652fb070f23cbb4a9833fdbbff8\",\"symbol\":\"HDLRE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe9ff07809ccff05dae74990e25831d0bc5cbe575\",\"symbol\":\"Hdp\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x84543f868ec1b1fac510d49d13c069f64cd2d5f9\",\"symbol\":\"Hdp.ф\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x491c9a23db85623eed455a8efdd6aba9b911c5df\",\"symbol\":\"HER\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe9c9e7e1dabea830c958c39d6b25964a6f52143a\",\"symbol\":\"HEY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xba2184520A1cC49a6159c57e61E1844E085615B6\",\"symbol\":\"HGT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9bb1db1445b83213a56d90d331894b3f26218e4e\",\"symbol\":\"HIBT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa9240fBCAC1F0b9A6aDfB04a53c8E3B0cC1D1444\",\"symbol\":\"HIG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7FCcaDee21660425FDEc86029b6362845ffC052C\",\"symbol\":\"HIN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x14F37B574242D366558dB61f3335289a5035c506\",\"symbol\":\"HKG\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x9e6b2b11542f2bc52f3029077ace37e8fd838d7f\",\"symbol\":\"HKN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x88ac94d5d175130347fc95e109d77ac09dbf5ab7\",\"symbol\":\"HKY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x66eb65D7Ab8e9567ba0fa6E37c305956c5341574\",\"symbol\":\"HLX\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0xAa0bb10CEc1fa372eb3Abc17C933FC6ba863DD9E\",\"symbol\":\"HMC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcbCC0F036ED4788F63FC0fEE32873d6A7487b908\",\"symbol\":\"HMQ\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9c9fe3bd60b22a9735908b9589011e78f2025c11\",\"symbol\":\"HNST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb45d7Bc4cEBcAB98aD09BABDF8C818B2292B672c\",\"symbol\":\"HODL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5B0751713b2527d7f002c0c4e2a37e1219610A6B\",\"symbol\":\"HORSE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6c6ee5e31d828de241282b9606c8e98ea48526e2\",\"symbol\":\"HOT (HoloToken)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9af839687f6c94542ac5ece2e317daae355493a1\",\"symbol\":\"HOT (Hydro Protocol)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x38c6a68304cdefb9bec48bbfaaba5c5b47818bb2\",\"symbol\":\"HPB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x554C20B7c486beeE439277b4540A434566dC4C02\",\"symbol\":\"HST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6f259637dcd74c767781e37bc6133cd6a68aa161\",\"symbol\":\"HT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x46ae264bf6d9dc6dd84c31064551f961c67a755c\",\"symbol\":\"HTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x001fc4a7f2f586596308091c7b296d4535a25a90\",\"symbol\":\"HUBS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x56be94d29e1125d2d61d06629c1b251d72c1b3b3\",\"symbol\":\"HUSL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x141abb03f001deded9a0223d4ff26d929117b72e\",\"symbol\":\"HV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC0Eb85285d83217CD7c891702bcbC0FC401E2D9D\",\"symbol\":\"HVN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xebbdf302c940c6bfd49c6b165f457fdb324649bc\",\"symbol\":\"HYDRO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3c20d67b6b1ae0985f913abb7397babc2fbb1a1f\",\"symbol\":\"ICD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5a84969bb663fb64F6d015DcF9F622Aedc796750\",\"symbol\":\"ICE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x888666CA69E0f178DED6D75b5726Cee99A87D698\",\"symbol\":\"ICN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa33e729bf4fdeb868b534e1f20523463d9c46bee\",\"symbol\":\"ICO\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x014B50466590340D41307Cc54DCee990c8D58aa8\",\"symbol\":\"ICOS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xb5a5f22694352c15b00323844ad545abb2b11028\",\"symbol\":\"ICX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6bc4375083d3ad563de91cad8438f629841448a5\",\"symbol\":\"ID7\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x814cafd4782d2e728170fda68257983f03321c58\",\"symbol\":\"IDEA\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x5136c98a80811c3f46bdda8b5c4555cfd9f812f0\",\"symbol\":\"IDH\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xcc13fc627effd6e35d2d2706ea3c4d7396c610ea\",\"symbol\":\"IDXM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x859a9c0b44cb7066d956a958b0b82e54c9e44b4b\",\"symbol\":\"iETH\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7654915a1b82d6d2d0afc37c52af556ea8983c7e\",\"symbol\":\"IFT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8a88f04e0c905054d2f33b26bb3a46d7091a039a\",\"symbol\":\"IG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x449c640b6c7fce4f8ad2e3dcd900d13be40174af\",\"symbol\":\"IGI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeda8b016efa8b1161208cf041cd86972eee0f31e\",\"symbol\":\"IHT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x16662f73df3e79e54c6c5938b4313f92c524c120\",\"symbol\":\"IIC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x88AE96845e157558ef59e9Ff90E766E22E480390\",\"symbol\":\"IKB\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xe3831c5A982B279A198456D577cfb90424cb6340\",\"symbol\":\"IMC\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x22E5F62D0FA19974749faa194e3d3eF6d89c08d7\",\"symbol\":\"IMT (Immortal)\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x13119E34E140097a507B07a5564bDe1bC375D9e6\",\"symbol\":\"IMT (MoneyToken)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf8e386EDa857484f5a12e4B5DAa9984E06E73705\",\"symbol\":\"IND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x24ddff6d8b8a42d835af3b440de91f3386554aa4\",\"symbol\":\"ING\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x48e5413b73add2434e47504E2a22d14940dBFe78\",\"symbol\":\"INRM\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x5b2e4a700dfbc560061e957edec8f6eeeb74a320\",\"symbol\":\"INS\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0xc72fe8e3dd5bef0f9f31f259399f301272ef2a2d\",\"symbol\":\"INSTAR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0b76544f6c413a555f309bf76260d1e02377c02a\",\"symbol\":\"INT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xece83617db208ad255ad4f45daf81e25137535bb\",\"symbol\":\"INV\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xa8006c4ca56f24d6836727d106349320db7fef82\",\"symbol\":\"INXT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xFA1a856Cfa3409CFa145Fa4e20Eb270dF3EB21ab\",\"symbol\":\"IOST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc34b21f6f8e51cc965c2393b3ccfa3b82beb2403\",\"symbol\":\"IoT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x6fb3e0a217407efff7ca062d46c26e5d60a14d69\",\"symbol\":\"IOTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x64CdF819d3E75Ac8eC217B3496d7cE167Be42e80\",\"symbol\":\"IPL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x001f0aa5da15585e5b2305dbab2bac425ea71007\",\"symbol\":\"IPSX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1969442391737025812c2215e77e676d7fa84847\",\"symbol\":\"ISL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0cf713b11c9b986ec40d65bd4f7fbd50f6ff2d64\",\"symbol\":\"IST34\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5e6b6d9abad9093fdc861ea1600eba1b355cd940\",\"symbol\":\"ITC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0aeF06DcCCC531e581f0440059E6FfCC206039EE\",\"symbol\":\"ITT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xA4eA687A2A7F29cF2dc66B39c68e4411C0D00C49\",\"symbol\":\"IVY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfca47962d45adfdfd1ab2d972315db4ce7ccf094\",\"symbol\":\"IXT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0d262e5dc4a06a0f1c90ce79c7a60c09dfc884e4\",\"symbol\":\"J8T\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9a3619499825fbae63329aa8bcb3f10cd5958e1c\",\"symbol\":\"JBD\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x884e3902C4d5cFA86de4aCE7A96AA91EbC25C0Ff\",\"symbol\":\"JBX\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xe2d82dc7da0e6f882e96846451f4fabcc8f90528\",\"symbol\":\"JC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8727c112c712c4a03371ac87a74dd6ab104af768\",\"symbol\":\"JET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x773450335eD4ec3DB45aF74f34F2c85348645D39\",\"symbol\":\"JetCoins\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa5Fd1A791C4dfcaacC963D4F73c6Ae5824149eA7\",\"symbol\":\"JNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x17280DA053596E097604839C61A2eF5efb7d493f\",\"symbol\":\"JOB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xdb455c71c1bc2de4e80ca451184041ef32054001\",\"symbol\":\"JOT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xDDe12a12A6f67156e0DA672be05c374e1B0a3e57\",\"symbol\":\"JOY\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x2d184014b5658c453443aa87c8e9c4d57285620b\",\"symbol\":\"JSE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1410434b0346f5be678d0fb554e5c7ab620f8f4a\",\"symbol\":\"KAN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe15254a13d34f9700320330abcb7c7f857af2fb7\",\"symbol\":\"KAPA\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x0D6DD9f68d24EC1d5fE2174f3EC8DAB52B52BaF5\",\"symbol\":\"KC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x72D32ac1c5E66BfC5b08806271f8eEF915545164\",\"symbol\":\"KEE\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x4cd988afbad37289baaf53c13e98e2bd46aaea8c\",\"symbol\":\"KEY (BihuKey)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4CC19356f2D37338b9802aa8E8fc58B0373296E7\",\"symbol\":\"KEY (SelfKey)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC12D1c73eE7DC3615BA4e37E4ABFdbDDFA38907E\",\"symbol\":\"KICK\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x27695E09149AdC738A978e9A678F99E4c39e9eb9\",\"symbol\":\"KICK\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x818Fc6C2Ec5986bc6E2CBf00939d90556aB12ce5\",\"symbol\":\"KIN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4618519de4c304f3444ffa7f812dddc2971cc688\",\"symbol\":\"KIND\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xc97A5cdF41BAfD51c8dBE82270097e704d748b92\",\"symbol\":\"KLOWN\",\"decimal\":7,\"type\":\"default\"},{\"address\":\"0x2bdd6c9bf1bf396a37501aae53751b9946b503da\",\"symbol\":\"KMTBA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdd974D5C2e2928deA5F71b9825b8b646686BD200\",\"symbol\":\"KNC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8e5610ab5e39d26828167640ea29823fe1dd5843\",\"symbol\":\"KNDC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xff5c25d2f40b47c4a37f989de933e26562ef0ac0\",\"symbol\":\"KNT\",\"decimal\":16,\"type\":\"default\"},{\"address\":\"0xb5c33f965c8899d255c34cdd2a3efa8abcbb3dea\",\"symbol\":\"KPR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeef8102a0d46d508f171d7323bceffc592835f13\",\"symbol\":\"KRI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x464ebe77c293e473b48cfe96ddcf88fcf7bfdac0\",\"symbol\":\"KRL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4CC8486F2F3dCE2d3B5E27057Cf565e16906D12D\",\"symbol\":\"KRW-G\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdf1338FbAfe7aF1789151627B886781ba556eF9a\",\"symbol\":\"KUE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x241ba672574a78a3a604cdd0a94429a73a84a324\",\"symbol\":\"KWATT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9541FD8B9b5FA97381783783CeBF2F5fA793C262\",\"symbol\":\"KZN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xE50365f5D679CB98a1dd62D6F6e58e59321BcdDf\",\"symbol\":\"LA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfD107B473AB90e8Fbd89872144a3DC92C40Fa8C9\",\"symbol\":\"LALA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2f85e502a988af76f7ee6d83b7db8d6c0a823bf9\",\"symbol\":\"LATX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xfe5f141bf94fe84bc28ded0ab966c16b17490657\",\"symbol\":\"LBA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaa19961b6b858d9f18a115f25aa1d98abc1fdba8\",\"symbol\":\"LCS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x05c7065d644096a4e4c3fe24af86e36de021074b\",\"symbol\":\"LCT (LendConnect)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4a37a91eec4c97f9090ce66d21d3b3aadf1ae5ad\",\"symbol\":\"LCT (LiquorChain Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5102791ca02fc3595398400bfe0e33d7b6c82267\",\"symbol\":\"LDC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9efa0e2387e4cba02a6e4e6594b8f4dd209a0b93\",\"symbol\":\"LDX\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x5b26C5D0772E5bbaC8b3182AE9a13f9BB2D03765\",\"symbol\":\"LEDU\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x60C24407d01782C2175D32fe7C8921ed732371D1\",\"symbol\":\"LEMO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03\",\"symbol\":\"LEND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf97b5d65da6b0468b90d531ddae2a69843e6797d\",\"symbol\":\"LEO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0f4ca92660efad97a9a70cb0fe969c755439772c\",\"symbol\":\"LEV\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0xc798cd1c49db0e297312e4c682752668ce1db2ad\",\"symbol\":\"LFR\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0x6Fe536a1d595C12cbb407C5B2C03999f658A5C72\",\"symbol\":\"LG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc520F3Ac303a107D8F4B08b326B6ea66A4f961cd\",\"symbol\":\"LG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x59061b6f26BB4A9cE5828A19d35CFD5A4B80F056\",\"symbol\":\"LGD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x123ab195dd38b1b40510d467a6a359b201af056f\",\"symbol\":\"LGO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0a50C93c762fDD6E56D86215C24AaAD43aB629aa\",\"symbol\":\"LGO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x2eb86e8fc520e0f6bb5d9af08f924fe70558ab89\",\"symbol\":\"LGR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe6dfbf1faca95036b8e76e1fb28933d025b76cc0\",\"symbol\":\"LIBER\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEB9951021698B42e4399f9cBb6267Aa35F82D59D\",\"symbol\":\"LIF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xff18dbc487b4c2e3222d115952babfda8ba52f5f\",\"symbol\":\"LIFE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x02f61fd266da6e8b102d4121f5ce7b992640cf98\",\"symbol\":\"LIKE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x514910771af9ca656af840dff83e8264ecf986ca\",\"symbol\":\"LINK (Chainlink)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe2e6d4be086c6938b53b22144855eef674281639\",\"symbol\":\"LINK Platform\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x24A77c1F17C547105E14813e517be06b0040aa76\",\"symbol\":\"LIVE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x49bd2da75b1f7af1e4dfd6b1125fecde59dbec58\",\"symbol\":\"LKY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x25B6325f5BB1c1E03cfbC3e53F470E1F1ca022E3\",\"symbol\":\"LML\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x63e634330A20150DbB61B15648bC73855d6CCF07\",\"symbol\":\"LNC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6beb418fc6e1958204ac8baddcf109b8e9694966\",\"symbol\":\"LNC-Linker Coin\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0947b0e6D821378805c9598291385CE7c791A6B2\",\"symbol\":\"LND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5e3346444010135322268a4630d2ed5f8d09446c\",\"symbol\":\"LOC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9c23d67aea7b95d80942e3836bcdf7e708a747c2\",\"symbol\":\"LOCI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC64500DD7B0f1794807e67802F8Abbf5F8Ffb054\",\"symbol\":\"LOCUS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x253c7dd074f4bacb305387f922225a4f737c08bd\",\"symbol\":\"LOOK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x21ae23b882a340a22282162086bc98d3e2b73018\",\"symbol\":\"LOOK old\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa4e8c3ec456107ea67d3075bf9e3df3a75823db0\",\"symbol\":\"LOOM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xD29F0b5b3F50b07Fe9a9511F7d86F4f4bAc3f8c4\",\"symbol\":\"LQD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD\",\"symbol\":\"LRC (LoopRing V2)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEF68e7C694F40c8202821eDF525dE3782458639f\",\"symbol\":\"LRC (LoopRing)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5dbe296f97b23c4a6aa6183d73e574d02ba5c719\",\"symbol\":\"LUC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xFB12e3CcA983B9f59D90912Fd17F8D745A8B2953\",\"symbol\":\"LUCK\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xa89b5934863447f6e4fc53b315a93e873bda69a3\",\"symbol\":\"LUM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfa05A73FfE78ef8f1a739473e462c54bae6567D9\",\"symbol\":\"LUN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc8cac7672f4669685817cf332a33eb249f085475\",\"symbol\":\"LVN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5\",\"symbol\":\"LYM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x57ad67acf9bf015e4820fbd66ea1a21bed8852ec\",\"symbol\":\"LYM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3f4b726668da46f5e0e75aa5d478acec9f38210f\",\"symbol\":\"M-ETH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5b09a0371c1da44a8e24d36bf5deb1141a84d875\",\"symbol\":\"MAD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe25bCec5D3801cE3a794079BF94adF1B8cCD802D\",\"symbol\":\"MAN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942\",\"symbol\":\"MANA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfdcc07Ab60660de533b5Ad26e1457b565a9D59Bd\",\"symbol\":\"MART\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x23ccc43365d9dd3882eab88f43d515208f832430\",\"symbol\":\"MAS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb63ffe88c2903080ccf9ab14efa56a11e3e01273\",\"symbol\":\"MBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEfbB3F1058fd8E0C9d7204f532E17d7572AFfc3e\",\"symbol\":\"MBCASH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x386467f1f3ddbe832448650418311a479eecfc57\",\"symbol\":\"MBRS\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x93E682107d1E9defB0b5ee701C71707a4B2E46Bc\",\"symbol\":\"MCAP\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x138A8752093F4f9a79AaeDF48d4B9248fab93c9C\",\"symbol\":\"MCI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB63B606Ac810a52cCa15e44bB630fd42D8d1d83d\",\"symbol\":\"MCO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x51DB5Ad35C671a87207d88fC11d593AC0C8415bd\",\"symbol\":\"MDA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x66186008C1050627F979d464eABb258860563dbE\",\"symbol\":\"MDS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x814e0908b12a99fecf5bc101bb5d0b8b5cdf7d26\",\"symbol\":\"MDT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfd1e80508f243e64ce234ea88a5fd2827c71d4b7\",\"symbol\":\"MEDX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x420167d87d35c3a249b32ef6225872fbd9ab85d2\",\"symbol\":\"MESG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf03045a4c8077e38f3b8e2ed33b8aee69edf869f\",\"symbol\":\"MESH (BlockMesh)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x01f2acf2914860331c1cb1a9acecda7475e06af8\",\"symbol\":\"MESH (MeshBox Old)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5b8d43ffde4a2982b9a5387cdf21d54ead64ac8d\",\"symbol\":\"MEST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa3d58c4e56fedcae3a7c43a725aee9a71f0ece4e\",\"symbol\":\"MET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfef3884b603c33ef8ed4183346e093a173c94da6\",\"symbol\":\"METM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6710c63432a2de02954fc0f851db07146a6c0312\",\"symbol\":\"MFG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xDF2C7238198Ad8B389666574f2d8bc411A4b7428\",\"symbol\":\"MFT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x05D412CE18F24040bB3Fa45CF2C69e506586D8e8\",\"symbol\":\"MFTU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x40395044ac3c0c57051906da938b54bd6557f212\",\"symbol\":\"MGO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3a1237d38d0fb94513f85d61679cad7f38507242\",\"symbol\":\"MIC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xD717B75404022fb1C8582ADf1c66B9A553811754\",\"symbol\":\"MILC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe23cd160761f63FC3a1cF78Aa034b6cdF97d3E0C\",\"symbol\":\"MIT (Mainstreet)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xad8dd4c725de1d31b9e8f8d146089e9dc6882093\",\"symbol\":\"MIT (Mychatcoin)\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x4a527d8fc13c5203ab24ba0944f4cb14658d1db6\",\"symbol\":\"MITx\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\",\"symbol\":\"MKR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7939882b54fcf0bcae6b53dec39ad6e806176442\",\"symbol\":\"MKT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xec67005c4e498ec7f55e092bd1d35cbc47c91892\",\"symbol\":\"MLN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBEB9eF514a379B997e0798FDcC901Ee474B6D9A1\",\"symbol\":\"MLN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1a95B271B0535D15fa49932Daba31BA612b52946\",\"symbol\":\"MNE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xA9877b1e05D035899131DBd1e403825166D09f92\",\"symbol\":\"MNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x83cee9e086a77e492ee0bb93c2b0437ad6fdeccc\",\"symbol\":\"MNTP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x865ec58b06bf6305b886793aa20a2da31d034e68\",\"symbol\":\"MOC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x957c30aB0426e0C93CD8241E2c60392d08c6aC8e\",\"symbol\":\"MOD\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x501262281b2ba043e2fbf14904980689cddb0c78\",\"symbol\":\"MORE\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x263c618480dbe35c300d8d5ecda19bbb986acaed\",\"symbol\":\"MOT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfbd0d1c77b501796a35d86cf91d65d9778eee695\",\"symbol\":\"MOVED\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x44bf22949f9cc84b61b9328a9d885d1b5c806b41\",\"symbol\":\"MOZO\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xf453b5b9d4e0b5c62ffb256bb2378cc2bc8e8a89\",\"symbol\":\"MRK\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x82125AFe01819Dff1535D0D6276d57045291B6c0\",\"symbol\":\"MRL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x21f0F0fD3141Ee9E11B3d7f13a1028CD515f459c\",\"symbol\":\"MRP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xAB6CF87a50F17d7F5E1FEaf81B6fE9FfBe8EBF84\",\"symbol\":\"MRV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x68AA3F232dA9bdC2343465545794ef3eEa5209BD\",\"symbol\":\"MSP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x905E337c6c8645263D3521205Aa37bf4d034e745\",\"symbol\":\"MTC (Medical Token Currency)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdfdc0d82d96f8fd40ca0cfb4a288955becec2088\",\"symbol\":\"MTC (Mesh Network)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaF4DcE16Da2877f8c9e00544c93B62Ac40631F16\",\"symbol\":\"MTH\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0xF433089366899D83a9f26A773D59ec7eCF30355e\",\"symbol\":\"MTL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x41dbecc1cdc5517c6f76f6a6e836adbee2754de3\",\"symbol\":\"MTN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7FC408011165760eE31bE2BF20dAf450356692Af\",\"symbol\":\"MTR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1e49fF77c355A3e38D6651ce8404AF0E48c5395f\",\"symbol\":\"MTRc\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0AF44e2784637218dD1D32A322D44e603A8f0c6A\",\"symbol\":\"MTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa52383b665b91dce42dd4b6d1e0fb37d3effe489\",\"symbol\":\"MUSD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x515669d308f887fd83a471c7764f5d084886d34d\",\"symbol\":\"MUXE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x71396a6410249725c5609646c4e449c6c4d41e27\",\"symbol\":\"MVG\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xa849eaae994fb86afa73382e9bd88c2b6b18dc71\",\"symbol\":\"MVL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8a77e40936bbc27e80e9a3f526368c967869c86d\",\"symbol\":\"MVP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6425c6be902d692ae2db752b3c268afadb099d3b\",\"symbol\":\"MWAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf7e983781609012307f2514f63D526D83D24F466\",\"symbol\":\"MYD\",\"decimal\":16,\"type\":\"default\"},{\"address\":\"0xa645264C5603E96c3b0B078cdab68733794B0A71\",\"symbol\":\"MYST\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x8d80de8A78198396329dfA769aD54d24bF90E7aa\",\"symbol\":\"NAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xffe02ee4c69edf1b340fcad64fbd6b37a7b9e265\",\"symbol\":\"NANJ\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5d65D971895Edc438f465c17DB6992698a52318D\",\"symbol\":\"NAS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x588047365df5ba589f923604aac23d673555c623\",\"symbol\":\"NAVI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x17f8aFB63DfcDcC90ebE6e84F060Cc306A98257D\",\"symbol\":\"NBAI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9f195617fa8fbad9540c5d113a99a0a0172aaedc\",\"symbol\":\"NBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x809826cceab68c387726af962713b64cb5cb3cca\",\"symbol\":\"NCASH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9344b383b1D59b5ce3468B234DAB43C7190ba735\",\"symbol\":\"NCC (NeedsCoin)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5d48f293baed247a2d0189058ba37aa238bd4725\",\"symbol\":\"NCC (NeuroChain)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9e46a38f5daabe8683e10793b06749eef7d733d1\",\"symbol\":\"NCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa54ddc7b3cce7fc8b1e3fa0256d0db80d2c10970\",\"symbol\":\"NDC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1966d718A565566e8E202792658D7b5Ff4ECe469\",\"symbol\":\"NDX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcc80c051057b774cd75067dc48f8987c4eb97a5e\",\"symbol\":\"NEC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd8446236FA95b9b5f9fd0f8E7Df1a944823c683d\",\"symbol\":\"NEEO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcfb98637bcae43C13323EAa1731cED2B716962fD\",\"symbol\":\"NET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa823e6722006afe99e91c30ff5295052fe6b8e32\",\"symbol\":\"NEU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x814964b1bceAf24e26296D031EaDf134a2Ca4105\",\"symbol\":\"NEWB\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xb62132e35a6c13ee1ee0f84dc5d40bad8d815206\",\"symbol\":\"NEXO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x72dd4b6bd852a3aa172be4d6c5a6dbec588cf131\",\"symbol\":\"NGC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe26517A9967299453d3F1B48Aa005E6127e67210\",\"symbol\":\"NIMFA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5554e04e76533e1d14c52f05beef6c9d329e1e30\",\"symbol\":\"NIO\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xcc2ad789f459bc73e5fb33364964b658a62c1ee7\",\"symbol\":\"NIO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xcee4019fd41ecdc8bae9efdd20510f4b6faa6197\",\"symbol\":\"NLYA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671\",\"symbol\":\"NMR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x58a4884182d9e835597f405e5f258290e46ae7c2\",\"symbol\":\"NOAH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf4faea455575354d2699bc209b0a65ca99f69982\",\"symbol\":\"NOBS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xec46f8207d766012454c408de210bcbc2243e71c\",\"symbol\":\"NOX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4ce6b362bc77a24966dda9078f9cef81b3b886a7\",\"symbol\":\"NPER\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x28b5e12cce51f15594b0b91d5b5adaa70f684a02\",\"symbol\":\"NPX\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xa15c7ebe1f07caf6bff097d8a589fb8ac49ae5b3\",\"symbol\":\"NPXS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x000000085824f23a070c2474442ed014c0e46b58\",\"symbol\":\"NRM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x69beab403438253f13b6e92db91f7fb849258263\",\"symbol\":\"NTK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5d4d57cd06fa7fe99e26fdc481b468f77f05073c\",\"symbol\":\"NTK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8a99ed8a1b204903ee46e733f2c1286f6d20b177\",\"symbol\":\"NTO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2233799ee2683d75dfefacbcd2a26c78d34b470d\",\"symbol\":\"NTWK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x245ef47d4d0505ecf3ac463f4d81f41ade8f1fd1\",\"symbol\":\"NUG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb91318f35bdb262e9423bc7c7c2a3a93dd93c92c\",\"symbol\":\"NULS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0C6144c16af288948C8fdB37fD8fEc94bfF3d1d9\",\"symbol\":\"NUSD\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x45e42D659D9f9466cD5DF622506033145a9b89Bc\",\"symbol\":\"NxC\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x7627de4b93263a6a7570b8dafa64bae812e5c394\",\"symbol\":\"NXX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5c6183d10A00CD747a6Dbb5F658aD514383e9419\",\"symbol\":\"NXX OLD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5e888B83B7287EED4fB7DA7b7d0A0D4c735d94b3\",\"symbol\":\"OAK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x701C244b988a513c945973dEFA05de933b23Fe1D\",\"symbol\":\"OAX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0235fe624e044a05eed7a43e16e3083bc8a4287a\",\"symbol\":\"OCC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4092678e4e78230f46a1534c0fbc8fa39780892b\",\"symbol\":\"OCN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbf52f2ab39e26e0951d2a02b49b7702abe30406a\",\"symbol\":\"ODE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5f4506dB5b568e103532F84d32A285cDd5Aa5751\",\"symbol\":\"OGK\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x8207c1ffc5b6804f6024322ccf34f29c3541ae26\",\"symbol\":\"OGN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6f539a9456a5bcb6334a1a41207c3788f5825207\",\"symbol\":\"OHNI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x21e13cb3f3f26f92a62ac7adab4093e8997d1fb1\",\"symbol\":\"OIKOS\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xc66ea802717bfb9833400264dd12c2bceaa34a6d\",\"symbol\":\"OLD_MKR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9d9223436ddd466fc247e9dbbd20207e640fef58\",\"symbol\":\"OLE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x64A60493D888728Cf42616e034a0dfEAe38EFCF0\",\"symbol\":\"OLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07\",\"symbol\":\"OMG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb5dbc6d3cf380079df3b27135664b6bcf45d1869\",\"symbol\":\"OMX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4d807509aece24c0fa5a102b6a3b059ec6e14392\",\"symbol\":\"ONE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb23be73573bc7e03db6e5dfc62405368716d28a8\",\"symbol\":\"ONEK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd341d1680eeee3255b8c4c75bcce7eb57f144dae\",\"symbol\":\"onG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6863be0e7cf7ce860a574760e9020d519a8bdc47\",\"symbol\":\"ONL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB31C219959E06f9aFBeB36b388a4BaD13E802725\",\"symbol\":\"ONOT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x69c4BB240cF05D51eeab6985Bab35527d04a8C64\",\"symbol\":\"OPEN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x77599D2C6DB170224243e255e6669280F11F1473\",\"symbol\":\"OPQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4355fC160f74328f9b383dF2EC589bB3dFd82Ba0\",\"symbol\":\"OPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x832904863978b94802123106e6eb491bdf0df928\",\"symbol\":\"OPTI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3ff9cebbeaa7bcc48a952a011a02a22a1fdd1c62\",\"symbol\":\"OR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xff56Cc6b1E6dEd347aA0B7676C85AB0B3D08B0FA\",\"symbol\":\"ORBS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6F59e0461Ae5E2799F1fB3847f05a63B16d0DbF8\",\"symbol\":\"ORCA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd2fa8f92ea72abb35dbd6deca57173d22db2ba49\",\"symbol\":\"ORI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc96DF921009B790dfFcA412375251ed1A2b75c60\",\"symbol\":\"ORME\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xeb9a4b185816c354db92db09cc3b50be60b901b6\",\"symbol\":\"ORS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4e84a65b5664d33b67750771f8beaec458bd6729\",\"symbol\":\"ORX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2C4e8f2D746113d0696cE89B35F0d8bF88E0AEcA\",\"symbol\":\"OST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x881ef48211982d01e2cb7092c915e647cd40d85c\",\"symbol\":\"OTN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x170b275ced089fffaebfe927f445a350ed9160dc\",\"symbol\":\"OWN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x65a15014964f2102ff58647e16a16a6b9e14bcf6\",\"symbol\":\"Ox Fina\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x4527a3b4a8a150403090a99b87effc96f2195047\",\"symbol\":\"P2PS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb9bb08ab7e9fa0a1356bd4a39ec0ca267e03b0b3\",\"symbol\":\"PAI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfeDAE5642668f8636A11987Ff386bfd215F942EE\",\"symbol\":\"PAL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xea5f88e54d982cbb0c441cde4e79bc305e5b43bc\",\"symbol\":\"PARETO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6dd4e4aad29a40edd6a409b9c1625186c9855b4d\",\"symbol\":\"PARKGENE) (GENE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x77761e63c05aee6648fdaeaa9b94248351af9bcd\",\"symbol\":\"PASS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeE4458e052B533b1aABD493B5f8c4d85D7B263Dc\",\"symbol\":\"PASS (Blockpass)\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xF3b3Cad094B89392fcE5faFD40bC03b80F2Bc624\",\"symbol\":\"PAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x694404595e3075a942397f466aacd462ff1a7bd0\",\"symbol\":\"PATENTS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xF813F3902bBc00A6DCe378634d3B79D84F9803d7\",\"symbol\":\"PATH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9fba684d77d2d6a1408c24b60a1f5534e71f5b75\",\"symbol\":\"PATR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8e870d67f660d95d5be530380d0ec0bd388289e1\",\"symbol\":\"PAX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB97048628DB6B661D4C2aA833e95Dbe1A905B280\",\"symbol\":\"PAY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x55648de19836338549130b1af587f16bea46f66b\",\"symbol\":\"PBL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xF4c07b1865bC326A3c01339492Ca7538FD038Cc0\",\"symbol\":\"PBT\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xfcAC7A7515e9A9d7619fA77A1fa738111f66727e\",\"symbol\":\"PCH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe3f4b4a5d91e5cb9435b947f090a319737036312\",\"symbol\":\"PCH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0F02e27745e3b6e9e1310d19469e2b5D7B5eC99A\",\"symbol\":\"PCL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3618516F45CD3c913F81F9987AF41077932Bc40d\",\"symbol\":\"PCL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x53148Bb4551707edF51a1e8d7A93698d18931225\",\"symbol\":\"PCLOLD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0db03B6CDe0B2d427C64a04FeAfd825938368f1F\",\"symbol\":\"PDATA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8Ae56a6850a7cbeaC3c3Ab2cB311e7620167eAC8\",\"symbol\":\"PEG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbb0ef9e617faddf54b8d16e29046f72b4d3ec77f\",\"symbol\":\"PEP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x30fef258d2728f9d1edf038059c725faf785697e\",\"symbol\":\"PESO\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x5884969Ec0480556E11d119980136a4C17eDDEd1\",\"symbol\":\"PET\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xec18f898b4076a3e18f1089d33376cc380bde61d\",\"symbol\":\"PETRO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x55c2A0C171D920843560594dE3d6EEcC09eFc098\",\"symbol\":\"PEXT\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x2fa32a39fc1c399e0cc7b2935868f5165de7ce97\",\"symbol\":\"PFR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x13c2fab6354d3790d8ece4f0f1a3280b4a25ad96\",\"symbol\":\"PHI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE64509F0bf07ce2d29A7eF19A8A9bc065477C1B4\",\"symbol\":\"PIPL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0ff161071e627a0e6de138105c73970f86ca7922\",\"symbol\":\"PIT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8eFFd494eB698cc399AF6231fCcd39E08fd20B15\",\"symbol\":\"PIX\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x02f2d4a04e6e01ace88bd2cd632875543b2ef577\",\"symbol\":\"PKG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2604fa406be957e542beb89e6754fcde6815e83f\",\"symbol\":\"PKT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x59416A25628A76b4730eC51486114c32E0B582A1\",\"symbol\":\"PLASMA\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xE477292f1B3268687A29376116B0ED27A9c76170\",\"symbol\":\"PLAY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0AfFa06e7Fbe5bC9a764C979aA66E8256A631f02\",\"symbol\":\"PLBT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xe3818504c1B32bF1557b16C238B2E01Fd3149C17\",\"symbol\":\"PLR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xD8912C10681D8B21Fd3742244f44658dBA12264E\",\"symbol\":\"PLU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x846c66cf71c43f80403b51fe3906b3599d63336f\",\"symbol\":\"PMA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x81b4d08645da11374a03749ab170836e4e539767\",\"symbol\":\"PMNT\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x93ed3fbe21207ec2e8f2d3c3de6e058cb73bc04d\",\"symbol\":\"PNK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6758b7d441a9739b98552b373703d8d3d14f9e62\",\"symbol\":\"POA20\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0e0989b1f9b8a38983c2ba8053269ca62ec9b195\",\"symbol\":\"POE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x43f6a1be992dee408721748490772b15143ce0a7\",\"symbol\":\"POIN\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x705EE96c1c160842C92c1aeCfCFfccc9C412e3D9\",\"symbol\":\"POLL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9992eC3cF6A55b00978cdDF2b27BC6882d88D1eC\",\"symbol\":\"POLY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x779B7b713C86e3E6774f5040D9cCC2D43ad375F8\",\"symbol\":\"POOL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xee609fe292128cad03b786dbb9bc2634ccdbe7fc\",\"symbol\":\"POS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x595832f8fc6bf59c85c527fec3740a1b7a361269\",\"symbol\":\"POWR\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xc42209accc14029c1012fb5680d95fbd6036e2a0\",\"symbol\":\"PPP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd4fa1460F537bb9085d22C7bcCB5DD450Ef28e3a\",\"symbol\":\"PPT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x88a3e4f35d64aad41a6d4030ac9afe4356cb84fa\",\"symbol\":\"PRE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7728dfef5abd468669eb7f9b48a7f70a501ed29d\",\"symbol\":\"PRG\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x3adfc4999f77d04c8341bac5f3a76f58dff5b37a\",\"symbol\":\"PRIX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1844b21593262668b7248d0f57a220caaba46ab9\",\"symbol\":\"PRL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x226bb599a12C826476e3A771454697EA52E9E220\",\"symbol\":\"PRO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9041fe5b3fdea0f5e4afdc17e75180738d877a01\",\"symbol\":\"PRO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xA3149E0fA0061A9007fAf307074cdCd290f0e2Fd\",\"symbol\":\"PRON\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x6fe56c0bcdd471359019fcbc48863d6c3e9d4f41\",\"symbol\":\"PROPS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE40C374d8805b1dD58CDcEFf998A2F6920Cb52FD\",\"symbol\":\"PRPS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x163733bcc28dbf26B41a8CfA83e369b5B3af741b\",\"symbol\":\"PRS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36\",\"symbol\":\"PRSP\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x5f85c60187ab233ca6e750731d15e7efd061fbde\",\"symbol\":\"PSDN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5d4abc77b8405ad177d8ac6682d584ecbfd46cec\",\"symbol\":\"PST\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x66497a283e0a007ba3974e837784c6ae323447de\",\"symbol\":\"PT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2a8E98e256f32259b5E5Cb55Dd63C8e891950666\",\"symbol\":\"PTC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4946583c5b86e01ccd30c71a05617d06e3e73060\",\"symbol\":\"PTON\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8Ae4BF2C33a8e667de34B54938B0ccD03Eb8CC06\",\"symbol\":\"PTOY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4689a4e169eb39cc9078c0940e21ff1aa8a39b9c\",\"symbol\":\"PTT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5512e1d6a7be424b4323126b4f9e86d023f95764\",\"symbol\":\"PTWO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xef6b4ce8c9bc83744fbcde2657b32ec18790458a\",\"symbol\":\"PUC\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x47e67BA66b0699500f18A53F94E2b9dB3D47437e\",\"symbol\":\"PXG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc14830e53aa344e8c14603a91229a0b925b0b262\",\"symbol\":\"PXT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7703c35cffdc5cda8d27aa3df2f9ba6964544b6e\",\"symbol\":\"PYLNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x618e75ac90b12c6049ba3b27f5d5f8651b0037f6\",\"symbol\":\"QASH\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x671AbBe5CE652491985342e85428EB1b07bC6c64\",\"symbol\":\"QAU\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1602af2c782cc03f9241992e243290fccf73bb13\",\"symbol\":\"QBIT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcb5ea3c190d8f82deadf7ce5af855ddbf33e3962\",\"symbol\":\"QBIT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x2467aa6b5a2351416fd4c3def8462d841feeecec\",\"symbol\":\"QBX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xea26c4ac16d4a5a106820bc8aee85fd0b7b2b664\",\"symbol\":\"QKC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4a220E6096B25EADb88358cb44068A3248254675\",\"symbol\":\"QNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xFFAA5ffc455d9131f8A2713A741fD1960330508B\",\"symbol\":\"QRG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x697beac28B09E122C4332D163985e8a73121b97F\",\"symbol\":\"QRL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x99ea4dB9EE77ACD40B119BD1dC4E33e1C070b80d\",\"symbol\":\"QSP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2C3C1F05187dBa7A5f2Dd47Dca57281C4d4F183F\",\"symbol\":\"QTQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9a642d6b3368ddc662CA244bAdf32cDA716005BC\",\"symbol\":\"QTUM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x264dc2dedcdcbb897561a57cba5085ca416fb7b4\",\"symbol\":\"QUN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1183f92a5624d68e85ffb9170f16bf0443b4c242\",\"symbol\":\"QVT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x48f775efbe4f5ece6e0df2f7b5932df56823b990\",\"symbol\":\"R\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xE5a3229CCb22b6484594973A03a3851dCd948756\",\"symbol\":\"RAE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x45edb535942a8c84d9f4b5d37e1b25f91ea4804c\",\"symbol\":\"RAO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe8663a64a96169ff4d95b4299e7ae9a76b905b31\",\"symbol\":\"Rating\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xfc2c4d8f95002c14ed0a7aa65102cac9e5953b5e\",\"symbol\":\"RBLX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf970b8e36e23f7fc3fd752eea86f8be8d83375a6\",\"symbol\":\"RCN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x13f25cd52b21650caa8225c9942337d914c9b030\",\"symbol\":\"RCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x255aa6df07540cb5d3d297f0d0d4d84cb52bc8e6\",\"symbol\":\"RDN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x767bA2915EC344015a7938E3eEDfeC2785195D05\",\"symbol\":\"REA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9214ec02cb71cba0ada6896b8da260736a67ab10\",\"symbol\":\"REAL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5f53f7a8075614b699baad0bc2c899f4bad8fbbf\",\"symbol\":\"REBL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x76960dccd5a1fe799f7c29be9f19ceb4627aeb2f\",\"symbol\":\"RED\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB563300A3BAc79FC09B93b6F84CE0d4465A2AC27\",\"symbol\":\"REDC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x89303500a7abfb178b274fd89f2469c264951e1f\",\"symbol\":\"REF\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x83984d6142934bb535793a82adb0a46ef0f66b6d\",\"symbol\":\"REM\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x13cb85823f78cff38f0b0e90d3e975b8cb3aad64\",\"symbol\":\"REMI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x408e41876cCCDC0F92210600ef50372656052a38\",\"symbol\":\"REN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1985365e9f78359a9B6AD760e32412f4a445E862\",\"symbol\":\"REP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8f8221aFbB33998d8584A2B05749bA73c37a938a\",\"symbol\":\"REQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf05a9382A4C3F29E2784502754293D88b835109C\",\"symbol\":\"REX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd0929d411954c47438dc1d871dd6081f5c5e149c\",\"symbol\":\"RFR\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xf4c571fb6dd704e58561cdd275fa4b80cfe82f76\",\"symbol\":\"RFX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4c383bdcae52a6e1cb810c76c70d6f31a249ec9b\",\"symbol\":\"RGS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x168296bb09e24a88805cb9c33356536b980d3fc5\",\"symbol\":\"RHOC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9469D013805bFfB7D3DEBe5E7839237e535ec483\",\"symbol\":\"RING\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdd007278b667f6bef52fd0a4c23604aa1f96039a\",\"symbol\":\"RIPT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0b1724cc9fda0186911ef6a75949e9c0d3f0f2f3\",\"symbol\":\"RIYA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x106aa49295b525fcf959aa75ec3f7dcbf5352f1c\",\"symbol\":\"RKT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x607F4C5BB672230e8672085532f7e901544a7375\",\"symbol\":\"RLC\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0xcCeD5B8288086BE8c38E23567e684C3740be4D48\",\"symbol\":\"RLT\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0xbe99B09709fc753b09BCf557A992F6605D5997B0\",\"symbol\":\"RLTY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4a42d2c580f83dce404acad18dab26db11a1750e\",\"symbol\":\"RLX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7dc4f41294697a7903c4027f6ac528c5d14cd7eb\",\"symbol\":\"RMC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x8d5682941ce456900b12d47ac06a88b47c764ce1\",\"symbol\":\"RMESH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0996bfb5d057faa237640e2506be7b4f9c46de0b\",\"symbol\":\"RNDR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xff603f43946a3a28df5e6a73172555d8c8b02386\",\"symbol\":\"RNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1fe70be734e473e5721ea57c8b5b01e6caa52686\",\"symbol\":\"RNTB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1bcbc54166f6ba149934870b60506199b6c9db6d\",\"symbol\":\"ROC\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0xA40106134c5bF4c41411554e6db99B95A15ed9d8\",\"symbol\":\"ROCK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC16b542ff490e01fcc0DC58a60e1EFdc3e357cA6\",\"symbol\":\"ROCK2\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x0E3de3B0E3D617FD8D1D8088639bA877feb4d742\",\"symbol\":\"ROCK2PAY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc9de4b7f0c3d991e967158e4d4bfa4b51ec0b114\",\"symbol\":\"ROK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4993CB95c7443bdC06155c5f5688Be9D8f6999a5\",\"symbol\":\"ROUND\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xccc85aa8999505d6f886a32da4a107bbe0d1de9e\",\"symbol\":\"RPE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb4efd85c19999d84251304bda99e90b92300bd93\",\"symbol\":\"RPL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xec491c1088eae992b7a214efb0a266ad0927a72a\",\"symbol\":\"RTB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7a5599b97e8c4abb5dd06eba0e9d1f75af818db9\",\"symbol\":\"RTC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3fd8f39a962efda04956981c31ab89fab5fb8bc8\",\"symbol\":\"RTH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x54b293226000ccBFC04DF902eEC567CB4C35a903\",\"symbol\":\"RTN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf278c1ca969095ffddded020290cf8b5c424ace2\",\"symbol\":\"RUFF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdEE02D94be4929d26f67B64Ada7aCf1914007F10\",\"symbol\":\"RUNE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3d1ba9be9f66b8ee101911bc36d3fb562eac2244\",\"symbol\":\"RVT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd30a2e9347ad48ea208ee563a9cdfd80e962a727\",\"symbol\":\"RYLT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1ec8fe51a9b6a3a6c427d17d9ecc3060fbc4a45c\",\"symbol\":\"S-A-PAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3eb91d237e491e0dee8582c402d85cb440fb6b54\",\"symbol\":\"S-ETH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xabC1280A0187a2020cC675437aed400185F86Db6\",\"symbol\":\"SAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4156D3342D5c385a87D264F90653733592000581\",\"symbol\":\"SALT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7C5A0CE9267ED19B22F8cae653F198e3E8daf098\",\"symbol\":\"SAN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x78fe18e41f436e1981a3a60d1557c8a7a9370461\",\"symbol\":\"SCANDI\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xd7631787b4dcc87b1254cfd1e5ce48e96823dee8\",\"symbol\":\"SCL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x24dcc881e7dd730546834452f21872d5cb4b5293\",\"symbol\":\"SCRL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb1eef147028e9f480dbc5ccaa3277d417d1b85f0\",\"symbol\":\"Seele\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x67ab11058eF23D0a19178f61A050D3c38F81Ae21\",\"symbol\":\"SELF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa13f0743951b4f6e3e3aa039f682e17279f52bc3\",\"symbol\":\"SENC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4ca74185532dc1789527194e5b9c866dd33f4e82\",\"symbol\":\"SenSatorI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6745fAB6801e376cD24F03572B9C9B0D4EdDDCcf\",\"symbol\":\"SENSE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xa44e5137293e855b1b7bc7e2c6f8cd796ffcb037\",\"symbol\":\"SENT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe06eda7435ba749b047380ced49121dde93334ae\",\"symbol\":\"SET\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x98f5e9b7f0e33956c0443e81bf7deb8b5b1ed545\",\"symbol\":\"SEXY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa1ccc166faf0E998b3E33225A1A0301B1C86119D\",\"symbol\":\"SGEL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb2135ab9695a7678dd590b1a996cb0f37bcb0718\",\"symbol\":\"SGN\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x33c623a2baafeb8d15dfaf3ce44095efec83d72c\",\"symbol\":\"SGP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcb5a05bef3257613e984c17dbcf039952b6d883f\",\"symbol\":\"SGR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x37427576324fE1f3625c9102674772d7CF71377d\",\"symbol\":\"SGT (SelfieYo Gold Token)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd248B0D48E44aaF9c49aea0312be7E13a6dc1468\",\"symbol\":\"SGT (StatusGenesis)\",\"decimal\":1,\"type\":\"default\"},{\"address\":\"0xe25b0bba01dc5630312b6a21927e578061a13f55\",\"symbol\":\"SHIP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEF2E9966eb61BB494E5375d5Df8d67B7dB8A780D\",\"symbol\":\"SHIT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x8542325b72c6d9fc0ad2ca965a78435413a915a0\",\"symbol\":\"SHL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xef2463099360a085f1f10b076ed72ef625497a06\",\"symbol\":\"SHP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x980e45ab37c6bcaf93fe911b3e207e08a3a60b5e\",\"symbol\":\"SIBU\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0x8a187d5285d316bcbc9adafc08b51d70a0d8e000\",\"symbol\":\"SIFT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x6888a16eA9792c15A4DCF2f6C623D055c8eDe792\",\"symbol\":\"SIG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4af328c52921706dcb739f25786210499169afe6\",\"symbol\":\"SKB\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x13DB74B3cf512F65C4b91683940B4f3955E05085\",\"symbol\":\"SKE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x2bDC0D42996017fCe214b21607a515DA41A9E0C5\",\"symbol\":\"SKIN\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x048fe49be32adfc9ed68c37d32b5ec9df17b3603\",\"symbol\":\"SKM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd99b8a7fa48e25cce83b81812220a3e03bf64e5f\",\"symbol\":\"SKM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4994e81897a920c0FEA235eb8CEdEEd3c6fFF697\",\"symbol\":\"SKO1\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4c382F8E09615AC86E08CE58266CC227e7d4D913\",\"symbol\":\"SKR\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xfdFE8b7aB6CF1bD1E3d14538Ef40686296C42052\",\"symbol\":\"SKRP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6E34d8d84764D40f6D7b39cd569Fd017bF53177D\",\"symbol\":\"SKRP (Phase 1)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x324a48ebcbb46e61993931ef9d35f6697cd2901b\",\"symbol\":\"SKRP (Phase 1-E)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7297862B9670fF015192799cc849726c88bf1d77\",\"symbol\":\"SKYM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7A5fF295Dc8239d5C2374E4D894202aAF029Cab6\",\"symbol\":\"SLT\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x7928c8aBF1F74eF9F96D4D0a44e3b4209d360785\",\"symbol\":\"SLY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6F6DEb5db0C4994A8283A01D6CFeEB27Fc3bBe9C\",\"symbol\":\"SMART\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x39013f961c378f02c2b82a6e1d31e9812786fd9d\",\"symbol\":\"SMS\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x2dcfaac11c9eebd8c6c42103fe9e2a6ad237af27\",\"symbol\":\"SMT (Smart Node)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x55f93985431fc9304077687a35a1ba103dc1e081\",\"symbol\":\"SMT (SmartMesh)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x78Eb8DC641077F049f910659b6d580E80dC4d237\",\"symbol\":\"SMT (Social Media Market)\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x198a87b3114143913d4229fb0f6d4bcb44aa8aff\",\"symbol\":\"SNBL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xF4134146AF2d511Dd5EA8cDB1C4AC88C57D60404\",\"symbol\":\"SNC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf333b2Ace992ac2bBD8798bF57Bc65a06184afBa\",\"symbol\":\"SND\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xcFD6Ae8BF13f42DE14867351eAff7A8A3b9FbBe7\",\"symbol\":\"SNG\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xaeC2E87E0A235266D9C5ADc9DEb4b2E29b54D009\",\"symbol\":\"SNGLS\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x44F588aEeB8C44471439D1270B3603c66a9262F1\",\"symbol\":\"SNIP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x983F6d60db79ea8cA4eB9968C6aFf8cfA04B3c63\",\"symbol\":\"SNM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbdc5bac39dbe132b1e030e898ae3830017d7d969\",\"symbol\":\"SNOV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x744d70FDBE2Ba4CF95131626614a1763DF805B9E\",\"symbol\":\"SNT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2859021ee7f2cb10162e67f33af2d22764b31aff\",\"symbol\":\"SNTR\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xC011A72400E58ecD99Ee497CF89E3775d4bd732F\",\"symbol\":\"SNX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xD65960FAcb8E4a2dFcb2C2212cb2e44a02e2a57E\",\"symbol\":\"Soar\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x2d0e95bd4795d7ace0da3c0ff7b706a5970eb9d3\",\"symbol\":\"SOC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1f54638b7737193ffd86c19ec51907a7c41755d8\",\"symbol\":\"SOL\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x1c62aca2b7605db3606eacda7bc67a1857ddb8ff\",\"symbol\":\"SONIQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBb1f24C0c1554b9990222f036b0AaD6Ee4CAec29\",\"symbol\":\"SOUL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x42d6622dece394b54999fbd73d108123806f6a18\",\"symbol\":\"SPANK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x58bf7df57d9DA7113c4cCb49d8463D4908C735cb\",\"symbol\":\"SPARC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x24aef3bf1a47561500f9430d74ed4097c47f51f2\",\"symbol\":\"SPARTA\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x8f9bfe5b6a5c3fea8c64ad41a5cf6f60ec4aa47c\",\"symbol\":\"SPAZ\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1dea979ae76f26071870f824088da78979eb91c8\",\"symbol\":\"SPD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x85089389C14Bd9c77FC2b8F0c3d1dC3363Bf06Ef\",\"symbol\":\"SPF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3833dda0aeb6947b98ce454d89366cba8cc55528\",\"symbol\":\"SPHTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0324dd195d0cd53f9f07bee6a48ee7a20bad738f\",\"symbol\":\"SPICE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x92d7a89405ea3cc605a467e834236e09df60bf16\",\"symbol\":\"SPIRIT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x20F7A3DdF244dc9299975b4Da1C39F8D5D75f05A\",\"symbol\":\"SPN\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x05aaaa829afa407d83315cded1d45eb16025910c\",\"symbol\":\"SPX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x68d57c9a1C35f63E2c83eE8e49A64e9d70528D25\",\"symbol\":\"SRN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x32f3b8a00b6912d0314be212fe9538b7b9430c12\",\"symbol\":\"SRX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xbbFF862d906E348E9946Bfb2132ecB157Da3D4b4\",\"symbol\":\"SS (Sharder)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6e2050CBFB3eD8A4d39b64cC9f47E711a03a5a89\",\"symbol\":\"SSH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x624d520bab2e4ad83935fa503fb130614374e850\",\"symbol\":\"SSP\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x9a005c9a89bd72a4bd27721e7a09a3c11d2b03c4\",\"symbol\":\"STAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x286708f069225905194673755F12359e6afF6FE1\",\"symbol\":\"STACS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xF70a642bD387F94380fFb90451C2c81d4Eb82CBc\",\"symbol\":\"STAR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x09bca6ebab05ee2ae945be4eda51393d94bf7b99\",\"symbol\":\"STB\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x629aEe55ed49581C33ab27f9403F7992A289ffd5\",\"symbol\":\"STC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaE73B38d1c9A8b274127ec30160a4927C4d71824\",\"symbol\":\"STK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC1Ad68c43508dD5AdDb8d0ac0927dbE752d149D6\",\"symbol\":\"STL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x302ce6674a16b54ba1b8a49fed64c471ede6c174\",\"symbol\":\"STM\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x599346779e90fc3F5F997b5ea715349820F91571\",\"symbol\":\"STN\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC\",\"symbol\":\"STORJ\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xD0a4b8946Cb52f0661273bfbC6fD0E0C75Fc6433\",\"symbol\":\"STORM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xecd570bBf74761b960Fa04Cc10fe2c4e86FfDA36\",\"symbol\":\"STP\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x5c3a228510d246b78a3765c20221cbf3082b44a4\",\"symbol\":\"STQ\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBAE235823D7255D9D48635cEd4735227244Cd583\",\"symbol\":\"STR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x46492473755e8dF960F8034877F61732D718CE96\",\"symbol\":\"STRC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x0371a82e4a9d0a4312f3ee2ac9c6958512891372\",\"symbol\":\"STU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x006BeA43Baa3f7A6f765F14f10A1a1b08334EF45\",\"symbol\":\"STX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8D75959f1E61EC2571aa72798237101F084DE63a\",\"symbol\":\"SUB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe120c1ecbfdfea7f0a8f0ee30063491e8c26fedf\",\"symbol\":\"SUR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x57Ab1E02fEE23774580C119740129eAC7081e9D3\",\"symbol\":\"sUSD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbdeb4b83251fb146687fa19d1c660f99411eefe3\",\"symbol\":\"SVD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0bb217e40f8a5cb79adf04e1aab60e5abd0dfc1e\",\"symbol\":\"SWFTC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9e88613418cf03dca54d6a2cf6ad934a78c7a17a\",\"symbol\":\"SWM\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB9e7F8568e08d5659f5D29C4997173d84CdF2607\",\"symbol\":\"SWT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x12b306fa98f4cbb8d4457fdff3a0a0a56f07ccdf\",\"symbol\":\"SXDT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfcdae8771f8d28e3b9027ab58f4a20749767a097\",\"symbol\":\"SXR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x2c82c73d5b34aa015989462b2948cd616a37641f\",\"symbol\":\"SXUT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x10b123fddde003243199aad03522065dc05827a0\",\"symbol\":\"SYN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE7775A6e9Bcf904eb39DA2b68c5efb4F9360e08C\",\"symbol\":\"TaaS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x1d4ccc31dab6ea20f461d329a0562c1c58412515\",\"symbol\":\"TALAO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2C36204a0712A2a50E54A62F7c4F01867e78cB53\",\"symbol\":\"TAN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc27a2f05fa577a83ba0fdb4c38443c0718356501\",\"symbol\":\"TAU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x00006100F7090010005F1bd7aE6122c3C2CF0090\",\"symbol\":\"TAUD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x64786063a352b399d44de2875909d1229f120ebe\",\"symbol\":\"TAUR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x627974847450c45b60b3fe3598f4e6e4cf945b9a\",\"symbol\":\"TBC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xFACCD5Fc83c3E4C3c1AC1EF35D15adf06bCF209C\",\"symbol\":\"TBC2\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xAFe60511341a37488de25Bef351952562E31fCc1\",\"symbol\":\"TBT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3a92bd396aef82af98ebc0aa9030d25a23b11c6b\",\"symbol\":\"TBX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfA0eF5E034CaE1AE752d59bdb8aDcDe37Ed7aB97\",\"symbol\":\"TCA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x00000100F2A2bd000715001920eB70D229700085\",\"symbol\":\"TCAD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9972a0f24194447e73a7e8b6cd26a52e02ddfad5\",\"symbol\":\"TCH\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x28d7f432d24ba6020d1cbd4f28bedc5a82f24320\",\"symbol\":\"TCNX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9910f4AeD4A7550A4120ad7da8dF8b56E91197Fa\",\"symbol\":\"TCST\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xed82730312babb41367e060911f798002ffa445f\",\"symbol\":\"TCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2a1dbabe65c595B0022e75208C34014139d5d357\",\"symbol\":\"TDH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1c79ab32c66acaa1e9e81952b8aaa581b43e54e7\",\"symbol\":\"TEAM\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0xa1ba7186eec1be5114b0cf49b95b23adc4131b51\",\"symbol\":\"TECH\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x85e076361cc813a908ff672f9bad1541474402b2\",\"symbol\":\"TEL\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xEc32A9725C59855d841ba7d8D9c99c84ff754688\",\"symbol\":\"TEL (Meditel)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdd16ec0f66e54d453e6756713e533355989040e4\",\"symbol\":\"TEN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x515bA0a2E286AF10115284F151cF398688A69170\",\"symbol\":\"TENX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe5f166c0d8872b68790061317bb6cca04582c912\",\"symbol\":\"TFD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa7f976C360ebBeD4465c2855684D1AAE5271eFa9\",\"symbol\":\"TFL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf8e06e4e4a80287fdca5b02dccecaa9d0954840f\",\"symbol\":\"TGAME\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x00000000441378008EA67F4284A57932B1c000a5\",\"symbol\":\"TGBP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xac3da587eac229c9896d919abc235ca4fd7f72c1\",\"symbol\":\"TGT\",\"decimal\":1,\"type\":\"default\"},{\"address\":\"0xf96aa656ec0e0ac163590db372b430cf3c0d61ca\",\"symbol\":\"TGT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x96c30d5499ef6ea96a9c221bc18bc39d29c97f27\",\"symbol\":\"Thar\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3883f5e181fccaf8410fa61e12b59bad963fb645\",\"symbol\":\"THETA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0000852600CEB001E08e00bC008be620d60031F2\",\"symbol\":\"THKD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1cb3209d45b2a60b7fbca1ccdbf87f674237a4aa\",\"symbol\":\"THR\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x4f27053f32eda8af84956437bc00e5ffa7003287\",\"symbol\":\"THRT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfe7B915A0bAA0E79f85c5553266513F7C1c03Ed0\",\"symbol\":\"THUG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x614b9802D45Aa1bC2282651dC1408632F9027A6e\",\"symbol\":\"TIC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x72430a612adc007c50e3b6946dbb1bb0fd3101d1\",\"symbol\":\"TIC\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7F4B2A690605A7cbb66F7AA6885EbD906a5e2E9E\",\"symbol\":\"TICO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x999967e2ec8a74b7c8e9db19e039d920b31d39d0\",\"symbol\":\"TIE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeee2d00eb7deb8dd6924187f5aa3496b7d06e62a\",\"symbol\":\"TIG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6531f133e6DeeBe7F2dcE5A0441aA7ef330B4e53\",\"symbol\":\"TIME\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x80bc5512561c7f85a3a9508c7df7901b370fa1df\",\"symbol\":\"TIO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEa1f346faF023F974Eb5adaf088BbCdf02d761F4\",\"symbol\":\"TIX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdae1baf249964bc4b6ac98c3122f0e3e785fd279\",\"symbol\":\"TKA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0675daa94725a528b05a3a88635c03ea964bfa7e\",\"symbol\":\"TKLN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaAAf91D9b90dF800Df4F55c205fd6989c977E73a\",\"symbol\":\"TKN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xb45a50545beeab73f38f31e5973768c421805e5e\",\"symbol\":\"TKR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb3616550abc8af79c7a5902def9efa3bc9a95200\",\"symbol\":\"TLX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3209f98bebf0149b769ce26d71f7aea8e435efea\",\"symbol\":\"TMT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x10086399dd8c1e3de736724af52587a2044c9fa2\",\"symbol\":\"TMTG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb0280743b44bf7db4b6be482b2ba7b75e5da096c\",\"symbol\":\"TNS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x08f5a9235b08173b7569f83645d2c7fb55e8ccd8\",\"symbol\":\"TNT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x9a49f02e128a8e989b443a8f94843c0918bf45e7\",\"symbol\":\"TOK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8b353021189375591723e7384262f45709a3c3dc\",\"symbol\":\"TOMO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8eb965ee9cCFBCE76c0a06264492c0afEfc2826d\",\"symbol\":\"TOOR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaa7a9ca87d3694b5755f213b5d04094b8d0f0a6f\",\"symbol\":\"TRAC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x12759512d326303b45f1cec8f7b6fd96f387778e\",\"symbol\":\"TRAK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xdb52a87cda28eda00f8add1c79c9db4a50a70457\",\"symbol\":\"TRC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcB3F902bf97626391bF8bA87264bbC3DC13469be\",\"symbol\":\"TRC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x566Fd7999B1Fc3988022bD38507A48F0bCf22c77\",\"symbol\":\"TRCN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x30ceCB5461A449A90081F5a5F55db4e048397BAB\",\"symbol\":\"TRCT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x33f90dee07c6e8b9682dd20f73e6c358b2ed0f03\",\"symbol\":\"TRDT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xcb94be6f13a1182e4a4b6140cb7bf2025d28e41b\",\"symbol\":\"TRST\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x6B87999bE87358065bBdE41e8a0fe0B7b1cd2514\",\"symbol\":\"TSW\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xaab606817809841e8b1168be8779eeaf6744ef64\",\"symbol\":\"TTA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9389434852b94bbad4c8afed5b7bdbc5ff0c2275\",\"symbol\":\"TTC (TTC)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9cda8a60dd5afa156c95bd974428d91a0812e054\",\"symbol\":\"TTU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa838be6e4b760e6061d4732d6b9f11bf578f9a76\",\"symbol\":\"TTV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0000000000085d4780B73119b644AE5ecd22b376\",\"symbol\":\"TUSD (New)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8dd5fbce2f6a956c3022ba3663759011dd51e73e\",\"symbol\":\"TUSD (Old)\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2eF1aB8a26187C58BB8aAeB11B2fC6D25C5c0716\",\"symbol\":\"TWN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6704b673c70de9bf74c8fba4b4bd748f0e2190e1\",\"symbol\":\"UBEX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8400d94a5cb0fa0d041a3788e395285d61c9ee5e\",\"symbol\":\"UBT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x92e52a1a235d9a103d970901066ce910aacefd37\",\"symbol\":\"UCASH\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x2adba23cf1252de095aced801e758b369ec10426\",\"symbol\":\"UCBI\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xaaf37055188feee4869de63464937e683d61b2a1\",\"symbol\":\"UCN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xea097a2b1db00627b2fa17460ad260c016016977\",\"symbol\":\"UFR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x24692791bc444c5cd0b81e3cbcaba4b04acd1f3b\",\"symbol\":\"UKG\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8e5afc69f6227a3ad75ed346c8723bc62ce97123\",\"symbol\":\"UMKA\",\"decimal\":4,\"type\":\"default\"},{\"address\":\"0x89205A3A3b2A69De6Dbf7f01ED13B2108B2c43e7\",\"symbol\":\"Unicorn\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x6ba460ab75cd2c56343b3517ffeba60748654d26\",\"symbol\":\"UP\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xc86d054809623432210c107af2e3f619dcfbf652\",\"symbol\":\"UPP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd01db73e047855efb414e6202098c4be4cd2423b\",\"symbol\":\"UQC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x931684139f756C24eC0731E9F74FE50e5548dDeF\",\"symbol\":\"URB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfB0aaA0432112779d9AC483D9d5E3961ecE18eec\",\"symbol\":\"USD-G\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\"symbol\":\"USDC\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xD760ADdFb24D9C01Fe4Bfea7475C5e3636684058\",\"symbol\":\"USDM\",\"decimal\":2,\"type\":\"default\"},{\"address\":\"0xA4Bdb11dc0a2bEC88d24A3aa1E6Bb17201112eBe\",\"symbol\":\"USDS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xdac17f958d2ee523a2206206994597c13d831ec7\",\"symbol\":\"USDT\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xeb269732ab75A6fD61Ea60b06fE994cD32a83549\",\"symbol\":\"USDx\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x70a72833d6bf7f508c8224ce59ea1ef3d0ea3a38\",\"symbol\":\"UTK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9e3319636e2126e3c0bc9e3134AEC5e1508A46c7\",\"symbol\":\"UTN-P\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x16f812be7fff02caf662b85d5d58a5da6572d4df\",\"symbol\":\"UTT\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x3543638eD4a9006E4840B105944271Bcea15605D\",\"symbol\":\"UUU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x297e4e5e59ad72b1b0a2fd446929e76117be0e0a\",\"symbol\":\"VALOR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6dccf9c0ab71dac26b7f7886e43a2b433806c590\",\"symbol\":\"VBX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9a9bB9b4b11BF8eccff84B58a6CCCCD4058A7f0D\",\"symbol\":\"VD\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x57C75ECCc8557136D32619a191fBCDc88560d711\",\"symbol\":\"VDG\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x82BD526bDB718C6d4DD2291Ed013A5186cAE2DCa\",\"symbol\":\"VDOC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x340d2bde5eb28c1eed91b2f790723e3b160613b7\",\"symbol\":\"VEE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfade17a07ba3b480aa1714c3724a52d4c57d410e\",\"symbol\":\"VEGAN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xD850942eF8811f2A866692A623011bDE52a462C1\",\"symbol\":\"VEN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xEbeD4fF9fe34413db8fC8294556BBD1528a4DAca\",\"symbol\":\"VENUS\",\"decimal\":3,\"type\":\"default\"},{\"address\":\"0x8f3470A7388c05eE4e7AF3d01D8C722b0FF52374\",\"symbol\":\"VERI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1b879d3812f2ade1214264655b473910e0caf1e6\",\"symbol\":\"VERSI\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x2C974B2d0BA1716E644c1FC59982a89DDD2fF724\",\"symbol\":\"VIB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe8ff5c9c75deb346acac493c463c8950be03dfba\",\"symbol\":\"VIBE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x882448f83d90b2bf477af2ea79327fdea1335d93\",\"symbol\":\"VIBEX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x445f51299ef3307dbd75036dd896565f5b4bf7a5\",\"symbol\":\"VIDT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf03f8d65bafa598611c3495124093c56e8f638f0\",\"symbol\":\"VIEW\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd2946be786f35c3cc402c29b323647abda799071\",\"symbol\":\"VIKKY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf3e014fe81267870624132ef3a646b8e83853a96\",\"symbol\":\"VIN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x23b75Bc7AaF28e2d6628C3f424B3882F8f072a3c\",\"symbol\":\"VIT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1b793e49237758dbd8b752afc9eb4b329d5da016\",\"symbol\":\"VITE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x519475b31653e46d20cd09f9fdcf3b12bdacb4f5\",\"symbol\":\"VIU\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x922ac473a3cc241fd3a0049ed14536452d58d73c\",\"symbol\":\"VLD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd811250b7fe83150cbb3d70a892fce6189fb3e08\",\"symbol\":\"VMC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC650f5514AE1A3a27930922145ce49E8A91b91AB\",\"symbol\":\"VNTY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xc3bc9eb71f75ec439a6b6c8e8b746fcf5b62f703\",\"symbol\":\"VOC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x83eEA00D838f92dEC4D1475697B9f4D3537b56E3\",\"symbol\":\"VOISE\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf722b01910f93b84eda9ca128b9f05821a41eae1\",\"symbol\":\"VRE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xeDBaF3c5100302dCddA53269322f3730b1F0416d\",\"symbol\":\"VRS\",\"decimal\":5,\"type\":\"default\"},{\"address\":\"0x92e78dae1315067a8819efd6dca432de9dcde2e9\",\"symbol\":\"VRS\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0xba3a79d758f19efe588247388754b8e4d6edda81\",\"symbol\":\"VSF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x5c543e7AE0A1104f78406C340E9C64FD9fCE5170\",\"symbol\":\"VSL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9720b467a710382A232a32F540bDCed7d662a10B\",\"symbol\":\"VZT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4bbbc57af270138ef2ff2c50dbfad684e9e0e604\",\"symbol\":\"WAB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x286BDA1413a2Df81731D4930ce2F862a35A609fE\",\"symbol\":\"WaBi\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x9f6513ED2b0DE89218E97DB4A5115ba04Be449f1\",\"symbol\":\"WAK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x829A4cA1303383F1082B6B1fB937116e4b3b5605\",\"symbol\":\"WATT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x39Bb259F66E1C59d5ABEF88375979b4D20D98022\",\"symbol\":\"WAX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x217f96737b39f9b9211767cb6aef5dbae2fe9402\",\"symbol\":\"WAY\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x74951B677de32D596EE851A233336926e6A2cd09\",\"symbol\":\"WBA\",\"decimal\":7,\"type\":\"default\"},{\"address\":\"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\"symbol\":\"WBTC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6a0a97e47d15aad1d132a1ac79a480e3f2079063\",\"symbol\":\"WCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x840fe75abfadc0f2d54037829571b2782e919ce4\",\"symbol\":\"WEB\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\"symbol\":\"WETH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf4fe95603881d0e07954fd7605e0e9a916e42c44\",\"symbol\":\"WHEN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe933c0Cd9784414d5F278C114904F5A84b396919\",\"symbol\":\"WHO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x3F17Dd476faF0a4855572F0B6ed5115D9bBA22AD\",\"symbol\":\"WIB\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x5e4ABE6419650CA839Ce5BB7Db422b881a6064bB\",\"symbol\":\"WiC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x62cd07d414ec50b68c7ecaa863a23d344f2d062f\",\"symbol\":\"WIC\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xD3C00772B24D997A812249ca637a921e81357701\",\"symbol\":\"WILD\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x899338b84d25ac505a332adce7402d697d947494\",\"symbol\":\"WIN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x667088b212ce3d06a1b553a7221E1fD19000d9aF\",\"symbol\":\"WINGS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1b22c32cd936cb97c28c5690a0695a82abf688e6\",\"symbol\":\"WISH\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xF6B55acBBC49f4524Aa48D19281A9A77c54DE10f\",\"symbol\":\"WLK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbfbe5332f172d77811bc6c272844f3e54a7b23bb\",\"symbol\":\"WMK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xd73A66B8FB26Be8B0AcD7c52Bd325054Ac7d468b\",\"symbol\":\"WNK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf9d9702d031407f425a4412682fdc56b07d05262\",\"symbol\":\"WOC\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x728781E75735dc0962Df3a51d7Ef47E798A7107E\",\"symbol\":\"WOLK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa686514faf7d54289266f483d1e4852c99e13ec7\",\"symbol\":\"WORK\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x4CF488387F035FF08c371515562CBa712f9015d4\",\"symbol\":\"WPR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x72adadb447784dd7ab1f472467750fc485e4cb2d\",\"symbol\":\"WRC\",\"decimal\":6,\"type\":\"default\"},{\"address\":\"0x71e8d74ff1c923e369d0e70dfb09866629c4dd35\",\"symbol\":\"WRK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1d9a3cef66b01d44003b9db0e00ec3fd44746988\",\"symbol\":\"WSS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb7cb1c96db6b22b0d3d9536e0108d062bd488f74\",\"symbol\":\"WTC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x84119cb33e8f590d75c2d6ea4e6b0741a7494eda\",\"symbol\":\"WTT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0xd8950fDeaa10304B7A7Fd03a2FC66BC39f3c711a\",\"symbol\":\"WYS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff\",\"symbol\":\"WYV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x910Dfc18D6EA3D6a7124A6F8B5458F281060fa4c\",\"symbol\":\"X8X\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4DF812F6064def1e5e029f1ca858777CC98D2D81\",\"symbol\":\"XAUR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x49aec0752e68d0282db544c677f6ba407ba17ed7\",\"symbol\":\"XBL\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x28dee01d53fed0edf5f6e310bf8ef9311513ae40\",\"symbol\":\"XBP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x4d829f8c92a6691c56300d020c9e0db984cfe2ba\",\"symbol\":\"XCC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB4272071eCAdd69d933AdcD19cA99fe80664fc08\",\"symbol\":\"XCHF\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0843971b4ac6e842a518aa184e0271d88b5cb74f\",\"symbol\":\"XCL\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1e26b3d07e57f453cae30f7ddd2f945f5bf3ef33\",\"symbol\":\"XCLR\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x41ab1b6fcbb2fa9dced81acbdec13ea6315f2bf2\",\"symbol\":\"XDCE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa017ac5fac5941f95010b12570b812c974469c2c\",\"symbol\":\"XES\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x054c64741dbafdc19784505494029823d89c3b13\",\"symbol\":\"XET\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x16aF5bfb4Ae7E475b9aDC3Bf5Cb2f1E6a50d7940\",\"symbol\":\"XFS\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xf6b6aa0ef0f5edc2c1c5d925477f97eaf66303e7\",\"symbol\":\"XGG\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x533ef0984b2FAA227AcC620C67cce12aA39CD8CD\",\"symbol\":\"XGM\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x30f4A3e0aB7a76733D8b60b89DD93c3D0b4c9E2f\",\"symbol\":\"XGT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB110eC7B1dcb8FAB8dEDbf28f53Bc63eA5BEdd84\",\"symbol\":\"XID\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x1d086b868d78040635cb8600ba733f12db48cb42\",\"symbol\":\"XLX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x44449Fa4d607F807d1eD4a69ad942971728391C8\",\"symbol\":\"XMCT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0f8c45b896784a1e408526b9300519ef8660209c\",\"symbol\":\"XMX\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xBC86727E770de68B1060C91f6BB6945c73e10388\",\"symbol\":\"XNK\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xab95e915c123fded5bdfb6325e35ef5515f1ea69\",\"symbol\":\"XNN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x572e6f318056ba0c5d47a422653113843d250691\",\"symbol\":\"XNT\",\"decimal\":0,\"type\":\"default\"},{\"address\":\"0x153ed9cc1b792979d2bde0bbf45cc2a7e436a5f9\",\"symbol\":\"XOV\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x90528aeb3a2b736b780fd1b6c478bb7e1d643170\",\"symbol\":\"XPA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xBB1fA4FdEB3459733bF67EbC6f893003fA976a82\",\"symbol\":\"XPAT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xbc7ed0c8cf986ae62337fc8df3b02c6ec87310ed\",\"symbol\":\"XPAY\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xB24754bE79281553dc1adC160ddF5Cd9b74361a4\",\"symbol\":\"XRL\",\"decimal\":9,\"type\":\"default\"},{\"address\":\"0x0F513fFb4926ff82D7F60A05069047AcA295C413\",\"symbol\":\"XSC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x55296f69f40ea6d20e478533c15a6b08b654e758\",\"symbol\":\"XYO\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x922105fad8153f516bcfb829f56dc097a0e1d705\",\"symbol\":\"YEE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xca2796f9f61dc7b238aab043971e49c6164df375\",\"symbol\":\"YEED\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x1bc7c1de0ac6ef4fdec35c053030d90cf54c7e9a\",\"symbol\":\"YNN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xcbeaec699431857fdb4d37addbbdc20e132d4903\",\"symbol\":\"YOYOW\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x534546c490a4ed2a9d0c3555447bb9b4b01bcb9e\",\"symbol\":\"YTRO\",\"decimal\":17,\"type\":\"default\"},{\"address\":\"0xd9a12cde03a86e800496469858de8581d3a5353d\",\"symbol\":\"YUP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x0F33bb20a282A7649C7B3AFf644F084a9348e933\",\"symbol\":\"YUPIE\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x6781a0f84c7e9e846dcb84a9a5bd49333067b104\",\"symbol\":\"ZAP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb9EF770B6A5e12E45983C5D80545258aA38F3B78\",\"symbol\":\"ZCN\",\"decimal\":10,\"type\":\"default\"},{\"address\":\"0x2008e3057bd734e10ad13c9eae45ff132abc1722\",\"symbol\":\"ZCO\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x7a2810d3d859ed03ede523eb801a3b43b5e8979c\",\"symbol\":\"ZDC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x8188e51bc678f0070531f0e782718df0027452de\",\"symbol\":\"ZERA\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xe7e4279b80d319ede2889855135a22021baf0907\",\"symbol\":\"ZEUS\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x05f4a42e251f2d52b8ed15E9FEdAacFcEF1FAD27\",\"symbol\":\"ZIL\",\"decimal\":12,\"type\":\"default\"},{\"address\":\"0x4aac461c86abfa71e9d00d9a2cde8d74e4e1aeea\",\"symbol\":\"ZINC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xa9d2927d3a04309e008b6af6e2e282ae2952e7fd\",\"symbol\":\"ZIP\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xedd7c94fd7b4971b916d15067bc454b9e1bad980\",\"symbol\":\"ZIPT\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xf3C092cA8CD6D3d4ca004Dc1d0f1fe8CcAB53599\",\"symbol\":\"ZIX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xfd8971d5e8e1740ce2d0a84095fca4de729d0c16\",\"symbol\":\"ZLA\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe25faab5821ce70ba4179a70c1d481ba45b9d0c9\",\"symbol\":\"ZMAN\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0x554ffc77f4251a9fb3c0e3590a6a205f8d4e067d\",\"symbol\":\"ZMN\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xb5b8f5616fe42d5ceca3e87f3fddbdd8f496d760\",\"symbol\":\"ZPR\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xE41d2489571d322189246DaFA5ebDe1F4699F498\",\"symbol\":\"ZRX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x7A41e0517a5ecA4FdbC7FbebA4D4c47B9fF6DC63\",\"symbol\":\"ZSC\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0xe386b139ed3715ca4b18fd52671bdcea1cdfe4b1\",\"symbol\":\"ZST\",\"decimal\":8,\"type\":\"default\"},{\"address\":\"0xE8F9fa977ea585591d9F394681318C16552577fB\",\"symbol\":\"ZTX\",\"decimal\":18,\"type\":\"default\"},{\"address\":\"0x83e2be8d114f9661221384b3a50d24b96a5653f5\",\"symbol\":\"ZXC\",\"decimal\":18,\"type\":\"default\"}]');\n\n//# sourceURL=webpack://bitmix/./src/coins.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;